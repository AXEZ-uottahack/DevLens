{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/event/InternalMouseEvent.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { getClientX, getClientY, getSource, isMouseEvent, isPopupTrigger, } from '../../util/EventUtils';\nimport { isAncestorNode } from '../../util/domUtils';\n/**\n * Base class for all mouse events in mxGraph. A listener for this event should\n * implement the following methods:\n *\n * ```javascript\n * graph.addMouseListener(\n * {\n *   mouseDown: (sender, evt)=>\n *   {\n *     GlobalConfig.logger.debug('mouseDown');\n *   },\n *   mouseMove: (sender, evt)=>\n *   {\n *     GlobalConfig.logger.debug('mouseMove');\n *   },\n *   mouseUp: (sender, evt)=>\n *   {\n *     GlobalConfig.logger.debug('mouseUp');\n *   }\n * });\n * ```\n *\n * Constructor: mxMouseEvent\n *\n * Constructs a new event object for the given arguments.\n *\n * @param evt Native mouse event.\n * @param state Optional <CellState> under the mouse.\n */\nclass InternalMouseEvent {\n    constructor(evt, state = null) {\n        /**\n         * Holds the consumed state of this event.\n         */\n        this.consumed = false;\n        this.evt = evt;\n        this.state = state;\n        this.sourceState = state;\n        // graphX and graphY are updated right after this constructor is executed,\n        // so let them default to 0 and make them not nullable.\n        this.graphX = 0;\n        this.graphY = 0;\n    }\n    /**\n     * Returns <evt>.\n     */\n    getEvent() {\n        return this.evt;\n    }\n    /**\n     * Returns the target DOM element using {@link Event#getSource} for <evt>.\n     */\n    getSource() {\n        return getSource(this.evt);\n    }\n    /**\n     * Returns true if the given {@link Shape} is the source of <evt>.\n     */\n    isSource(shape) {\n        return shape ? isAncestorNode(shape.node, this.getSource()) : false;\n    }\n    /**\n     * Returns <evt.clientX>.\n     */\n    getX() {\n        return getClientX(this.getEvent());\n    }\n    /**\n     * Returns <evt.clientY>.\n     */\n    getY() {\n        return getClientY(this.getEvent());\n    }\n    /**\n     * Returns <graphX>.\n     */\n    getGraphX() {\n        return this.graphX;\n    }\n    /**\n     * Returns <graphY>.\n     */\n    getGraphY() {\n        return this.graphY;\n    }\n    /**\n     * Returns <state>.\n     */\n    getState() {\n        return this.state;\n    }\n    /**\n     * Returns the <Cell> in <state> is not null.\n     */\n    getCell() {\n        const state = this.getState();\n        return state ? state.cell : null;\n    }\n    /**\n     * Returns true if the event is a popup trigger.\n     */\n    isPopupTrigger() {\n        return isPopupTrigger(this.getEvent());\n    }\n    /**\n     * Returns <consumed>.\n     */\n    isConsumed() {\n        return this.consumed;\n    }\n    /**\n     * Sets <consumed> to true and invokes preventDefault on the native event\n     * if such a method is defined. This is used mainly to avoid the cursor from\n     * being changed to a text cursor in Webkit. You can use the preventDefault\n     * flag to disable this functionality.\n     *\n     * @param preventDefault Specifies if the native event should be canceled. Default\n     * is true.\n     */\n    consume(preventDefault) {\n        preventDefault = preventDefault\n            ? preventDefault\n            : (window.TouchEvent && this.evt instanceof TouchEvent) || isMouseEvent(this.evt);\n        if (preventDefault && this.evt.preventDefault) {\n            this.evt.preventDefault();\n        }\n        // Sets local consumed state\n        this.consumed = true;\n    }\n}\nexport default InternalMouseEvent;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;;AACA;AACA;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA4BC,GACD,MAAM;IACF,YAAY,GAAG,EAAE,QAAQ,IAAI,CAAE;QAC3B;;SAEC,GACD,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,WAAW,GAAG;QACnB,0EAA0E;QAC1E,uDAAuD;QACvD,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,MAAM,GAAG;IAClB;IACA;;KAEC,GACD,WAAW;QACP,OAAO,IAAI,CAAC,GAAG;IACnB;IACA;;KAEC,GACD,YAAY;QACR,OAAO,CAAA,GAAA,+JAAA,CAAA,YAAS,AAAD,EAAE,IAAI,CAAC,GAAG;IAC7B;IACA;;KAEC,GACD,SAAS,KAAK,EAAE;QACZ,OAAO,QAAQ,CAAA,GAAA,6JAAA,CAAA,iBAAc,AAAD,EAAE,MAAM,IAAI,EAAE,IAAI,CAAC,SAAS,MAAM;IAClE;IACA;;KAEC,GACD,OAAO;QACH,OAAO,CAAA,GAAA,+JAAA,CAAA,aAAU,AAAD,EAAE,IAAI,CAAC,QAAQ;IACnC;IACA;;KAEC,GACD,OAAO;QACH,OAAO,CAAA,GAAA,+JAAA,CAAA,aAAU,AAAD,EAAE,IAAI,CAAC,QAAQ;IACnC;IACA;;KAEC,GACD,YAAY;QACR,OAAO,IAAI,CAAC,MAAM;IACtB;IACA;;KAEC,GACD,YAAY;QACR,OAAO,IAAI,CAAC,MAAM;IACtB;IACA;;KAEC,GACD,WAAW;QACP,OAAO,IAAI,CAAC,KAAK;IACrB;IACA;;KAEC,GACD,UAAU;QACN,MAAM,QAAQ,IAAI,CAAC,QAAQ;QAC3B,OAAO,QAAQ,MAAM,IAAI,GAAG;IAChC;IACA;;KAEC,GACD,iBAAiB;QACb,OAAO,CAAA,GAAA,+JAAA,CAAA,iBAAc,AAAD,EAAE,IAAI,CAAC,QAAQ;IACvC;IACA;;KAEC,GACD,aAAa;QACT,OAAO,IAAI,CAAC,QAAQ;IACxB;IACA;;;;;;;;KAQC,GACD,QAAQ,cAAc,EAAE;QACpB,iBAAiB,iBACX,iBACA,AAAC,OAAO,UAAU,IAAI,IAAI,CAAC,GAAG,YAAY,cAAe,CAAA,GAAA,+JAAA,CAAA,eAAY,AAAD,EAAE,IAAI,CAAC,GAAG;QACpF,IAAI,kBAAkB,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE;YAC3C,IAAI,CAAC,GAAG,CAAC,cAAc;QAC3B;QACA,4BAA4B;QAC5B,IAAI,CAAC,QAAQ,GAAG;IACpB;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/event/InternalEvent.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport InternalMouseEvent from './InternalMouseEvent';\nimport Client from '../../Client';\nimport { isConsumed, isMouseEvent } from '../../util/EventUtils';\n// Checks if passive event listeners are supported\n// see https://github.com/Modernizr/Modernizr/issues/1894\nlet supportsPassive = false;\ntry {\n    document.addEventListener('test', () => {\n        return;\n    }, Object.defineProperty &&\n        Object.defineProperty({}, 'passive', {\n            get: () => {\n                supportsPassive = true;\n            },\n        }));\n}\ncatch (e) {\n    // ignore\n}\n/**\n * @class InternalEvent\n *\n * Cross-browser DOM event support. For internal event handling,\n * {@link mxEventSource} and the graph event dispatch loop in {@link graph} are used.\n *\n * ### Memory Leaks:\n *\n * Use this class for adding and removing listeners to/from DOM nodes. The\n * {@link removeAllListeners} function is provided to remove all listeners that\n * have been added using {@link addListener}. The function should be invoked when\n * the last reference is removed in the JavaScript code, typically when the\n * referenced DOM node is removed from the DOM.\n */\nclass InternalEvent {\n    /**\n     * Binds the function to the specified event on the given element. Use\n     * {@link mxUtils.bind} in order to bind the \"this\" keyword inside the function\n     * to a given execution scope.\n     */\n    static addListener(element, eventName, funct) {\n        element.addEventListener(eventName, funct, supportsPassive ? { passive: false } : false);\n        if (!element.mxListenerList) {\n            element.mxListenerList = [];\n        }\n        const entry = { name: eventName, f: funct };\n        element.mxListenerList.push(entry);\n    }\n    /**\n     * Removes the specified listener from the given element.\n     */\n    static removeListener(element, eventName, funct) {\n        element.removeEventListener(eventName, funct, false);\n        if (element.mxListenerList) {\n            const listenerCount = element.mxListenerList.length;\n            for (let i = 0; i < listenerCount; i += 1) {\n                const entry = element.mxListenerList[i];\n                if (entry.f === funct) {\n                    element.mxListenerList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    }\n    /**\n     * Removes all listeners from the given element.\n     */\n    static removeAllListeners(element) {\n        const list = element.mxListenerList;\n        if (list) {\n            while (list.length > 0) {\n                const entry = list[0];\n                InternalEvent.removeListener(element, entry.name, entry.f);\n            }\n        }\n    }\n    /**\n     * Adds the given listeners for touch, mouse and/or pointer events. If\n     * <Client.IS_POINTER> is true then pointer events will be registered,\n     * else the respective mouse events will be registered. If <Client.IS_POINTER>\n     * is false and <Client.IS_TOUCH> is true then the respective touch events\n     * will be registered as well as the mouse events.\n     */\n    static addGestureListeners(node, startListener = null, moveListener = null, endListener = null) {\n        if (startListener) {\n            InternalEvent.addListener(node, Client.IS_POINTER ? 'pointerdown' : 'mousedown', startListener);\n        }\n        if (moveListener) {\n            InternalEvent.addListener(node, Client.IS_POINTER ? 'pointermove' : 'mousemove', moveListener);\n        }\n        if (endListener) {\n            InternalEvent.addListener(node, Client.IS_POINTER ? 'pointerup' : 'mouseup', endListener);\n        }\n        if (!Client.IS_POINTER && Client.IS_TOUCH) {\n            if (startListener) {\n                InternalEvent.addListener(node, 'touchstart', startListener);\n            }\n            if (moveListener) {\n                InternalEvent.addListener(node, 'touchmove', moveListener);\n            }\n            if (endListener) {\n                InternalEvent.addListener(node, 'touchend', endListener);\n            }\n        }\n    }\n    /**\n     * Removes the given listeners from mousedown, mousemove, mouseup and the\n     * respective touch events if <Client.IS_TOUCH> is true.\n     */\n    static removeGestureListeners(node, startListener, moveListener, endListener) {\n        if (startListener) {\n            InternalEvent.removeListener(node, Client.IS_POINTER ? 'pointerdown' : 'mousedown', startListener);\n        }\n        if (moveListener) {\n            InternalEvent.removeListener(node, Client.IS_POINTER ? 'pointermove' : 'mousemove', moveListener);\n        }\n        if (endListener) {\n            InternalEvent.removeListener(node, Client.IS_POINTER ? 'pointerup' : 'mouseup', endListener);\n        }\n        if (!Client.IS_POINTER && Client.IS_TOUCH) {\n            if (startListener) {\n                InternalEvent.removeListener(node, 'touchstart', startListener);\n            }\n            if (moveListener) {\n                InternalEvent.removeListener(node, 'touchmove', moveListener);\n            }\n            if (endListener) {\n                InternalEvent.removeListener(node, 'touchend', endListener);\n            }\n        }\n    }\n    /**\n     * Redirects the mouse events from the given DOM node to the graph dispatch\n     * loop using the event and given state as event arguments. State can\n     * either be an instance of <CellState> or a function that returns an\n     * <CellState>. The down, move, up and dblClick arguments are optional\n     * functions that take the trigger event as arguments and replace the\n     * default behaviour.\n     */\n    static redirectMouseEvents(node, graph, state = null, down = null, move = null, up = null, dblClick = null) {\n        const getState = (evt) => {\n            return typeof state === 'function' ? state(evt) : state;\n        };\n        InternalEvent.addGestureListeners(node, (evt) => {\n            if (down) {\n                down(evt);\n            }\n            else if (!isConsumed(evt)) {\n                graph.fireMouseEvent(InternalEvent.MOUSE_DOWN, new InternalMouseEvent(evt, getState(evt)));\n            }\n        }, (evt) => {\n            if (move) {\n                move(evt);\n            }\n            else if (!isConsumed(evt)) {\n                graph.fireMouseEvent(InternalEvent.MOUSE_MOVE, new InternalMouseEvent(evt, getState(evt)));\n            }\n        }, (evt) => {\n            if (up) {\n                up(evt);\n            }\n            else if (!isConsumed(evt)) {\n                graph.fireMouseEvent(InternalEvent.MOUSE_UP, new InternalMouseEvent(evt, getState(evt)));\n            }\n        });\n        InternalEvent.addListener(node, 'dblclick', (evt) => {\n            if (dblClick) {\n                dblClick(evt);\n            }\n            else if (!isConsumed(evt)) {\n                const tmp = getState(evt);\n                graph.dblClick(evt, tmp?.cell);\n            }\n        });\n    }\n    /**\n     * Removes the known listeners from the given DOM node and its descendants.\n     *\n     * @param element DOM node to remove the listeners from.\n     */\n    static release(element) {\n        try {\n            InternalEvent.removeAllListeners(element);\n            // @ts-ignore\n            const children = element.childNodes;\n            if (children !== undefined) {\n                const childCount = children.length;\n                for (let i = 0; i < childCount; i += 1) {\n                    InternalEvent.release(children[i]);\n                }\n            }\n        }\n        catch (e) {\n            // ignores errors as this is typically called in cleanup code\n        }\n    }\n    /**\n     * Installs the given function as a handler for mouse wheel events. The\n     * function has two arguments: the mouse event and a boolean that specifies\n     * if the wheel was moved up or down.\n     *\n     * This has been tested with IE 6 and 7, Firefox (all versions), Opera and\n     * Safari. It does currently not work on Safari for Mac.\n     *\n     * ### Example\n     *\n     * @example\n     * ```javascript\n     * mxEvent.addMouseWheelListener(function (evt, up)\n     * {\n     *   GlobalConfig.logger.show();\n     *   GlobalConfig.logger.debug('mouseWheel: up='+up);\n     * });\n     * ```\n     *\n     * @param funct Handler function that takes the event argument and a boolean up\n     * argument for the mousewheel direction.\n     * @param target Target for installing the listener in Google Chrome. See\n     * https://www.chromestatus.com/features/6662647093133312.\n     */\n    static addMouseWheelListener(funct, target) {\n        if (funct != null) {\n            const wheelHandler = (evt) => {\n                // To prevent window zoom on trackpad pinch\n                if (evt.ctrlKey) {\n                    evt.preventDefault();\n                }\n                // Handles the event using the given function\n                if (Math.abs(evt.deltaX) > 0.5 || Math.abs(evt.deltaY) > 0.5) {\n                    funct(evt, evt.deltaY == 0 ? -evt.deltaX > 0 : -evt.deltaY > 0);\n                }\n            };\n            target = target != null ? target : window;\n            if (Client.IS_SF && !Client.IS_TOUCH) {\n                let scale = 1;\n                InternalEvent.addListener(target, 'gesturestart', (evt) => {\n                    InternalEvent.consume(evt);\n                    scale = 1;\n                });\n                InternalEvent.addListener(target, 'gesturechange', ((evt) => {\n                    InternalEvent.consume(evt);\n                    if (typeof evt.scale === 'number') {\n                        const diff = scale - evt.scale;\n                        if (Math.abs(diff) > 0.2) {\n                            funct(evt, diff < 0, true);\n                            scale = evt.scale;\n                        }\n                    }\n                }));\n                InternalEvent.addListener(target, 'gestureend', (evt) => {\n                    InternalEvent.consume(evt);\n                });\n            }\n            else {\n                let evtCache = [];\n                let dx0 = 0;\n                let dy0 = 0;\n                // Adds basic listeners for graph event dispatching\n                InternalEvent.addGestureListeners(target, ((evt) => {\n                    if (!isMouseEvent(evt) && evt.pointerId != null) {\n                        evtCache.push(evt);\n                    }\n                }), ((evt) => {\n                    if (!isMouseEvent(evt) && evtCache.length == 2) {\n                        // Find this event in the cache and update its record with this event\n                        for (let i = 0; i < evtCache.length; i += 1) {\n                            if (evt.pointerId == evtCache[i].pointerId) {\n                                evtCache[i] = evt;\n                                break;\n                            }\n                        }\n                        // Calculate the distance between the two pointers\n                        const dx = Math.abs(evtCache[0].clientX - evtCache[1].clientX);\n                        const dy = Math.abs(evtCache[0].clientY - evtCache[1].clientY);\n                        const tx = Math.abs(dx - dx0);\n                        const ty = Math.abs(dy - dy0);\n                        if (tx > InternalEvent.PINCH_THRESHOLD ||\n                            ty > InternalEvent.PINCH_THRESHOLD) {\n                            const cx = evtCache[0].clientX + (evtCache[1].clientX - evtCache[0].clientX) / 2;\n                            const cy = evtCache[0].clientY + (evtCache[1].clientY - evtCache[0].clientY) / 2;\n                            funct(evtCache[0], tx > ty ? dx > dx0 : dy > dy0, true, cx, cy);\n                            // Cache the distance for the next move event\n                            dx0 = dx;\n                            dy0 = dy;\n                        }\n                    }\n                }), (evt) => {\n                    evtCache = [];\n                    dx0 = 0;\n                    dy0 = 0;\n                });\n            }\n            InternalEvent.addListener(target, 'wheel', wheelHandler);\n        }\n    }\n    /**\n     * Disables the context menu for the given element.\n     */\n    static disableContextMenu(element) {\n        InternalEvent.addListener(element, 'contextmenu', (evt) => {\n            if (evt.preventDefault) {\n                evt.preventDefault();\n            }\n            return false;\n        });\n    }\n    /**\n     * Consumes the given event.\n     *\n     * @param evt Native event to be consumed.\n     * @param {boolean} [preventDefault=true] Optional boolean to prevent the default for the event.\n     * Default is true.\n     * @param {boolean} [stopPropagation=true] Option boolean to stop event propagation. Default is\n     * true.\n     */\n    static consume(evt, preventDefault = true, stopPropagation = true) {\n        if (preventDefault) {\n            if (evt.preventDefault) {\n                if (stopPropagation) {\n                    evt.stopPropagation();\n                }\n                evt.preventDefault();\n            }\n            else if (stopPropagation) {\n                evt.cancelBubble = true;\n            }\n        }\n        // Opera\n        // @ts-ignore This is a non-standard property.\n        evt.isConsumed = true;\n        // Other browsers\n        if (!evt.preventDefault) {\n            evt.returnValue = false;\n        }\n    }\n}\n//\n// Special handles in mouse events\n//\n/**\n * Index for the label handle in an mxMouseEvent. This should be a negative\n * value that does not interfere with any possible handle indices.\n * @default -1\n */\nInternalEvent.LABEL_HANDLE = -1;\n/**\n * Index for the rotation handle in an mxMouseEvent. This should be a\n * negative value that does not interfere with any possible handle indices.\n * @default -2\n */\nInternalEvent.ROTATION_HANDLE = -2;\n/**\n * Start index for the custom handles in an mxMouseEvent. This should be a\n * negative value and is the start index which is decremented for each\n * custom handle.\n * @default -100\n */\nInternalEvent.CUSTOM_HANDLE = -100;\n/**\n * Start index for the virtual handles in an mxMouseEvent. This should be a\n * negative value and is the start index which is decremented for each\n * virtual handle.\n * This assumes that there are no more\n * than VIRTUAL_HANDLE - CUSTOM_HANDLE custom handles.\n *\n * @default -100000\n */\nInternalEvent.VIRTUAL_HANDLE = -100000;\n//\n// Event names\n//\n/**\n * Specifies the event name for mouseDown.\n */\nInternalEvent.MOUSE_DOWN = 'mouseDown';\n/**\n * Specifies the event name for mouseMove.\n */\nInternalEvent.MOUSE_MOVE = 'mouseMove';\n/**\n * Specifies the event name for mouseUp.\n */\nInternalEvent.MOUSE_UP = 'mouseUp';\n/**\n * Specifies the event name for activate.\n */\nInternalEvent.ACTIVATE = 'activate';\n/**\n * Specifies the event name for resizeStart.\n */\nInternalEvent.RESIZE_START = 'resizeStart';\n/**\n * Specifies the event name for resize.\n */\nInternalEvent.RESIZE = 'resize';\n/**\n * Specifies the event name for resizeEnd.\n */\nInternalEvent.RESIZE_END = 'resizeEnd';\n/**\n * Specifies the event name for moveStart.\n */\nInternalEvent.MOVE_START = 'moveStart';\n/**\n * Specifies the event name for move.\n */\nInternalEvent.MOVE = 'move';\n/**\n * Specifies the event name for moveEnd.\n */\nInternalEvent.MOVE_END = 'moveEnd';\n/**\n * Specifies the event name for panStart.\n */\nInternalEvent.PAN_START = 'panStart';\n/**\n * Specifies the event name for pan.\n */\nInternalEvent.PAN = 'pan';\n/**\n * Specifies the event name for panEnd.\n */\nInternalEvent.PAN_END = 'panEnd';\n/**\n * Specifies the event name for minimize.\n */\nInternalEvent.MINIMIZE = 'minimize';\n/**\n * Specifies the event name for normalize.\n */\nInternalEvent.NORMALIZE = 'normalize';\n/**\n * Specifies the event name for maximize.\n */\nInternalEvent.MAXIMIZE = 'maximize';\n/**\n * Specifies the event name for hide.\n */\nInternalEvent.HIDE = 'hide';\n/**\n * Specifies the event name for show.\n */\nInternalEvent.SHOW = 'show';\n/**\n * Specifies the event name for close.\n */\nInternalEvent.CLOSE = 'close';\n/**\n * Specifies the event name for destroy.\n */\nInternalEvent.DESTROY = 'destroy';\n/**\n * Specifies the event name for refresh.\n */\nInternalEvent.REFRESH = 'refresh';\n/**\n * Specifies the event name for size.\n */\nInternalEvent.SIZE = 'size';\n/**\n * Specifies the event name for select.\n */\nInternalEvent.SELECT = 'select';\n/**\n * Specifies the event name for fired.\n */\nInternalEvent.FIRED = 'fired';\n/**\n * Specifies the event name for fireMouseEvent.\n */\nInternalEvent.FIRE_MOUSE_EVENT = 'fireMouseEvent';\n/**\n * Specifies the event name for gesture.\n */\nInternalEvent.GESTURE = 'gesture';\n/**\n * Specifies the event name for tapAndHold.\n */\nInternalEvent.TAP_AND_HOLD = 'tapAndHold';\n/**\n * Specifies the event name for get.\n */\nInternalEvent.GET = 'get';\n/**\n * Specifies the event name for receive.\n */\nInternalEvent.RECEIVE = 'receive';\n/**\n * Specifies the event name for connect.\n */\nInternalEvent.CONNECT = 'connect';\n/**\n * Specifies the event name for disconnect.\n */\nInternalEvent.DISCONNECT = 'disconnect';\n/**\n * Specifies the event name for suspend.\n */\nInternalEvent.SUSPEND = 'suspend';\n/**\n * Specifies the event name for suspend.\n */\nInternalEvent.RESUME = 'resume';\n/**\n * Specifies the event name for mark.\n */\nInternalEvent.MARK = 'mark';\n/**\n * Specifies the event name for root.\n */\nInternalEvent.ROOT = 'root';\n/**\n * Specifies the event name for post.\n */\nInternalEvent.POST = 'post';\n/**\n * Specifies the event name for open.\n */\nInternalEvent.OPEN = 'open';\n/**\n * Specifies the event name for open.\n */\nInternalEvent.SAVE = 'save';\n/**\n * Specifies the event name for beforeAddVertex.\n */\nInternalEvent.BEFORE_ADD_VERTEX = 'beforeAddVertex';\n/**\n * Specifies the event name for addVertex.\n */\nInternalEvent.ADD_VERTEX = 'addVertex';\n/**\n * Specifies the event name for afterAddVertex.\n */\nInternalEvent.AFTER_ADD_VERTEX = 'afterAddVertex';\n/**\n * Specifies the event name for done.\n */\nInternalEvent.DONE = 'done';\n/**\n * Specifies the event name for execute.\n */\nInternalEvent.EXECUTE = 'execute';\n/**\n * Specifies the event name for executed.\n */\nInternalEvent.EXECUTED = 'executed';\n/**\n * Specifies the event name for beginUpdate.\n */\nInternalEvent.BEGIN_UPDATE = 'beginUpdate';\n/**\n * Specifies the event name for startEdit.\n */\nInternalEvent.START_EDIT = 'startEdit';\n/**\n * Specifies the event name for endUpdate.\n */\nInternalEvent.END_UPDATE = 'endUpdate';\n/**\n * Specifies the event name for endEdit.\n */\nInternalEvent.END_EDIT = 'endEdit';\n/**\n * Specifies the event name for beforeUndo.\n */\nInternalEvent.BEFORE_UNDO = 'beforeUndo';\n/**\n * Specifies the event name for undo.\n */\nInternalEvent.UNDO = 'undo';\n/**\n * Specifies the event name for redo.\n */\nInternalEvent.REDO = 'redo';\n/**\n * Specifies the event name for change.\n */\nInternalEvent.CHANGE = 'change';\n/**\n * Specifies the event name for notify.\n */\nInternalEvent.NOTIFY = 'notify';\n/**\n * Specifies the event name for layoutCells.\n */\nInternalEvent.LAYOUT_CELLS = 'layoutCells';\n/**\n * Specifies the event name for click.\n */\nInternalEvent.CLICK = 'click';\n/**\n * Specifies the event name for scale.\n */\nInternalEvent.SCALE = 'scale';\n/**\n * Specifies the event name for translate.\n */\nInternalEvent.TRANSLATE = 'translate';\n/**\n * Specifies the event name for scaleAndTranslate.\n */\nInternalEvent.SCALE_AND_TRANSLATE = 'scaleAndTranslate';\n/**\n * Specifies the event name for up.\n */\nInternalEvent.UP = 'up';\n/**\n * Specifies the event name for down.\n */\nInternalEvent.DOWN = 'down';\n/**\n * Specifies the event name for add.\n */\nInternalEvent.ADD = 'add';\n/**\n * Specifies the event name for remove.\n */\nInternalEvent.REMOVE = 'remove';\n/**\n * Specifies the event name for clear.\n */\nInternalEvent.CLEAR = 'clear';\n/**\n * Specifies the event name for addCells.\n */\nInternalEvent.ADD_CELLS = 'addCells';\n/**\n * Specifies the event name for cellsAdded.\n */\nInternalEvent.CELLS_ADDED = 'cellsAdded';\n/**\n * Specifies the event name for moveCells.\n */\nInternalEvent.MOVE_CELLS = 'moveCells';\n/**\n * Specifies the event name for cellsMoved.\n */\nInternalEvent.CELLS_MOVED = 'cellsMoved';\n/**\n * Specifies the event name for resizeCells.\n */\nInternalEvent.RESIZE_CELLS = 'resizeCells';\n/**\n * Specifies the event name for cellsResized.\n */\nInternalEvent.CELLS_RESIZED = 'cellsResized';\n/**\n * Specifies the event name for toggleCells.\n */\nInternalEvent.TOGGLE_CELLS = 'toggleCells';\n/**\n * Specifies the event name for cellsToggled.\n */\nInternalEvent.CELLS_TOGGLED = 'cellsToggled';\n/**\n * Specifies the event name for orderCells.\n */\nInternalEvent.ORDER_CELLS = 'orderCells';\n/**\n * Specifies the event name for cellsOrdered.\n */\nInternalEvent.CELLS_ORDERED = 'cellsOrdered';\n/**\n * Specifies the event name for removeCells.\n */\nInternalEvent.REMOVE_CELLS = 'removeCells';\n/**\n * Specifies the event name for cellsRemoved.\n */\nInternalEvent.CELLS_REMOVED = 'cellsRemoved';\n/**\n * Specifies the event name for groupCells.\n */\nInternalEvent.GROUP_CELLS = 'groupCells';\n/**\n * Specifies the event name for ungroupCells.\n */\nInternalEvent.UNGROUP_CELLS = 'ungroupCells';\n/**\n * Specifies the event name for removeCellsFromParent.\n */\nInternalEvent.REMOVE_CELLS_FROM_PARENT = 'removeCellsFromParent';\n/**\n * Specifies the event name for foldCells.\n */\nInternalEvent.FOLD_CELLS = 'foldCells';\n/**\n * Specifies the event name for cellsFolded.\n */\nInternalEvent.CELLS_FOLDED = 'cellsFolded';\n/**\n * Specifies the event name for alignCells.\n */\nInternalEvent.ALIGN_CELLS = 'alignCells';\n/**\n * Specifies the event name for labelChanged.\n */\nInternalEvent.LABEL_CHANGED = 'labelChanged';\n/**\n * Specifies the event name for connectCell.\n */\nInternalEvent.CONNECT_CELL = 'connectCell';\n/**\n * Specifies the event name for cellConnected.\n */\nInternalEvent.CELL_CONNECTED = 'cellConnected';\n/**\n * Specifies the event name for splitEdge.\n */\nInternalEvent.SPLIT_EDGE = 'splitEdge';\n/**\n * Specifies the event name for flipEdge.\n */\nInternalEvent.FLIP_EDGE = 'flipEdge';\n/**\n * Specifies the event name for startEditing.\n */\nInternalEvent.START_EDITING = 'startEditing';\n/**\n * Specifies the event name for editingStarted.\n */\nInternalEvent.EDITING_STARTED = 'editingStarted';\n/**\n * Specifies the event name for editingStopped.\n */\nInternalEvent.EDITING_STOPPED = 'editingStopped';\n/**\n * Specifies the event name for addOverlay.\n */\nInternalEvent.ADD_OVERLAY = 'addOverlay';\n/**\n * Specifies the event name for removeOverlay.\n */\nInternalEvent.REMOVE_OVERLAY = 'removeOverlay';\n/**\n * Specifies the event name for updateCellSize.\n */\nInternalEvent.UPDATE_CELL_SIZE = 'updateCellSize';\n/**\n * Specifies the event name for escape.\n */\nInternalEvent.ESCAPE = 'escape';\n/**\n * Specifies the event name for doubleClick.\n */\nInternalEvent.DOUBLE_CLICK = 'doubleClick';\n/**\n * Specifies the event name for start.\n */\nInternalEvent.START = 'start';\n/**\n * Specifies the event name for reset.\n */\nInternalEvent.RESET = 'reset';\n/**\n * Threshold for pinch gestures to fire a mouse wheel event.\n * Default value is 10.\n */\nInternalEvent.PINCH_THRESHOLD = 10;\nexport default InternalEvent;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 816, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 832, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/event/EventObject.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * The mxEventObject is a wrapper for all properties of a single event.\n * Additionally, it also offers functions to consume the event and check if it\n * was consumed as follows:\n *\n * ```javascript\n * evt.consume();\n * INV: evt.isConsumed() == true\n * ```\n *\n * Constructor: mxEventObject\n *\n * Constructs a new event object with the specified name. An optional\n * sequence of key, value pairs can be appended to define properties.\n *\n * Example:\n *\n * ```javascript\n * new mxEventObject(\"eventName\", key1, val1, .., keyN, valN)\n * ```\n */\nclass EventObject {\n    constructor(name = '', ...args) {\n        /**\n         * Holds the consumed state. Default is false.\n         */\n        this.consumed = false;\n        this.name = name;\n        this.properties = {};\n        if (!!args[0] && args[0].constructor === Object) {\n            // A literal object ({})\n            for (const [key, value] of Object.entries(args[0])) {\n                this.properties[key] = value;\n            }\n        }\n        else {\n            // two-values [key, value, key, value, ...]\n            for (let i = 0; i < args.length; i += 2) {\n                if (args[i + 1] !== null) {\n                    this.properties[args[i]] = args[i + 1];\n                }\n            }\n        }\n    }\n    /**\n     * Returns <name>.\n     */\n    getName() {\n        return this.name;\n    }\n    /**\n     * Returns <properties>.\n     */\n    getProperties() {\n        return this.properties;\n    }\n    /**\n     * Returns the property for the given key.\n     */\n    getProperty(key) {\n        return this.properties[key];\n    }\n    /**\n     * Returns true if the event has been consumed.\n     */\n    isConsumed() {\n        return this.consumed;\n    }\n    /**\n     * Consumes the event.\n     */\n    consume() {\n        this.consumed = true;\n    }\n}\nexport default EventObject;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,GACA;;;;;;;;;;;;;;;;;;;;CAoBC;;;AACD,MAAM;IACF,YAAY,OAAO,EAAE,EAAE,GAAG,IAAI,CAAE;QAC5B;;SAEC,GACD,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,UAAU,GAAG,CAAC;QACnB,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC,WAAW,KAAK,QAAQ;YAC7C,wBAAwB;YACxB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,IAAI,CAAC,EAAE,EAAG;gBAChD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG;YAC3B;QACJ,OACK;YACD,2CAA2C;YAC3C,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,KAAK,EAAG;gBACrC,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,MAAM;oBACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;gBAC1C;YACJ;QACJ;IACJ;IACA;;KAEC,GACD,UAAU;QACN,OAAO,IAAI,CAAC,IAAI;IACpB;IACA;;KAEC,GACD,gBAAgB;QACZ,OAAO,IAAI,CAAC,UAAU;IAC1B;IACA;;KAEC,GACD,YAAY,GAAG,EAAE;QACb,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI;IAC/B;IACA;;KAEC,GACD,aAAa;QACT,OAAO,IAAI,CAAC,QAAQ;IACxB;IACA;;KAEC,GACD,UAAU;QACN,IAAI,CAAC,QAAQ,GAAG;IACpB;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 919, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 925, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/event/EventSource.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport EventObject from './EventObject';\n/**\n * Base class for objects that dispatch named events. To create a subclass that\n * inherits from mxEventSource, the following code is used.\n *\n * ```javascript\n * function MyClass() { };\n *\n * MyClass.prototype = new mxEventSource();\n * constructor = MyClass;\n * ```\n *\n * Known Subclasses:\n *\n * <Transactions>, {@link Graph}, {@link GraphView}, <Editor>, <CellOverlay>,\n * <MaxToolbar>, <MaxWindow>\n *\n * Constructor: mxEventSource\n *\n * Constructs a new event source.\n */\nclass EventSource {\n    constructor(eventSource = null) {\n        /**\n         * Holds the event names and associated listeners in an array. The array\n         * contains the event name followed by the respective listener for each\n         * registered listener.\n         */\n        this.eventListeners = [];\n        /**\n         * Specifies if events can be fired. Default is true.\n         */\n        this.eventsEnabled = true;\n        /**\n         * Optional source for events. Default is null.\n         */\n        this.eventSource = null;\n        this.eventSource = eventSource;\n    }\n    /**\n     * Returns <eventsEnabled>.\n     */\n    isEventsEnabled() {\n        return this.eventsEnabled;\n    }\n    /**\n     * Sets <eventsEnabled>.\n     */\n    setEventsEnabled(value) {\n        this.eventsEnabled = value;\n    }\n    /**\n     * Returns <eventSource>.\n     */\n    getEventSource() {\n        return this.eventSource;\n    }\n    /**\n     * Sets <eventSource>.\n     */\n    setEventSource(value) {\n        this.eventSource = value;\n    }\n    /**\n     * Binds the specified function to the given event name. If no event name\n     * is given, then the listener is registered for all events.\n     *\n     * The parameters of the listener are the sender and an {@link EventObject}.\n     */\n    addListener(name, funct) {\n        this.eventListeners.push({ name, funct });\n    }\n    /**\n     * Removes all occurrences of the given listener from <eventListeners>.\n     */\n    removeListener(funct) {\n        let i = 0;\n        while (i < this.eventListeners.length) {\n            if (this.eventListeners[i].funct === funct) {\n                this.eventListeners.splice(i, 1);\n            }\n            else {\n                i += 1;\n            }\n        }\n    }\n    /**\n     * Dispatches the given event to the listeners which are registered for\n     * the event. The sender argument is optional. The current execution scope\n     * (\"this\") is used for the listener invocation (see {@link Utils#bind}).\n     *\n     * Example:\n     *\n     * ```javascript\n     * fireEvent(new mxEventObject(\"eventName\", key1, val1, .., keyN, valN))\n     * ```\n     *\n     * @param evt {@link EventObject} that represents the event.\n     * @param sender Optional sender to be passed to the listener. Default value is\n     * the return value of <getEventSource>.\n     */\n    fireEvent(evt, sender = null) {\n        if (this.isEventsEnabled()) {\n            if (!evt) {\n                evt = new EventObject('');\n            }\n            if (!sender) {\n                sender = this.getEventSource();\n            }\n            if (!sender) {\n                sender = this;\n            }\n            for (const eventListener of this.eventListeners) {\n                if (eventListener.name === null || eventListener.name === evt.getName()) {\n                    eventListener.funct.apply(this, [sender, evt]);\n                }\n            }\n        }\n    }\n}\nexport default EventSource;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;;AACA;;AACA;;;;;;;;;;;;;;;;;;;CAmBC,GACD,MAAM;IACF,YAAY,cAAc,IAAI,CAAE;QAC5B;;;;SAIC,GACD,IAAI,CAAC,cAAc,GAAG,EAAE;QACxB;;SAEC,GACD,IAAI,CAAC,aAAa,GAAG;QACrB;;SAEC,GACD,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,WAAW,GAAG;IACvB;IACA;;KAEC,GACD,kBAAkB;QACd,OAAO,IAAI,CAAC,aAAa;IAC7B;IACA;;KAEC,GACD,iBAAiB,KAAK,EAAE;QACpB,IAAI,CAAC,aAAa,GAAG;IACzB;IACA;;KAEC,GACD,iBAAiB;QACb,OAAO,IAAI,CAAC,WAAW;IAC3B;IACA;;KAEC,GACD,eAAe,KAAK,EAAE;QAClB,IAAI,CAAC,WAAW,GAAG;IACvB;IACA;;;;;KAKC,GACD,YAAY,IAAI,EAAE,KAAK,EAAE;QACrB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YAAE;YAAM;QAAM;IAC3C;IACA;;KAEC,GACD,eAAe,KAAK,EAAE;QAClB,IAAI,IAAI;QACR,MAAO,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAE;YACnC,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,KAAK,KAAK,OAAO;gBACxC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG;YAClC,OACK;gBACD,KAAK;YACT;QACJ;IACJ;IACA;;;;;;;;;;;;;;KAcC,GACD,UAAU,GAAG,EAAE,SAAS,IAAI,EAAE;QAC1B,IAAI,IAAI,CAAC,eAAe,IAAI;YACxB,IAAI,CAAC,KAAK;gBACN,MAAM,IAAI,yKAAA,CAAA,UAAW,CAAC;YAC1B;YACA,IAAI,CAAC,QAAQ;gBACT,SAAS,IAAI,CAAC,cAAc;YAChC;YACA,IAAI,CAAC,QAAQ;gBACT,SAAS,IAAI;YACjB;YACA,KAAK,MAAM,iBAAiB,IAAI,CAAC,cAAc,CAAE;gBAC7C,IAAI,cAAc,IAAI,KAAK,QAAQ,cAAc,IAAI,KAAK,IAAI,OAAO,IAAI;oBACrE,cAAc,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE;wBAAC;wBAAQ;qBAAI;gBACjD;YACJ;QACJ;IACJ;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 1060, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1066, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/canvas/AbstractCanvas2D.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { arcToCurves, getRotatedPoint } from '../../util/mathUtils';\nimport { DEFAULT_FONTFAMILY, DEFAULT_FONTSIZE, DIRECTION, NONE, } from '../../util/Constants';\nimport UrlConverter from '../../util/UrlConverter';\nimport Point from '../geometry/Point';\nimport { clone } from '../../util/cloneUtils';\nimport { StyleDefaultsConfig } from '../../util/config';\n/**\n * Base class for all canvases.\n *\n * The following methods make up the public interface of the canvas 2D for all painting in mxGraph:\n *\n * - {@link save}, {@link restore}\n * - {@link scale}, {@link translate}, {@link rotate}\n * - {@link setAlpha}, {@link setFillAlpha}, {@link setStrokeAlpha}, {@link setFillColor}, {@link setGradient},\n *   {@link setStrokeColor}, {@link setStrokeWidth}, {@link setDashed}, {@link setDashPattern}, {@link setLineCap},\n *   {@link setLineJoin}, {@link setMiterLimit}\n * - {@link setFontColor}, {@link setFontBackgroundColor}, {@link setFontBorderColor}, {@link setFontSize},\n *   {@link setFontFamily}, {@link setFontStyle}\n * - {@link setShadow}, {@link setShadowColor}, {@link setShadowAlpha}, {@link setShadowOffset}\n * - {@link rect}, {@link roundrect}, {@link ellipse}, {@link image}, {@link text}\n * - {@link begin}, {@link moveTo}, {@link lineTo}, {@link quadTo}, {@link curveTo}\n * - {@link stroke}, {@link fill}, {@link fillAndStroke}\n *\n * {@link arcTo} is an additional method for drawing paths.\n * This is a synthetic method, meaning that it is turned into a sequence of curves by default.\n * Subclasses may add native support for arcs.\n *\n * All color values of {@link NONE} will be converted to null in the state.\n */\nclass AbstractCanvas2D {\n    constructor() {\n        /**\n         * Holds the current state.\n         */\n        this.state = this.createState();\n        /**\n         * Stack of states.\n         */\n        this.states = [];\n        /**\n         * Holds the current path as an array.\n         */\n        this.path = [];\n        /**\n         * Switch for rotation of HTML. Default is false.\n         */\n        this.rotateHtml = true;\n        /**\n         * Holds the last x coordinate.\n         */\n        this.lastX = 0;\n        /**\n         * Holds the last y coordinate.\n         */\n        this.lastY = 0;\n        /**\n         * Contains the string used for moving in paths. Default is 'M'.\n         */\n        this.moveOp = 'M';\n        /**\n         * Contains the string used for moving in paths. Default is 'L'.\n         */\n        this.lineOp = 'L';\n        /**\n         * Contains the string used for quadratic paths. Default is 'Q'.\n         */\n        this.quadOp = 'Q';\n        /**\n         * Contains the string used for bezier curves. Default is 'C'.\n         */\n        this.curveOp = 'C';\n        /**\n         * Holds the operator for closing curves. Default is 'Z'.\n         */\n        this.closeOp = 'Z';\n        /**\n         * Boolean value that specifies if events should be handled. Default is false.\n         */\n        this.pointerEvents = false;\n        // from Polyline (maybe from other shapes also)\n        this.pointerEventsValue = null;\n        /**\n         * Adds the given operation to the path.\n         */\n        this.addOp = (op, ...args) => {\n            this.path.push(op);\n            if (args.length > 1) {\n                const s = this.state;\n                for (let i = 1; i < args.length; i += 2) {\n                    this.lastX = args[i - 1];\n                    this.lastY = args[i];\n                    this.path.push(this.format((this.lastX + s.dx) * s.scale));\n                    this.path.push(this.format((this.lastY + s.dy) * s.scale));\n                }\n            }\n        };\n        this.converter = this.createUrlConverter();\n        this.reset();\n    }\n    /**\n     * Create a new <UrlConverter> and returns it.\n     */\n    createUrlConverter() {\n        return new UrlConverter();\n    }\n    /**\n     * Resets the state of this canvas.\n     */\n    reset() {\n        this.state = this.createState();\n        this.states = [];\n    }\n    /**\n     * Creates the state of the this canvas.\n     */\n    createState() {\n        return {\n            dx: 0,\n            dy: 0,\n            scale: 1,\n            alpha: 1,\n            fillAlpha: 1,\n            strokeAlpha: 1,\n            fillColor: NONE,\n            gradientFillAlpha: 1,\n            gradientColor: NONE,\n            gradientAlpha: 1,\n            gradientDirection: DIRECTION.EAST,\n            strokeColor: NONE,\n            strokeWidth: 1,\n            dashed: false,\n            dashPattern: '3 3',\n            fixDash: false,\n            lineCap: 'flat',\n            lineJoin: 'miter',\n            miterLimit: 10,\n            fontColor: '#000000',\n            fontBackgroundColor: NONE,\n            fontBorderColor: NONE,\n            fontSize: DEFAULT_FONTSIZE,\n            fontFamily: DEFAULT_FONTFAMILY,\n            fontStyle: 0,\n            shadow: false,\n            shadowColor: StyleDefaultsConfig.shadowColor,\n            shadowAlpha: StyleDefaultsConfig.shadowOpacity,\n            shadowDx: StyleDefaultsConfig.shadowOffsetX,\n            shadowDy: StyleDefaultsConfig.shadowOffsetY,\n            rotation: 0,\n            rotationCx: 0,\n            rotationCy: 0,\n        };\n    }\n    /**\n     * Rounds all numbers to integers.\n     */\n    format(value) {\n        return Math.round(value);\n    }\n    /**\n     * Rotates the given point and returns the result as an {@link Point}.\n     */\n    rotatePoint(x, y, theta, cx, cy) {\n        const rad = theta * (Math.PI / 180);\n        return getRotatedPoint(new Point(x, y), Math.cos(rad), Math.sin(rad), new Point(cx, cy));\n    }\n    /**\n     * Saves the current state.\n     */\n    save() {\n        this.states.push(this.state);\n        this.state = clone(this.state);\n    }\n    /**\n     * Restores the current state.\n     */\n    restore() {\n        const state = this.states.pop();\n        if (state)\n            this.state = state;\n    }\n    /**\n     * Sets the current link. Hook for subclassers.\n     */\n    setLink(link) {\n        // nop\n    }\n    /**\n     * Scales the current state.\n     */\n    scale(value) {\n        this.state.scale *= value;\n        if (this.state.strokeWidth !== null)\n            this.state.strokeWidth *= value;\n    }\n    /**\n     * Translates the current state.\n     */\n    translate(dx, dy) {\n        this.state.dx += dx;\n        this.state.dy += dy;\n    }\n    /**\n     * Rotates the current state.\n     */\n    rotate(theta, flipH, flipV, cx, cy) {\n        // nop\n    }\n    /**\n     * Sets the current alpha.\n     */\n    setAlpha(value) {\n        this.state.alpha = value;\n    }\n    /**\n     * Sets the current solid fill alpha.\n     */\n    setFillAlpha(value) {\n        this.state.fillAlpha = value;\n    }\n    /**\n     * Sets the current stroke alpha.\n     */\n    setStrokeAlpha(value) {\n        this.state.strokeAlpha = value;\n    }\n    /**\n     * Sets the current fill color.\n     */\n    setFillColor(value) {\n        this.state.fillColor = value ?? NONE;\n        this.state.gradientColor = NONE;\n    }\n    /**\n     * Sets the current gradient.\n     */\n    setGradient(color1, color2, x, y, w, h, direction, alpha1 = 1, alpha2 = 1) {\n        const s = this.state;\n        s.fillColor = color1;\n        s.gradientFillAlpha = alpha1;\n        s.gradientColor = color2;\n        s.gradientAlpha = alpha2;\n        s.gradientDirection = direction;\n    }\n    /**\n     * Sets the current stroke color.\n     */\n    setStrokeColor(value) {\n        this.state.strokeColor = value ?? NONE;\n    }\n    /**\n     * Sets the current stroke width.\n     */\n    setStrokeWidth(value) {\n        this.state.strokeWidth = value;\n    }\n    /**\n     * Enables or disables dashed lines.\n     */\n    setDashed(value, fixDash = false) {\n        this.state.dashed = value;\n        this.state.fixDash = fixDash;\n    }\n    /**\n     * Sets the current dash pattern.\n     */\n    setDashPattern(value) {\n        this.state.dashPattern = value;\n    }\n    /**\n     * Sets the current line cap.\n     */\n    setLineCap(value) {\n        this.state.lineCap = value;\n    }\n    /**\n     * Sets the current line join.\n     */\n    setLineJoin(value) {\n        this.state.lineJoin = value;\n    }\n    /**\n     * Sets the current miter limit.\n     */\n    setMiterLimit(value) {\n        this.state.miterLimit = value;\n    }\n    /**\n     * Sets the current font color.\n     */\n    setFontColor(value) {\n        this.state.fontColor = value ?? NONE;\n    }\n    /**\n     * Sets the current font background color.\n     */\n    setFontBackgroundColor(value) {\n        this.state.fontBackgroundColor = value ?? NONE;\n    }\n    /**\n     * Sets the current font border color.\n     */\n    setFontBorderColor(value) {\n        this.state.fontBorderColor = value ?? NONE;\n    }\n    /**\n     * Sets the current font size.\n     */\n    setFontSize(value) {\n        this.state.fontSize = value;\n    }\n    /**\n     * Sets the current font family.\n     */\n    setFontFamily(value) {\n        this.state.fontFamily = value;\n    }\n    /**\n     * Sets the current font style.\n     */\n    setFontStyle(value) {\n        this.state.fontStyle = value;\n    }\n    /**\n     * Enables or disables and configures the current shadow.\n     */\n    setShadow(enabled) {\n        this.state.shadow = enabled;\n    }\n    /**\n     * Sets the current shadow color.\n     *\n     * @param value Hexadecimal representation of the color or `none`.\n     */\n    setShadowColor(value) {\n        this.state.shadowColor = value ?? NONE;\n    }\n    /**\n     * Sets the current shadow alpha.\n     *\n     * @param value Number that represents the new alpha. Possible values are between 1 (opaque) and 0 (transparent).\n     */\n    setShadowAlpha(value) {\n        this.state.shadowAlpha = value;\n    }\n    /**\n     * Sets the current shadow offset.\n     *\n     * @param dx Number that represents the horizontal offset of the shadow.\n     * @param dy Number that represents the vertical offset of the shadow.\n     */\n    setShadowOffset(dx, dy) {\n        this.state.shadowDx = dx;\n        this.state.shadowDy = dy;\n    }\n    /**\n     * Starts a new path.\n     */\n    begin() {\n        this.lastX = 0;\n        this.lastY = 0;\n        this.path = [];\n    }\n    /**\n     *  Moves the current path the given coordinates.\n     */\n    moveTo(x, y) {\n        this.addOp(this.moveOp, x, y);\n    }\n    /**\n     * Draws a line to the given coordinates. Uses moveTo with the op argument.\n     */\n    lineTo(x, y) {\n        this.addOp(this.lineOp, x, y);\n    }\n    /**\n     * Adds a quadratic curve to the current path.\n     */\n    quadTo(x1, y1, x2, y2) {\n        this.addOp(this.quadOp, x1, y1, x2, y2);\n    }\n    /**\n     * Adds a bezier curve to the current path.\n     */\n    curveTo(x1, y1, x2, y2, x3, y3) {\n        this.addOp(this.curveOp, x1, y1, x2, y2, x3, y3);\n    }\n    /**\n     * Adds the given arc to the current path. This is a synthetic operation that\n     * is broken down into curves.\n     * @param rx: The x distance between the current position\n     *            and the center of the ellipse around which to arc\n     * @param ry: The y distance between the current position\n     *            and the center of the ellipse around which to arc\n     * @param x: The x position of the end point of the arc\n     * @param y: The y position of the end point of the arc\n     */\n    arcTo(rx, ry, angle, largeArcFlag, sweepFlag, x, y) {\n        const curves = arcToCurves(this.lastX, this.lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y);\n        if (curves != null) {\n            for (let i = 0; i < curves.length; i += 6) {\n                this.curveTo(curves[i], curves[i + 1], curves[i + 2], curves[i + 3], curves[i + 4], curves[i + 5]);\n            }\n        }\n    }\n    /**\n     * Closes the current path.\n     */\n    close(x1, y1, x2, y2, x3, y3) {\n        this.addOp(this.closeOp);\n    }\n}\nexport default AbstractCanvas2D;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;;AAGA;AADA;AAIA;AALA;AAGA;AACA;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;CAsBC,GACD,MAAM;IACF,aAAc;QACV;;SAEC,GACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW;QAC7B;;SAEC,GACD,IAAI,CAAC,MAAM,GAAG,EAAE;QAChB;;SAEC,GACD,IAAI,CAAC,IAAI,GAAG,EAAE;QACd;;SAEC,GACD,IAAI,CAAC,UAAU,GAAG;QAClB;;SAEC,GACD,IAAI,CAAC,KAAK,GAAG;QACb;;SAEC,GACD,IAAI,CAAC,KAAK,GAAG;QACb;;SAEC,GACD,IAAI,CAAC,MAAM,GAAG;QACd;;SAEC,GACD,IAAI,CAAC,MAAM,GAAG;QACd;;SAEC,GACD,IAAI,CAAC,MAAM,GAAG;QACd;;SAEC,GACD,IAAI,CAAC,OAAO,GAAG;QACf;;SAEC,GACD,IAAI,CAAC,OAAO,GAAG;QACf;;SAEC,GACD,IAAI,CAAC,aAAa,GAAG;QACrB,+CAA+C;QAC/C,IAAI,CAAC,kBAAkB,GAAG;QAC1B;;SAEC,GACD,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,GAAG;YACjB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACf,IAAI,KAAK,MAAM,GAAG,GAAG;gBACjB,MAAM,IAAI,IAAI,CAAC,KAAK;gBACpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,KAAK,EAAG;oBACrC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE;oBACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE;oBACpB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,EAAE,IAAI,EAAE,KAAK;oBACxD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,EAAE,IAAI,EAAE,KAAK;gBAC5D;YACJ;QACJ;QACA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB;QACxC,IAAI,CAAC,KAAK;IACd;IACA;;KAEC,GACD,qBAAqB;QACjB,OAAO,IAAI,iKAAA,CAAA,UAAY;IAC3B;IACA;;KAEC,GACD,QAAQ;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW;QAC7B,IAAI,CAAC,MAAM,GAAG,EAAE;IACpB;IACA;;KAEC,GACD,cAAc;QACV,OAAO;YACH,IAAI;YACJ,IAAI;YACJ,OAAO;YACP,OAAO;YACP,WAAW;YACX,aAAa;YACb,WAAW,8JAAA,CAAA,OAAI;YACf,mBAAmB;YACnB,eAAe,8JAAA,CAAA,OAAI;YACnB,eAAe;YACf,mBAAmB,8JAAA,CAAA,YAAS,CAAC,IAAI;YACjC,aAAa,8JAAA,CAAA,OAAI;YACjB,aAAa;YACb,QAAQ;YACR,aAAa;YACb,SAAS;YACT,SAAS;YACT,UAAU;YACV,YAAY;YACZ,WAAW;YACX,qBAAqB,8JAAA,CAAA,OAAI;YACzB,iBAAiB,8JAAA,CAAA,OAAI;YACrB,UAAU,8JAAA,CAAA,mBAAgB;YAC1B,YAAY,8JAAA,CAAA,qBAAkB;YAC9B,WAAW;YACX,QAAQ;YACR,aAAa,2JAAA,CAAA,sBAAmB,CAAC,WAAW;YAC5C,aAAa,2JAAA,CAAA,sBAAmB,CAAC,aAAa;YAC9C,UAAU,2JAAA,CAAA,sBAAmB,CAAC,aAAa;YAC3C,UAAU,2JAAA,CAAA,sBAAmB,CAAC,aAAa;YAC3C,UAAU;YACV,YAAY;YACZ,YAAY;QAChB;IACJ;IACA;;KAEC,GACD,OAAO,KAAK,EAAE;QACV,OAAO,KAAK,KAAK,CAAC;IACtB;IACA;;KAEC,GACD,YAAY,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE;QAC7B,MAAM,MAAM,QAAQ,CAAC,KAAK,EAAE,GAAG,GAAG;QAClC,OAAO,CAAA,GAAA,8JAAA,CAAA,kBAAe,AAAD,EAAE,IAAI,sKAAA,CAAA,UAAK,CAAC,GAAG,IAAI,KAAK,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,IAAI,sKAAA,CAAA,UAAK,CAAC,IAAI;IACxF;IACA;;KAEC,GACD,OAAO;QACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK;QAC3B,IAAI,CAAC,KAAK,GAAG,CAAA,GAAA,+JAAA,CAAA,QAAK,AAAD,EAAE,IAAI,CAAC,KAAK;IACjC;IACA;;KAEC,GACD,UAAU;QACN,MAAM,QAAQ,IAAI,CAAC,MAAM,CAAC,GAAG;QAC7B,IAAI,OACA,IAAI,CAAC,KAAK,GAAG;IACrB;IACA;;KAEC,GACD,QAAQ,IAAI,EAAE;IACV,MAAM;IACV;IACA;;KAEC,GACD,MAAM,KAAK,EAAE;QACT,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI;QACpB,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,KAAK,MAC3B,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI;IAClC;IACA;;KAEC,GACD,UAAU,EAAE,EAAE,EAAE,EAAE;QACd,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI;QACjB,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI;IACrB;IACA;;KAEC,GACD,OAAO,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE;IAChC,MAAM;IACV;IACA;;KAEC,GACD,SAAS,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG;IACvB;IACA;;KAEC,GACD,aAAa,KAAK,EAAE;QAChB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG;IAC3B;IACA;;KAEC,GACD,eAAe,KAAK,EAAE;QAClB,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG;IAC7B;IACA;;KAEC,GACD,aAAa,KAAK,EAAE;QAChB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,8JAAA,CAAA,OAAI;QACpC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,8JAAA,CAAA,OAAI;IACnC;IACA;;KAEC,GACD,YAAY,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE;QACvE,MAAM,IAAI,IAAI,CAAC,KAAK;QACpB,EAAE,SAAS,GAAG;QACd,EAAE,iBAAiB,GAAG;QACtB,EAAE,aAAa,GAAG;QAClB,EAAE,aAAa,GAAG;QAClB,EAAE,iBAAiB,GAAG;IAC1B;IACA;;KAEC,GACD,eAAe,KAAK,EAAE;QAClB,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,SAAS,8JAAA,CAAA,OAAI;IAC1C;IACA;;KAEC,GACD,eAAe,KAAK,EAAE;QAClB,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG;IAC7B;IACA;;KAEC,GACD,UAAU,KAAK,EAAE,UAAU,KAAK,EAAE;QAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG;QACpB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG;IACzB;IACA;;KAEC,GACD,eAAe,KAAK,EAAE;QAClB,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG;IAC7B;IACA;;KAEC,GACD,WAAW,KAAK,EAAE;QACd,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG;IACzB;IACA;;KAEC,GACD,YAAY,KAAK,EAAE;QACf,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;IAC1B;IACA;;KAEC,GACD,cAAc,KAAK,EAAE;QACjB,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG;IAC5B;IACA;;KAEC,GACD,aAAa,KAAK,EAAE;QAChB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,8JAAA,CAAA,OAAI;IACxC;IACA;;KAEC,GACD,uBAAuB,KAAK,EAAE;QAC1B,IAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,SAAS,8JAAA,CAAA,OAAI;IAClD;IACA;;KAEC,GACD,mBAAmB,KAAK,EAAE;QACtB,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,SAAS,8JAAA,CAAA,OAAI;IAC9C;IACA;;KAEC,GACD,YAAY,KAAK,EAAE;QACf,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;IAC1B;IACA;;KAEC,GACD,cAAc,KAAK,EAAE;QACjB,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG;IAC5B;IACA;;KAEC,GACD,aAAa,KAAK,EAAE;QAChB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG;IAC3B;IACA;;KAEC,GACD,UAAU,OAAO,EAAE;QACf,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG;IACxB;IACA;;;;KAIC,GACD,eAAe,KAAK,EAAE;QAClB,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,SAAS,8JAAA,CAAA,OAAI;IAC1C;IACA;;;;KAIC,GACD,eAAe,KAAK,EAAE;QAClB,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG;IAC7B;IACA;;;;;KAKC,GACD,gBAAgB,EAAE,EAAE,EAAE,EAAE;QACpB,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;QACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG;IAC1B;IACA;;KAEC,GACD,QAAQ;QACJ,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,IAAI,GAAG,EAAE;IAClB;IACA;;KAEC,GACD,OAAO,CAAC,EAAE,CAAC,EAAE;QACT,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG;IAC/B;IACA;;KAEC,GACD,OAAO,CAAC,EAAE,CAAC,EAAE;QACT,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG;IAC/B;IACA;;KAEC,GACD,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,IAAI;IACxC;IACA;;KAEC,GACD,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI;IACjD;IACA;;;;;;;;;KASC,GACD,MAAM,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE;QAChD,MAAM,SAAS,CAAA,GAAA,8JAAA,CAAA,cAAW,AAAD,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,IAAI,OAAO,cAAc,WAAW,GAAG;QAC9F,IAAI,UAAU,MAAM;YAChB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,KAAK,EAAG;gBACvC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,IAAI,EAAE;YACrG;QACJ;IACJ;IACA;;KAEC,GACD,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO;IAC3B;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 1447, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1453, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/canvas/SvgCanvas2D.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { isNotNullish } from '../../util/Utils';\nimport { mod } from '../../util/mathUtils';\nimport { getAlignmentAsPoint, matchBinaryMask } from '../../util/styleUtils';\nimport Client from '../../Client';\nimport { ABSOLUTE_LINE_HEIGHT, ALIGN, DEFAULT_FONTFAMILY, DEFAULT_FONTSIZE, DIRECTION, FONT, LINE_HEIGHT, NONE, NS_SVG, NS_XLINK, WORD_WRAP, } from '../../util/Constants';\nimport Rectangle from '../geometry/Rectangle';\nimport AbstractCanvas2D from './AbstractCanvas2D';\nimport { getXml } from '../../util/xmlUtils';\nimport { isNode, write } from '../../util/domUtils';\nimport { htmlEntities, trim } from '../../util/StringUtils';\n// Activates workaround for gradient ID resolution if base tag is used.\nconst useAbsoluteIds = typeof DOMParser === 'function' &&\n    !Client.IS_CHROMEAPP &&\n    !Client.IS_EDGE &&\n    document.getElementsByTagName('base').length > 0;\n/**\n * Extends {@link mxAbstractCanvas2D} to implement a canvas for SVG. This canvas writes all calls as SVG output to the\n * given SVG root node.\n *\n * ```javascript\n * var svgDoc = mxUtils.createXmlDocument();\n * var root = (svgDoc.createElementNS != null) ?\n * \t\tsvgDoc.createElementNS(mxConstants.NS_SVG, 'svg') : svgDoc.createElement('svg');\n *\n * if (svgDoc.createElementNS == null)\n * {\n *   root.setAttribute('xmlns', mxConstants.NS_SVG);\n *   root.setAttribute('xmlns:xlink', mxConstants.NS_XLINK);\n * }\n * else\n * {\n *   root.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', mxConstants.NS_XLINK);\n * }\n *\n * var bounds = graph.getGraphBounds();\n * root.setAttribute('width', (bounds.x + bounds.width + 4) + 'px');\n * root.setAttribute('height', (bounds.y + bounds.height + 4) + 'px');\n * root.setAttribute('version', '1.1');\n *\n * svgDoc.appendChild(root);\n *\n * var svgCanvas = new mxSvgCanvas2D(root);\n * ```\n *\n *\n * To disable anti-aliasing in the output, use the following code.\n * ```javascript\n * graph.view.canvas.ownerSVGElement.setAttribute('shape-rendering', 'crispEdges');\n * ```\n * Or set the respective attribute in the SVG element directly.\n */\nclass SvgCanvas2D extends AbstractCanvas2D {\n    constructor(root, styleEnabled) {\n        super();\n        this.defs = null;\n        this.styleEnabled = true;\n        /**\n         * Holds the current DOM node.\n         */\n        this.node = null;\n        /**\n         * Specifies if plain text output should match the vertical HTML alignment.\n         * @default true.\n         */\n        this.matchHtmlAlignment = true;\n        /**\n         * Specifies if text output should be enabled.\n         * @default true\n         */\n        this.textEnabled = true;\n        /**\n         * Specifies if use of foreignObject for HTML markup is allowed.\n         * @default true\n         */\n        this.foEnabled = true;\n        /**\n         * Specifies the fallback text for unsupported foreignObjects in exported documents.\n         * If this is set to `null` then no fallback text is added to the exported document.\n         * @default [Object]\n         */\n        this.foAltText = '[Object]';\n        /**\n         * Offset to be used for foreignObjects.\n         * @default 0\n         */\n        this.foOffset = 0;\n        /**\n         * Offset to be used for text elements.\n         * @default 0\n         */\n        this.textOffset = 0;\n        /**\n         * Offset to be used for image elements.\n         * @default 0\n         */\n        this.imageOffset = 0;\n        /**\n         * Adds transparent paths for strokes.\n         * @default 0\n         */\n        this.strokeTolerance = 0;\n        /**\n         * Minimum stroke width for output.\n         * @default 1\n         */\n        this.minStrokeWidth = 1;\n        /**\n         * Local counter for references in SVG export.\n         * @default 0\n         */\n        this.refCount = 0;\n        /**\n         * Correction factor for {@link mxConstants.LINE_HEIGHT} in HTML output.\n         * @default 1\n         */\n        this.lineHeightCorrection = 1;\n        /**\n         * Default value for active pointer events.\n         * @default all\n         */\n        this.pointerEventsValue = 'all';\n        /**\n         * Padding to be added for text that is not wrapped to account for differences in font metrics on different platforms in pixels.\n         * @default 10.\n         */\n        this.fontMetricsPadding = 10;\n        /**\n         * Specifies if offsetWidth and offsetHeight should be cached. This is used to speed up repaint of text in {@link updateText}.\n         * @default true\n         */\n        this.cacheOffsetSize = true;\n        this.originalRoot = null;\n        /**\n         * Reference to the container for the SVG content.\n         */\n        this.root = root;\n        /**\n         * Local cache of gradients for quick lookups.\n         */\n        this.gradients = {};\n        /**\n         * Reference to the defs section of the SVG document. Only for export.\n         */\n        this.defs = null;\n        /**\n         * Stores the value of styleEnabled passed to the constructor.\n         */\n        this.styleEnabled = styleEnabled != null ? styleEnabled : false;\n        let svg = null;\n        // Adds optional defs section for export\n        if (root.ownerDocument !== document) {\n            let node = root;\n            // Finds owner SVG element in XML DOM\n            while (node && node.nodeName !== 'svg') {\n                node = node.parentElement;\n            }\n            svg = node;\n        }\n        if (svg) {\n            // Tries to get existing defs section\n            const tmp = svg.getElementsByTagName('defs');\n            if (tmp.length > 0) {\n                this.defs = svg.getElementsByTagName('defs')[0];\n            }\n            // Adds defs section if none exists\n            if (!this.defs) {\n                this.defs = this.createElement('defs');\n                if (svg.firstChild != null) {\n                    svg.insertBefore(this.defs, svg.firstChild);\n                }\n                else {\n                    svg.appendChild(this.defs);\n                }\n            }\n            // Adds stylesheet\n            if (this.styleEnabled) {\n                this.defs.appendChild(this.createStyle());\n            }\n        }\n    }\n    /**\n     * Rounds all numbers to 2 decimal points.\n     */\n    format(value) {\n        return parseFloat(value.toFixed(2));\n    }\n    /**\n     * Returns the URL of the page without the hash part. This needs to use href to\n     * include any search part with no params (ie question mark alone). This is a\n     * workaround for the fact that window.location.search is empty if there is\n     * no search string behind the question mark.\n     */\n    getBaseUrl() {\n        let { href } = window.location;\n        const hash = href.lastIndexOf('#');\n        if (hash > 0) {\n            href = href.substring(0, hash);\n        }\n        return href;\n    }\n    /**\n     * Returns any offsets for rendering pixels.\n     */\n    reset() {\n        super.reset();\n        this.gradients = {};\n    }\n    end() {\n        return;\n    }\n    /**\n     * Creates the optional style section.\n     */\n    createStyle() {\n        const style = this.createElement('style');\n        style.setAttribute('type', 'text/css');\n        write(style, `svg{font-family:${DEFAULT_FONTFAMILY};font-size:${DEFAULT_FONTSIZE};fill:none;stroke-miterlimit:10}`);\n        return style;\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    createElement(tagName, namespace) {\n        return this.root?.ownerDocument.createElementNS(namespace || NS_SVG, tagName);\n    }\n    /**\n     * Returns the alternate text string for the given foreignObject.\n     */\n    getAlternateText(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation) {\n        return isNotNullish(str) ? this.foAltText : null;\n    }\n    /**\n     * Returns the alternate content for the given foreignObject.\n     */\n    createAlternateContent(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation) {\n        const text = this.getAlternateText(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation);\n        const s = this.state;\n        if (isNotNullish(text) && s.fontSize > 0) {\n            const dy = valign === ALIGN.TOP ? 1 : valign === ALIGN.BOTTOM ? 0 : 0.3;\n            const anchor = align === ALIGN.RIGHT ? 'end' : align === ALIGN.LEFT ? 'start' : 'middle';\n            const alt = this.createElement('text');\n            alt.setAttribute('x', String(Math.round(x + s.dx)));\n            alt.setAttribute('y', String(Math.round(y + s.dy + dy * s.fontSize)));\n            alt.setAttribute('fill', s.fontColor || 'black');\n            alt.setAttribute('font-family', s.fontFamily);\n            alt.setAttribute('font-size', `${Math.round(s.fontSize)}px`);\n            // Text-anchor start is default in SVG\n            anchor !== 'start' && alt.setAttribute('text-anchor', anchor);\n            const fontStyle = s.fontStyle;\n            matchBinaryMask(fontStyle, FONT.BOLD) && alt.setAttribute('font-weight', 'bold');\n            matchBinaryMask(fontStyle, FONT.ITALIC) && alt.setAttribute('font-style', 'italic');\n            const txtDecor = [];\n            matchBinaryMask(fontStyle, FONT.UNDERLINE) && txtDecor.push('underline');\n            matchBinaryMask(fontStyle, FONT.STRIKETHROUGH) && txtDecor.push('line-through');\n            txtDecor.length > 0 && alt.setAttribute('text-decoration', txtDecor.join(' '));\n            write(alt, text);\n            return alt;\n        }\n        return null;\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    createGradientId(start, end, alpha1, alpha2, direction) {\n        // Removes illegal characters from gradient ID\n        if (start.charAt(0) === '#') {\n            start = start.substring(1);\n        }\n        if (end.charAt(0) === '#') {\n            end = end.substring(1);\n        }\n        // Workaround for gradient IDs not working in Safari 5 / Chrome 6\n        // if they contain uppercase characters\n        start = `${start.toLowerCase()}-${alpha1}`;\n        end = `${end.toLowerCase()}-${alpha2}`;\n        // Wrong gradient directions possible?\n        let dir = null;\n        if (direction == null || direction === DIRECTION.SOUTH) {\n            dir = 's';\n        }\n        else if (direction === DIRECTION.EAST) {\n            dir = 'e';\n        }\n        else {\n            const tmp = start;\n            start = end;\n            end = tmp;\n            if (direction === DIRECTION.NORTH) {\n                dir = 's';\n            }\n            else if (direction === DIRECTION.WEST) {\n                dir = 'e';\n            }\n        }\n        return `mx-gradient-${start}-${end}-${dir}`;\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    getSvgGradient(start, end, alpha1, alpha2, direction) {\n        const id = this.createGradientId(start, end, alpha1, alpha2, direction);\n        let gradient = this.gradients[id];\n        if (!gradient) {\n            const svg = this.root.ownerSVGElement;\n            let counter = 0;\n            let tmpId = `${id}-${counter}`;\n            if (svg) {\n                gradient = svg.ownerDocument.getElementById(tmpId);\n                while (gradient && gradient.ownerSVGElement !== svg) {\n                    tmpId = `${id}-${counter++}`;\n                    gradient = svg.ownerDocument.getElementById(tmpId);\n                }\n            }\n            else {\n                // Uses shorter IDs for export\n                tmpId = `id${++this.refCount}`;\n            }\n            if (!gradient) {\n                gradient = this.createSvgGradient(start, end, alpha1, alpha2, direction);\n                gradient.setAttribute('id', tmpId);\n                if (this.defs) {\n                    this.defs.appendChild(gradient);\n                }\n                else if (svg) {\n                    svg.appendChild(gradient);\n                }\n            }\n            this.gradients[id] = gradient;\n        }\n        return gradient.getAttribute('id');\n    }\n    /**\n     * Creates the given SVG gradient.\n     */\n    createSvgGradient(start, end, alpha1, alpha2, direction) {\n        const gradient = this.createElement('linearGradient');\n        gradient.setAttribute('x1', '0%');\n        gradient.setAttribute('y1', '0%');\n        gradient.setAttribute('x2', '0%');\n        gradient.setAttribute('y2', '0%');\n        if (direction == null || direction === DIRECTION.SOUTH) {\n            gradient.setAttribute('y2', '100%');\n        }\n        else if (direction === DIRECTION.EAST) {\n            gradient.setAttribute('x2', '100%');\n        }\n        else if (direction === DIRECTION.NORTH) {\n            gradient.setAttribute('y1', '100%');\n        }\n        else if (direction === DIRECTION.WEST) {\n            gradient.setAttribute('x1', '100%');\n        }\n        let op = alpha1 < 1 ? `;stop-opacity:${alpha1}` : '';\n        let stop = this.createElement('stop');\n        stop.setAttribute('offset', '0%');\n        stop.setAttribute('style', `stop-color:${start}${op}`);\n        gradient.appendChild(stop);\n        op = alpha2 < 1 ? `;stop-opacity:${alpha2}` : '';\n        stop = this.createElement('stop');\n        stop.setAttribute('offset', '100%');\n        stop.setAttribute('style', `stop-color:${end}${op}`);\n        gradient.appendChild(stop);\n        return gradient;\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    addNode(filled, stroked) {\n        const { node } = this;\n        const s = this.state;\n        if (node) {\n            if (node.nodeName === 'path') {\n                // Checks if the path is not empty\n                if (this.path && this.path.length > 0) {\n                    node.setAttribute('d', this.path.join(' '));\n                }\n                else {\n                    return;\n                }\n            }\n            if (filled && s.fillColor !== NONE) {\n                this.updateFill();\n            }\n            else if (!this.styleEnabled) {\n                // Workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=814952\n                if (node.nodeName === 'ellipse' && Client.IS_FF) {\n                    node.setAttribute('fill', 'transparent');\n                }\n                else {\n                    node.setAttribute('fill', NONE);\n                }\n                // Sets the actual filled state for stroke tolerance\n                filled = false;\n            }\n            if (stroked && s.strokeColor !== NONE) {\n                this.updateStroke();\n            }\n            else if (!this.styleEnabled) {\n                node.setAttribute('stroke', NONE);\n            }\n            if (s.transform && s.transform.length > 0) {\n                node.setAttribute('transform', s.transform);\n            }\n            if (s.shadow) {\n                this.root.appendChild(this.createShadow(node));\n            }\n            // Adds stroke tolerance\n            if (this.strokeTolerance > 0 && !filled) {\n                this.root.appendChild(this.createTolerance(node));\n            }\n            // Adds pointer events\n            if (this.pointerEvents) {\n                node.setAttribute('pointer-events', this.pointerEventsValue);\n            }\n            // Enables clicks for nodes inside a link element\n            else if (!this.pointerEvents && !this.originalRoot) {\n                node.setAttribute('pointer-events', NONE);\n            }\n            // Removes invisible nodes from output if they don't handle events\n            if ((node.nodeName !== 'rect' &&\n                node.nodeName !== 'path' &&\n                node.nodeName !== 'ellipse') ||\n                (node.getAttribute('fill') !== NONE &&\n                    node.getAttribute('fill') !== 'transparent') ||\n                node.getAttribute('stroke') !== NONE ||\n                node.getAttribute('pointer-events') !== NONE) {\n                // LATER: Update existing DOM for performance\n                this.root.appendChild(node);\n            }\n            this.node = null;\n        }\n    }\n    /**\n     * Transfers the stroke attributes from <state> to <node>.\n     */\n    updateFill() {\n        const s = this.state;\n        if (s.alpha < 1 || s.fillAlpha < 1) {\n            this.node.setAttribute('fill-opacity', String(s.alpha * s.fillAlpha));\n        }\n        if (s.fillColor !== NONE) {\n            if (s.gradientColor !== NONE) {\n                const id = this.getSvgGradient(s.fillColor, s.gradientColor, s.gradientFillAlpha, s.gradientAlpha, s.gradientDirection);\n                if (this.root?.ownerDocument === document && useAbsoluteIds) {\n                    // Workaround for no fill with base tag in page (escape brackets)\n                    const base = this.getBaseUrl().replace(/([()])/g, '\\\\$1');\n                    this.node.setAttribute('fill', `url(${base}#${id})`);\n                }\n                else {\n                    this.node.setAttribute('fill', `url(#${id})`);\n                }\n            }\n            else {\n                this.node.setAttribute('fill', s.fillColor.toLowerCase());\n            }\n        }\n    }\n    /**\n     * Returns the current stroke width (>= 1), ie. max(1, this.format(this.state.strokeWidth * this.state.scale)).\n     */\n    getCurrentStrokeWidth() {\n        return Math.max(this.minStrokeWidth, Math.max(0.01, this.format(this.state.strokeWidth * this.state.scale)));\n    }\n    /**\n     * Transfers the stroke attributes from {@link mxAbstractCanvas2D.state} to {@link node}.\n     */\n    updateStroke() {\n        const s = this.state;\n        if (s.strokeColor && s.strokeColor !== NONE) {\n            this.node.setAttribute('stroke', s.strokeColor.toLowerCase());\n        }\n        if (s.alpha < 1 || s.strokeAlpha < 1) {\n            this.node.setAttribute('stroke-opacity', String(s.alpha * s.strokeAlpha));\n        }\n        const sw = this.getCurrentStrokeWidth();\n        if (sw !== 1) {\n            this.node.setAttribute('stroke-width', String(sw));\n        }\n        if (this.node.nodeName === 'path') {\n            this.updateStrokeAttributes();\n        }\n        if (s.dashed) {\n            this.node.setAttribute('stroke-dasharray', this.createDashPattern((s.fixDash ? 1 : s.strokeWidth) * s.scale));\n        }\n    }\n    /**\n     * Transfers the stroke attributes from {@link mxAbstractCanvas2D.state} to {@link node}.\n     */\n    updateStrokeAttributes() {\n        const s = this.state;\n        // Linejoin miter is default in SVG\n        if (s.lineJoin && s.lineJoin !== 'miter') {\n            this.node.setAttribute('stroke-linejoin', s.lineJoin);\n        }\n        if (s.lineCap) {\n            // flat is called butt in SVG\n            let value = s.lineCap;\n            if (value === 'flat') {\n                value = 'butt';\n            }\n            // Linecap butt is default in SVG\n            if (value !== 'butt') {\n                this.node.setAttribute('stroke-linecap', value);\n            }\n        }\n        // Miterlimit 10 is default in our document\n        if (s.miterLimit != null && (!this.styleEnabled || s.miterLimit !== 10)) {\n            this.node.setAttribute('stroke-miterlimit', String(s.miterLimit));\n        }\n    }\n    /**\n     * Creates the SVG dash pattern for the given state.\n     */\n    createDashPattern(scale) {\n        const pat = [];\n        if (typeof this.state.dashPattern === 'string') {\n            const dash = this.state.dashPattern.split(' ');\n            if (dash.length > 0) {\n                for (let i = 0; i < dash.length; i += 1) {\n                    pat[i] = Number(dash[i]) * scale;\n                }\n            }\n        }\n        return pat.join(' ');\n    }\n    /**\n     * Creates a hit detection tolerance shape for the given node.\n     */\n    createTolerance(node) {\n        const tol = node.cloneNode(true);\n        const sw = parseFloat(tol.getAttribute('stroke-width') || '1') + this.strokeTolerance;\n        tol.setAttribute('pointer-events', 'stroke');\n        tol.setAttribute('visibility', 'hidden');\n        tol.removeAttribute('stroke-dasharray');\n        tol.setAttribute('stroke-width', String(sw));\n        tol.setAttribute('fill', 'none');\n        tol.setAttribute('stroke', 'white');\n        return tol;\n    }\n    /**\n     * Creates a shadow for the given node.\n     */\n    createShadow(node) {\n        const shadow = node.cloneNode(true);\n        const s = this.state;\n        // Firefox uses transparent for no fill in ellipses\n        if (shadow.getAttribute('fill') !== 'none' &&\n            (!Client.IS_FF || shadow.getAttribute('fill') !== 'transparent')) {\n            shadow.setAttribute('fill', s.shadowColor);\n        }\n        if (shadow.getAttribute('stroke') !== 'none' &&\n            s.shadowColor &&\n            s.shadowColor !== NONE) {\n            shadow.setAttribute('stroke', s.shadowColor);\n        }\n        shadow.setAttribute('transform', `translate(${this.format(s.shadowDx * s.scale)},${this.format(s.shadowDy * s.scale)})${s.transform || ''}`);\n        shadow.setAttribute('opacity', String(s.shadowAlpha));\n        return shadow;\n    }\n    /**\n     * Experimental implementation for hyperlinks.\n     */\n    setLink(link) {\n        if (!link) {\n            this.root = this.originalRoot;\n        }\n        else {\n            this.originalRoot = this.root;\n            const node = this.createElement('a');\n            // Workaround for implicit namespace handling in HTML5 export, IE adds NS1 namespace so use code below\n            // in all IE versions except quirks mode. KNOWN: Adds xlink namespace to each image tag in output.\n            if (node.setAttributeNS == null || this.root.ownerDocument !== document) {\n                node.setAttribute('xlink:href', link);\n            }\n            else {\n                node.setAttributeNS(NS_XLINK, 'xlink:href', link);\n            }\n            this.root.appendChild(node);\n            this.root = node;\n        }\n    }\n    /**\n     * Sets the rotation of the canvas. Note that rotation cannot be concatenated.\n     */\n    rotate(theta, flipH, flipV, cx, cy) {\n        if (theta !== 0 || flipH || flipV) {\n            const s = this.state;\n            cx += s.dx;\n            cy += s.dy;\n            cx *= s.scale;\n            cy *= s.scale;\n            s.transform = s.transform || '';\n            // This implementation uses custom scale/translate and built-in rotation\n            // Rotation state is part of the AffineTransform in state.transform\n            if (flipH && flipV) {\n                theta += 180;\n            }\n            else if (flipH !== flipV) {\n                const tx = flipH ? cx : 0;\n                const sx = flipH ? -1 : 1;\n                const ty = flipV ? cy : 0;\n                const sy = flipV ? -1 : 1;\n                s.transform +=\n                    `translate(${this.format(tx)},${this.format(ty)})` +\n                        `scale(${this.format(sx)},${this.format(sy)})` +\n                        `translate(${this.format(-tx)},${this.format(-ty)})`;\n            }\n            if (flipH ? !flipV : flipV) {\n                theta *= -1;\n            }\n            if (theta !== 0) {\n                s.transform += `rotate(${this.format(theta)},${this.format(cx)},${this.format(cy)})`;\n            }\n            s.rotation += theta;\n            s.rotationCx = cx;\n            s.rotationCy = cy;\n        }\n    }\n    /**\n     * Extends superclass to create path.\n     */\n    begin() {\n        super.begin();\n        this.node = this.createElement('path');\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    rect(x, y, w, h) {\n        const s = this.state;\n        const n = this.createElement('rect');\n        n.setAttribute('x', String(this.format((x + s.dx) * s.scale)));\n        n.setAttribute('y', String(this.format((y + s.dy) * s.scale)));\n        n.setAttribute('width', String(this.format(w * s.scale)));\n        n.setAttribute('height', String(this.format(h * s.scale)));\n        this.node = n;\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    roundrect(x, y, w, h, dx, dy) {\n        this.rect(x, y, w, h);\n        if (dx > 0) {\n            this.node.setAttribute('rx', String(this.format(dx * this.state.scale)));\n        }\n        if (dy > 0) {\n            this.node.setAttribute('ry', String(this.format(dy * this.state.scale)));\n        }\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    ellipse(x, y, w, h) {\n        const s = this.state;\n        const n = this.createElement('ellipse');\n        // No rounding for consistent output with 1.x\n        n.setAttribute('cx', String(this.format((x + w / 2 + s.dx) * s.scale)));\n        n.setAttribute('cy', String(this.format((y + h / 2 + s.dy) * s.scale)));\n        n.setAttribute('rx', String((w / 2) * s.scale));\n        n.setAttribute('ry', String((h / 2) * s.scale));\n        this.node = n;\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    image(x, y, w, h, src, aspect = true, flipH = false, flipV = false) {\n        src = this.converter.convert(src);\n        const s = this.state;\n        x += s.dx;\n        y += s.dy;\n        const node = this.createElement('image');\n        node.setAttribute('x', String(this.format(x * s.scale) + this.imageOffset));\n        node.setAttribute('y', String(this.format(y * s.scale) + this.imageOffset));\n        node.setAttribute('width', String(this.format(w * s.scale)));\n        node.setAttribute('height', String(this.format(h * s.scale)));\n        // Workaround for missing namespace support\n        if (!node.setAttributeNS) {\n            node.setAttribute('xlink:href', src);\n        }\n        else {\n            node.setAttributeNS(NS_XLINK, 'xlink:href', src);\n        }\n        if (!aspect) {\n            node.setAttribute('preserveAspectRatio', 'none');\n        }\n        if (s.alpha < 1 || s.fillAlpha < 1) {\n            node.setAttribute('opacity', String(s.alpha * s.fillAlpha));\n        }\n        let tr = this.state.transform || '';\n        if (flipH || flipV) {\n            let sx = 1;\n            let sy = 1;\n            let dx = 0;\n            let dy = 0;\n            if (flipH) {\n                sx = -1;\n                dx = -w - 2 * x;\n            }\n            if (flipV) {\n                sy = -1;\n                dy = -h - 2 * y;\n            }\n            // Adds image transformation to existing transform\n            tr += `scale(${sx},${sy})translate(${dx * s.scale},${dy * s.scale})`;\n        }\n        if (tr.length > 0) {\n            node.setAttribute('transform', tr);\n        }\n        if (!this.pointerEvents) {\n            node.setAttribute('pointer-events', 'none');\n        }\n        this.root.appendChild(node);\n    }\n    /**\n     * Converts the given HTML string to XHTML.\n     */\n    convertHtml(val) {\n        const doc = new DOMParser().parseFromString(val, 'text/html');\n        if (doc != null) {\n            val = new XMLSerializer().serializeToString(doc.body);\n            // Extracts body content from DOM\n            if (val.substring(0, 5) === '<body') {\n                val = val.substring(val.indexOf('>', 5) + 1);\n            }\n            if (val.substring(val.length - 7, val.length) === '</body>') {\n                val = val.substring(0, val.length - 7);\n            }\n        }\n        return val;\n    }\n    /**\n     * Private helper function to create SVG elements\n     * Note: signature changed in mxgraph 4.1.0\n     */\n    createDiv(str) {\n        let val = str;\n        if (!isNode(val)) {\n            val = `<div><div>${this.convertHtml(val)}</div></div>`;\n        }\n        if (document.createElementNS) {\n            const div = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n            if (isNode(val)) {\n                const n = val;\n                const div2 = document.createElement('div');\n                const div3 = div2.cloneNode(false);\n                // Creates a copy for export\n                if (this.root.ownerDocument !== document) {\n                    div2.appendChild(n.cloneNode(true));\n                }\n                else {\n                    div2.appendChild(n);\n                }\n                div3.appendChild(div2);\n                div.appendChild(div3);\n            }\n            else {\n                div.innerHTML = val;\n            }\n            return div;\n        }\n        if (isNode(val)) {\n            val = `<div><div>${getXml(val)}</div></div>`;\n        }\n        val = `<div xmlns=\"http://www.w3.org/1999/xhtml\">${val}</div>`;\n        // NOTE: FF 3.6 crashes if content CSS contains \"height:100%\"\n        return new DOMParser().parseFromString(val, 'text/xml').documentElement;\n    }\n    /**\n     * Updates existing DOM nodes for text rendering. LATER: Merge common parts with text function below.\n     */\n    updateText(x, y, w, h, align, valign, wrap, overflow, clip, rotation, node) {\n        if (node && node.firstChild && node.firstChild.firstChild) {\n            this.updateTextNodes(x, y, w, h, align, valign, wrap, overflow, clip, rotation, node.firstChild);\n        }\n    }\n    /**\n     * Creates a foreignObject for the given string and adds it to the given root.\n     */\n    addForeignObject(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir, div, root) {\n        const group = this.createElement('g');\n        const fo = this.createElement('foreignObject');\n        // Workarounds for print clipping and static position in Safari\n        fo.setAttribute('style', 'overflow: visible; text-align: left;');\n        fo.setAttribute('pointer-events', 'none');\n        fo.appendChild(div);\n        group.appendChild(fo);\n        this.updateTextNodes(x, y, w, h, align, valign, wrap, overflow, clip, rotation, group);\n        // Alternate content if foreignObject not supported\n        if (this.root?.ownerDocument !== document) {\n            const alt = this.createAlternateContent(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation);\n            if (alt != null) {\n                fo.setAttribute('requiredFeatures', 'http://www.w3.org/TR/SVG11/feature#Extensibility');\n                const sw = this.createElement('switch');\n                sw.appendChild(fo);\n                sw.appendChild(alt);\n                group.appendChild(sw);\n            }\n        }\n        root.appendChild(group);\n    }\n    /**\n     * Updates existing DOM nodes for text rendering.\n     */\n    updateTextNodes(x, y, w, h, align, valign, wrap, overflow, clip, rotation, g) {\n        const s = this.state.scale;\n        SvgCanvas2D.createCss(w + 2, h, align, valign, wrap, overflow, clip, this.state.fontBackgroundColor != null ? this.state.fontBackgroundColor : null, this.state.fontBorderColor != null ? this.state.fontBorderColor : null, `display: flex; align-items: unsafe ${valign === ALIGN.TOP\n            ? 'flex-start'\n            : valign === ALIGN.BOTTOM\n                ? 'flex-end'\n                : 'center'}; ` +\n            `justify-content: unsafe ${align === ALIGN.LEFT\n                ? 'flex-start'\n                : align === ALIGN.RIGHT\n                    ? 'flex-end'\n                    : 'center'}; `, this.getTextCss(), s, (dx, dy, flex, item, block) => {\n            x += this.state.dx;\n            y += this.state.dy;\n            const fo = g.firstChild;\n            const div = fo.firstChild;\n            const box = div.firstChild;\n            const text = box.firstChild;\n            const r = (this.rotateHtml ? this.state.rotation : 0) + (rotation != null ? rotation : 0);\n            let t = (this.foOffset !== 0 ? `translate(${this.foOffset} ${this.foOffset})` : '') +\n                (s !== 1 ? `scale(${s})` : '');\n            text.setAttribute('style', block);\n            box.setAttribute('style', item);\n            // Workaround for clipping in Webkit with scrolling and zoom\n            fo.setAttribute('width', `${Math.ceil((1 / Math.min(1, s)) * 100)}%`);\n            fo.setAttribute('height', `${Math.ceil((1 / Math.min(1, s)) * 100)}%`);\n            const yp = Math.round(y + dy);\n            // Allows for negative values which are causing problems with\n            // transformed content where the top edge of the foreignObject\n            // limits the text box being moved further up in the diagram.\n            // KNOWN: Possible clipping problems with zoom and scrolling\n            // but this is normally not used with scrollbars as the\n            // coordinates are always positive with scrollbars.\n            // Margin-top is ignored in Safari and no negative values allowed\n            // for padding.\n            if (yp < 0) {\n                fo.setAttribute('y', String(yp));\n            }\n            else {\n                fo.removeAttribute('y');\n                flex += `padding-top: ${yp}px; `;\n            }\n            div.setAttribute('style', `${flex}margin-left: ${Math.round(x + dx)}px;`);\n            t += r !== 0 ? `rotate(${r} ${x} ${y})` : '';\n            // Output allows for reflow but Safari cannot use absolute position,\n            // transforms or opacity. https://bugs.webkit.org/show_bug.cgi?id=23113\n            if (t !== '') {\n                g.setAttribute('transform', t);\n            }\n            else {\n                g.removeAttribute('transform');\n            }\n            if (this.state.alpha !== 1) {\n                g.setAttribute('opacity', String(this.state.alpha));\n            }\n            else {\n                g.removeAttribute('opacity');\n            }\n        });\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    getTextCss() {\n        const s = this.state;\n        const lh = ABSOLUTE_LINE_HEIGHT\n            ? `${s.fontSize * LINE_HEIGHT}px`\n            : LINE_HEIGHT * this.lineHeightCorrection;\n        let css = `display: inline-block; font-size: ${s.fontSize}px; ` +\n            `font-family: ${s.fontFamily}; color: ${s.fontColor}; line-height: ${lh}; pointer-events: ${this.pointerEvents ? this.pointerEventsValue : 'none'}; `;\n        const fontStyle = s.fontStyle;\n        matchBinaryMask(fontStyle, FONT.BOLD) && (css += 'font-weight: bold; ');\n        matchBinaryMask(fontStyle, FONT.ITALIC) && (css += 'font-style: italic; ');\n        const txtDecor = [];\n        matchBinaryMask(fontStyle, FONT.UNDERLINE) && txtDecor.push('underline');\n        matchBinaryMask(fontStyle, FONT.STRIKETHROUGH) && txtDecor.push('line-through');\n        txtDecor.length > 0 && (css += `text-decoration: ${txtDecor.join(' ')}; `);\n        return css;\n    }\n    /**\n     * Paints the given text. Possible values for format are empty string for plain\n     * text and html for HTML markup. Note that HTML markup is only supported if\n     * foreignObject is supported and <foEnabled> is true. (This means IE9 and later\n     * does currently not support HTML text as part of shapes.)\n     */\n    text(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation = 0, dir) {\n        if (this.textEnabled && str != null) {\n            rotation = rotation != null ? rotation : 0;\n            if (this.foEnabled && format === 'html') {\n                const div = this.createDiv(str);\n                // Ignores invalid XHTML labels\n                if (div != null) {\n                    if (dir != null) {\n                        div.setAttribute('dir', dir);\n                    }\n                    this.addForeignObject(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir, div, this.root);\n                }\n            }\n            else {\n                this.plainText(x + this.state.dx, y + this.state.dy, w, h, str, align, valign, wrap, overflow, clip, rotation, dir);\n            }\n        }\n    }\n    /**\n     * Creates a clip for the given coordinates.\n     */\n    createClip(x, y, w, h) {\n        x = Math.round(x);\n        y = Math.round(y);\n        w = Math.round(w);\n        h = Math.round(h);\n        const id = `mx-clip-${x}-${y}-${w}-${h}`;\n        let counter = 0;\n        let tmp = `${id}-${counter}`;\n        // Resolves ID conflicts\n        while (document.getElementById(tmp) != null) {\n            tmp = `${id}-${++counter}`;\n        }\n        const clip = this.createElement('clipPath');\n        clip.setAttribute('id', tmp);\n        const rect = this.createElement('rect');\n        rect.setAttribute('x', String(x));\n        rect.setAttribute('y', String(y));\n        rect.setAttribute('width', String(w));\n        rect.setAttribute('height', String(h));\n        clip.appendChild(rect);\n        return clip;\n    }\n    /**\n     * Paints the given text. Possible values for format are empty string for\n     * plain text and html for HTML markup.\n     */\n    plainText(x, y, w, h, str, align, valign, wrap, overflow, clip, rotation = 0, dir) {\n        const s = this.state;\n        const size = s.fontSize;\n        const node = this.createElement('g');\n        let tr = s.transform || '';\n        this.updateFont(node);\n        // Ignores pointer events\n        if (!this.pointerEvents && this.originalRoot == null) {\n            node.setAttribute('pointer-events', 'none');\n        }\n        // Non-rotated text\n        if (rotation !== 0) {\n            tr += `rotate(${rotation},${this.format(x * s.scale)},${this.format(y * s.scale)})`;\n        }\n        if (dir != null) {\n            node.setAttribute('direction', dir);\n        }\n        if (clip && w > 0 && h > 0) {\n            let cx = x;\n            let cy = y;\n            if (align === ALIGN.CENTER) {\n                cx -= w / 2;\n            }\n            else if (align === ALIGN.RIGHT) {\n                cx -= w;\n            }\n            if (overflow !== 'fill') {\n                if (valign === ALIGN.MIDDLE) {\n                    cy -= h / 2;\n                }\n                else if (valign === ALIGN.BOTTOM) {\n                    cy -= h;\n                }\n            }\n            // LATER: Remove spacing from clip rectangle\n            const c = this.createClip(cx * s.scale - 2, cy * s.scale - 2, w * s.scale + 4, h * s.scale + 4);\n            if (this.defs != null) {\n                this.defs.appendChild(c);\n            }\n            else {\n                // Makes sure clip is removed with referencing node\n                this.root.appendChild(c);\n            }\n            if (!Client.IS_CHROMEAPP &&\n                !Client.IS_EDGE &&\n                this.root.ownerDocument === document) {\n                // Workaround for potential base tag\n                const base = this.getBaseUrl().replace(/([()])/g, '\\\\$1');\n                node.setAttribute('clip-path', `url(${base}#${c.getAttribute('id')})`);\n            }\n            else {\n                node.setAttribute('clip-path', `url(#${c.getAttribute('id')})`);\n            }\n        }\n        // Default is left\n        const anchor = align === ALIGN.RIGHT ? 'end' : align === ALIGN.CENTER ? 'middle' : 'start';\n        // Text-anchor start is default in SVG\n        if (anchor !== 'start') {\n            node.setAttribute('text-anchor', anchor);\n        }\n        if (!this.styleEnabled || size !== DEFAULT_FONTSIZE) {\n            node.setAttribute('font-size', `${size * s.scale}px`);\n        }\n        if (tr.length > 0) {\n            node.setAttribute('transform', tr);\n        }\n        if (s.alpha < 1) {\n            node.setAttribute('opacity', String(s.alpha));\n        }\n        const lines = str.split('\\n');\n        const lh = Math.round(size * LINE_HEIGHT);\n        const textHeight = size + (lines.length - 1) * lh;\n        let cy = y + size - 1;\n        if (valign === ALIGN.MIDDLE) {\n            if (overflow === 'fill') {\n                cy -= h / 2;\n            }\n            else {\n                const dy = (this.matchHtmlAlignment && clip && h > 0\n                    ? Math.min(textHeight, h)\n                    : textHeight) / 2;\n                cy -= dy;\n            }\n        }\n        else if (valign === ALIGN.BOTTOM) {\n            if (overflow === 'fill') {\n                cy -= h;\n            }\n            else {\n                const dy = this.matchHtmlAlignment && clip && h > 0 ? Math.min(textHeight, h) : textHeight;\n                cy -= dy + 1;\n            }\n        }\n        for (let i = 0; i < lines.length; i += 1) {\n            const line = trim(lines[i]);\n            // Workaround for bounding box of empty lines and spaces\n            if (line) {\n                const text = this.createElement('text');\n                // LATER: Match horizontal HTML alignment\n                text.setAttribute('x', String(this.format(x * s.scale) + this.textOffset));\n                text.setAttribute('y', String(this.format(cy * s.scale) + this.textOffset));\n                write(text, line);\n                node.appendChild(text);\n            }\n            cy += lh;\n        }\n        this.root.appendChild(node);\n        this.addTextBackground(node, str, x, y, w, overflow === 'fill' ? h : textHeight, align, valign, overflow);\n    }\n    /**\n     * Updates the text properties for the given node. (NOTE: For this to work in\n     * IE, the given node must be a text or tspan element.)\n     */\n    updateFont(node) {\n        const s = this.state;\n        if (s.fontColor && s.fontColor !== NONE) {\n            node.setAttribute('fill', s.fontColor);\n        }\n        if (!this.styleEnabled || s.fontFamily !== DEFAULT_FONTFAMILY) {\n            node.setAttribute('font-family', s.fontFamily);\n        }\n        const fontStyle = s.fontStyle;\n        matchBinaryMask(fontStyle, FONT.BOLD) && node.setAttribute('font-weight', 'bold');\n        matchBinaryMask(fontStyle, FONT.ITALIC) && node.setAttribute('font-style', 'italic');\n        const txtDecor = [];\n        matchBinaryMask(fontStyle, FONT.UNDERLINE) && txtDecor.push('underline');\n        matchBinaryMask(fontStyle, FONT.STRIKETHROUGH) && txtDecor.push('line-through');\n        txtDecor.length > 0 && node.setAttribute('text-decoration', txtDecor.join(' '));\n    }\n    /**\n     * Background color and border\n     */\n    addTextBackground(node, str, x, y, w, h, align, valign, overflow) {\n        const s = this.state;\n        if (s.fontBackgroundColor != null || s.fontBorderColor != null) {\n            let bbox = null;\n            if (overflow === 'fill' || overflow === 'width') {\n                if (align === ALIGN.CENTER) {\n                    x -= w / 2;\n                }\n                else if (align === ALIGN.RIGHT) {\n                    x -= w;\n                }\n                if (valign === ALIGN.MIDDLE) {\n                    y -= h / 2;\n                }\n                else if (valign === ALIGN.BOTTOM) {\n                    y -= h;\n                }\n                bbox = new Rectangle((x + 1) * s.scale, y * s.scale, (w - 2) * s.scale, (h + 2) * s.scale);\n                // @ts-ignore check for getBBox\n            }\n            else if (node.getBBox != null && this.root.ownerDocument === document) {\n                // Uses getBBox only if inside document for correct size\n                try {\n                    // @ts-ignore getBBox exists\n                    bbox = node.getBBox();\n                    bbox = new Rectangle(bbox.x, bbox.y + 1, bbox.width, bbox.height + 0);\n                }\n                catch (e) {\n                    // Ignores NS_ERROR_FAILURE in FF if container display is none.\n                }\n            }\n            if (bbox == null || bbox.width === 0 || bbox.height === 0) {\n                // Computes size if not in document or no getBBox available\n                const div = document.createElement('div');\n                // Wrapping and clipping can be ignored here\n                div.style.lineHeight = ABSOLUTE_LINE_HEIGHT\n                    ? `${s.fontSize * LINE_HEIGHT}px`\n                    : String(LINE_HEIGHT);\n                div.style.fontSize = `${s.fontSize}px`;\n                div.style.fontFamily = s.fontFamily;\n                div.style.whiteSpace = 'nowrap';\n                div.style.position = 'absolute';\n                div.style.visibility = 'hidden';\n                div.style.display = 'inline-block';\n                matchBinaryMask(s.fontStyle, FONT.BOLD) && (div.style.fontWeight = 'bold');\n                matchBinaryMask(s.fontStyle, FONT.ITALIC) && (div.style.fontStyle = 'italic');\n                str = htmlEntities(str, false);\n                div.innerHTML = str.replace(/\\n/g, '<br/>');\n                document.body.appendChild(div);\n                const w = div.offsetWidth;\n                const h = div.offsetHeight;\n                document.body.removeChild(div);\n                if (align === ALIGN.CENTER) {\n                    x -= w / 2;\n                }\n                else if (align === ALIGN.RIGHT) {\n                    x -= w;\n                }\n                if (valign === ALIGN.MIDDLE) {\n                    y -= h / 2;\n                }\n                else if (valign === ALIGN.BOTTOM) {\n                    y -= h;\n                }\n                bbox = new Rectangle((x + 1) * s.scale, (y + 2) * s.scale, w * s.scale, (h + 1) * s.scale);\n            }\n            if (bbox != null) {\n                const n = this.createElement('rect');\n                n.setAttribute('fill', s.fontBackgroundColor || 'none');\n                n.setAttribute('stroke', s.fontBorderColor || 'none');\n                n.setAttribute('x', String(Math.floor(bbox.x - 1)));\n                n.setAttribute('y', String(Math.floor(bbox.y - 1)));\n                n.setAttribute('width', String(Math.ceil(bbox.width + 2)));\n                n.setAttribute('height', String(Math.ceil(bbox.height)));\n                const sw = s.fontBorderColor ? Math.max(1, this.format(s.scale)) : 0;\n                n.setAttribute('stroke-width', String(sw));\n                // Workaround for crisp rendering - only required if not exporting\n                if (this.root?.ownerDocument === document && mod(sw, 2) === 1) {\n                    n.setAttribute('transform', 'translate(0.5, 0.5)');\n                }\n                node.insertBefore(n, node.firstChild);\n            }\n        }\n    }\n    /**\n     * Paints the outline of the current path.\n     */\n    stroke() {\n        this.addNode(false, true);\n    }\n    /**\n     * Fills the current path.\n     */\n    fill() {\n        this.addNode(true, false);\n    }\n    /**\n     * Fills and paints the outline of the current path.\n     */\n    fillAndStroke() {\n        this.addNode(true, true);\n    }\n}\n/**\n * Updates existing DOM nodes for text rendering.\n */\nSvgCanvas2D.createCss = (w, h, align, valign, wrap, overflow, clip, bg, border, flex, block, scale, callback) => {\n    let item = `box-sizing: border-box; font-size: 0; text-align: ${align === ALIGN.LEFT ? 'left' : align === ALIGN.RIGHT ? 'right' : 'center'}; `;\n    const pt = getAlignmentAsPoint(align, valign);\n    let ofl = 'overflow: hidden; ';\n    let fw = 'width: 1px; ';\n    let fh = 'height: 1px; ';\n    let dx = pt.x * w;\n    let dy = pt.y * h;\n    if (clip) {\n        fw = `width: ${Math.round(w)}px; `;\n        item += `max-height: ${Math.round(h)}px; `;\n        dy = 0;\n    }\n    else if (overflow === 'fill') {\n        fw = `width: ${Math.round(w)}px; `;\n        fh = `height: ${Math.round(h)}px; `;\n        block += 'width: 100%; height: 100%; ';\n        item += fw + fh;\n    }\n    else if (overflow === 'width') {\n        fw = `width: ${Math.round(w)}px; `;\n        block += 'width: 100%; ';\n        item += fw;\n        dy = 0;\n        if (h > 0) {\n            item += `max-height: ${Math.round(h)}px; `;\n        }\n    }\n    else {\n        ofl = '';\n        dy = 0;\n    }\n    let bgc = '';\n    if (bg) {\n        bgc += `background-color: ${bg}; `;\n    }\n    if (border) {\n        bgc += `border: 1px solid ${border}; `;\n    }\n    if (ofl == '' || clip) {\n        block += bgc;\n    }\n    else {\n        item += bgc;\n    }\n    if (wrap && w > 0) {\n        block += `white-space: normal; word-wrap: ${WORD_WRAP}; `;\n        fw = `width: ${Math.round(w)}px; `;\n        if (ofl !== '' && overflow !== 'fill') {\n            dy = 0;\n        }\n    }\n    else {\n        block += 'white-space: nowrap; ';\n        if (ofl === '') {\n            dx = 0;\n        }\n    }\n    callback(dx, dy, flex + fw + fh, item + ofl, block, ofl);\n};\nexport default SvgCanvas2D;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2583, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/image/ImageBox.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Encapsulates the URL, width and height of an image.\n *\n * Constructor: mxImage\n *\n * Constructs a new image.\n */\nclass ImageBox {\n    constructor(src, width, height) {\n        this.src = src;\n        this.width = width;\n        this.height = height;\n    }\n}\nexport default ImageBox;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,GACA;;;;;;CAMC;;;AACD,MAAM;IACF,YAAY,GAAG,EAAE,KAAK,EAAE,MAAM,CAAE;QAC5B,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,MAAM,GAAG;IAClB;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 2616, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2622, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/other/ConnectionConstraint.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Defines an object that contains the constraints about how to connect one side of an edge to its terminal.\n */\nclass ConnectionConstraint {\n    constructor(point, perimeter = true, name = null, dx = 0, dy = 0) {\n        /**\n         * Boolean that specifies if the point should be projected onto the perimeter\n         * of the terminal.\n         */\n        this.perimeter = true;\n        /**\n         * Optional string that specifies the name of the constraint.\n         */\n        this.name = null;\n        /**\n         * Optional float that specifies the horizontal offset of the constraint.\n         */\n        this.dx = 0;\n        /**\n         * Optional float that specifies the vertical offset of the constraint.\n         */\n        this.dy = 0;\n        this.point = point;\n        this.perimeter = perimeter;\n        this.name = name;\n        this.dx = dx;\n        this.dy = dy;\n    }\n}\nexport default ConnectionConstraint;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,GACA;;CAEC;;;AACD,MAAM;IACF,YAAY,KAAK,EAAE,YAAY,IAAI,EAAE,OAAO,IAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAE;QAC9D;;;SAGC,GACD,IAAI,CAAC,SAAS,GAAG;QACjB;;SAEC,GACD,IAAI,CAAC,IAAI,GAAG;QACZ;;SAEC,GACD,IAAI,CAAC,EAAE,GAAG;QACV;;SAEC,GACD,IAAI,CAAC,EAAE,GAAG;QACV,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,EAAE,GAAG;QACV,IAAI,CAAC,EAAE,GAAG;IACd;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 2666, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2672, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/other/Guide.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { DIALECT, GUIDE_COLOR, GUIDE_STROKEWIDTH } from '../../util/Constants';\nimport Point from '../geometry/Point';\nimport PolylineShape from '../geometry/edge/PolylineShape';\n/**\n * Implements the alignment of selection cells to other cells in the graph.\n *\n * Constructor: mxGuide\n *\n * Constructs a new guide object.\n */\nclass Guide {\n    constructor(graph, states) {\n        /**\n         * Contains the {@link CellStates} that are used for alignment.\n         */\n        this.states = [];\n        /**\n         * Specifies if horizontal guides are enabled. Default is true.\n         */\n        this.horizontal = true;\n        /**\n         * Specifies if vertical guides are enabled. Default is true.\n         */\n        this.vertical = true;\n        /**\n         * Holds the {@link Shape} for the horizontal guide.\n         */\n        this.guideX = null;\n        /**\n         * Holds the {@link Shape} for the vertical guide.\n         */\n        this.guideY = null;\n        /**\n         * Specifies if rounded coordinates should be used. Default is false.\n         */\n        this.rounded = false;\n        /**\n         * Default tolerance in px if grid is disabled. Default is 2.\n         */\n        this.tolerance = 2;\n        this.graph = graph;\n        this.setStates(states);\n    }\n    /**\n     * Sets the {@link CellState}s that should be used for alignment.\n     */\n    setStates(states) {\n        this.states = states;\n    }\n    /**\n     * Returns true if the guide should be enabled for the given native event. This\n     * implementation always returns true.\n     */\n    isEnabledForEvent(evt) {\n        return true;\n    }\n    /**\n     * Returns the tolerance for the guides. Default value is gridSize / 2.\n     */\n    getGuideTolerance(gridEnabled = false) {\n        return gridEnabled && this.graph.isGridEnabled()\n            ? this.graph.getGridSize() / 2\n            : this.tolerance;\n    }\n    /**\n     * Returns the mxShape to be used for painting the respective guide. This\n     * implementation returns a new, dashed and crisp {@link PolylineShape} using\n     * {@link GUIDE_COLOR} and {@link GUIDE_STROKEWIDTH} as the format.\n     *\n     * @param horizontal Boolean that specifies which guide should be created.\n     */\n    createGuideShape(horizontal = false) {\n        // TODO: Should vertical guides be supported here?? ============================\n        const guide = new PolylineShape([], GUIDE_COLOR, GUIDE_STROKEWIDTH);\n        guide.isDashed = true;\n        return guide;\n    }\n    /**\n     * Returns true if the given state should be ignored.\n     * @param state\n     */\n    isStateIgnored(state) {\n        return false;\n    }\n    /**\n     * Moves the <bounds> by the given {@link Point} and returnt the snapped point.\n     */\n    move(bounds = null, delta, gridEnabled = false, clone = false) {\n        if ((this.horizontal || this.vertical) && bounds) {\n            const { scale } = this.graph.getView();\n            const tt = this.getGuideTolerance(gridEnabled) * scale;\n            const b = bounds.clone();\n            b.x += delta.x;\n            b.y += delta.y;\n            let overrideX = false;\n            let stateX = null;\n            let valueX = null;\n            let overrideY = false;\n            let stateY = null;\n            let valueY = null;\n            let ttX = tt;\n            let ttY = tt;\n            const left = b.x;\n            const right = b.x + b.width;\n            const center = b.getCenterX();\n            const top = b.y;\n            const bottom = b.y + b.height;\n            const middle = b.getCenterY();\n            // Snaps the left, center and right to the given x-coordinate\n            const snapX = (x, state, centerAlign) => {\n                let override = false;\n                if (centerAlign && Math.abs(x - center) < ttX) {\n                    delta.x = x - bounds.getCenterX();\n                    ttX = Math.abs(x - center);\n                    override = true;\n                }\n                else if (!centerAlign) {\n                    if (Math.abs(x - left) < ttX) {\n                        delta.x = x - bounds.x;\n                        ttX = Math.abs(x - left);\n                        override = true;\n                    }\n                    else if (Math.abs(x - right) < ttX) {\n                        delta.x = x - bounds.x - bounds.width;\n                        ttX = Math.abs(x - right);\n                        override = true;\n                    }\n                }\n                if (override) {\n                    stateX = state;\n                    valueX = x;\n                    if (!this.guideX) {\n                        this.guideX = this.createGuideShape(true);\n                        // Makes sure to use SVG shapes in order to implement\n                        // event-transparency on the background area of the rectangle since\n                        // HTML shapes do not let mouseevents through even when transparent\n                        this.guideX.dialect = DIALECT.SVG;\n                        this.guideX.pointerEvents = false;\n                        this.guideX.init(this.graph.getView().getOverlayPane());\n                    }\n                }\n                overrideX = overrideX || override;\n            };\n            // Snaps the top, middle or bottom to the given y-coordinate\n            const snapY = (y, state, centerAlign) => {\n                let override = false;\n                if (centerAlign && Math.abs(y - middle) < ttY) {\n                    delta.y = y - bounds.getCenterY();\n                    ttY = Math.abs(y - middle);\n                    override = true;\n                }\n                else if (!centerAlign) {\n                    if (Math.abs(y - top) < ttY) {\n                        delta.y = y - bounds.y;\n                        ttY = Math.abs(y - top);\n                        override = true;\n                    }\n                    else if (Math.abs(y - bottom) < ttY) {\n                        delta.y = y - bounds.y - bounds.height;\n                        ttY = Math.abs(y - bottom);\n                        override = true;\n                    }\n                }\n                if (override) {\n                    stateY = state;\n                    valueY = y;\n                    if (!this.guideY) {\n                        this.guideY = this.createGuideShape(false);\n                        // Makes sure to use SVG shapes in order to implement\n                        // event-transparency on the background area of the rectangle since\n                        // HTML shapes do not let mouseevents through even when transparent\n                        this.guideY.dialect = DIALECT.SVG;\n                        this.guideY.pointerEvents = false;\n                        this.guideY.init(this.graph.getView().getOverlayPane());\n                    }\n                }\n                overrideY = overrideY || override;\n            };\n            for (let i = 0; i < this.states.length; i += 1) {\n                const state = this.states[i];\n                if (state && !this.isStateIgnored(state)) {\n                    // Align x\n                    if (this.horizontal) {\n                        snapX(state.getCenterX(), state, true);\n                        snapX(state.x, state, false);\n                        snapX(state.x + state.width, state, false);\n                        // Aligns left and right of shape to center of page\n                        if (!state.cell) {\n                            snapX(state.getCenterX(), state, false);\n                        }\n                    }\n                    // Align y\n                    if (this.vertical) {\n                        snapY(state.getCenterY(), state, true);\n                        snapY(state.y, state, false);\n                        snapY(state.y + state.height, state, false);\n                        // Aligns left and right of shape to center of page\n                        if (!state.cell) {\n                            snapY(state.getCenterY(), state, false);\n                        }\n                    }\n                }\n            }\n            // Moves cells to the raster if not aligned\n            this.graph.snapDelta(delta, bounds, !gridEnabled, overrideX, overrideY);\n            delta = this.getDelta(bounds, stateX, delta.x, stateY, delta.y);\n            // Redraws the guides\n            const c = this.graph.container;\n            if (!overrideX && this.guideX) {\n                this.guideX.node.style.visibility = 'hidden';\n            }\n            else if (this.guideX) {\n                let minY = null;\n                let maxY = null;\n                if (stateX) {\n                    minY = Math.min(bounds.y + delta.y - this.graph.getPanDy(), stateX.y);\n                    maxY = Math.max(bounds.y + bounds.height + delta.y - this.graph.getPanDy(), \n                    // @ts-ignore stateX! doesn't work for some reason...\n                    stateX.y + stateX.height);\n                }\n                if (minY !== null && maxY !== null) {\n                    this.guideX.points = [new Point(valueX, minY), new Point(valueX, maxY)];\n                }\n                else {\n                    this.guideX.points = [\n                        new Point(valueX, -this.graph.getPanDy()),\n                        new Point(valueX, c.scrollHeight - 3 - this.graph.getPanDy()),\n                    ];\n                }\n                this.guideX.stroke = this.getGuideColor(stateX, true);\n                this.guideX.node.style.visibility = 'visible';\n                this.guideX.redraw();\n            }\n            if (!overrideY && this.guideY != null) {\n                this.guideY.node.style.visibility = 'hidden';\n            }\n            else if (this.guideY != null) {\n                let minX = null;\n                let maxX = null;\n                if (stateY != null && bounds != null) {\n                    minX = Math.min(bounds.x + delta.x - this.graph.getPanDx(), stateY.x);\n                    maxX = Math.max(bounds.x + bounds.width + delta.x - this.graph.getPanDx(), \n                    // @ts-ignore\n                    stateY.x + stateY.width);\n                }\n                if (minX != null && maxX != null && valueY !== null) {\n                    this.guideY.points = [new Point(minX, valueY), new Point(maxX, valueY)];\n                }\n                else if (valueY !== null) {\n                    this.guideY.points = [\n                        new Point(-this.graph.getPanDx(), valueY),\n                        new Point(c.scrollWidth - 3 - this.graph.getPanDx(), valueY),\n                    ];\n                }\n                this.guideY.stroke = this.getGuideColor(stateY, false);\n                this.guideY.node.style.visibility = 'visible';\n                this.guideY.redraw();\n            }\n        }\n        return delta;\n    }\n    /**\n     * Rounds to pixels for virtual states (eg. page guides)\n     */\n    getDelta(bounds, stateX = null, dx, stateY = null, dy) {\n        const s = this.graph.view.scale;\n        if (this.rounded || (stateX != null && stateX.cell == null)) {\n            dx = Math.round((bounds.x + dx) / s) * s - bounds.x;\n        }\n        if (this.rounded || (stateY != null && stateY.cell == null)) {\n            dy = Math.round((bounds.y + dy) / s) * s - bounds.y;\n        }\n        return new Point(dx, dy);\n    }\n    /**\n     * Hides all current guides.\n     */\n    getGuideColor(state, horizontal) {\n        return GUIDE_COLOR;\n    }\n    /**\n     * Hides all current guides.\n     */\n    hide() {\n        this.setVisible(false);\n    }\n    /**\n     * Shows or hides the current guides.\n     */\n    setVisible(visible) {\n        if (this.guideX) {\n            this.guideX.node.style.visibility = visible ? 'visible' : 'hidden';\n        }\n        if (this.guideY) {\n            this.guideY.node.style.visibility = visible ? 'visible' : 'hidden';\n        }\n    }\n    /**\n     * Destroys all resources that this object uses.\n     */\n    destroy() {\n        if (this.guideX) {\n            this.guideX.destroy();\n            this.guideX = null;\n        }\n        if (this.guideY) {\n            this.guideY.destroy();\n            this.guideY = null;\n        }\n    }\n}\nexport default Guide;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2981, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2987, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/other/PanningManager.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { hasScrollbars } from '../../util/styleUtils';\nimport EventObject from '../event/EventObject';\nimport InternalEvent from '../event/InternalEvent';\n/**\n * Implements a handler for panning.\n */\nclass PanningManager {\n    constructor(graph) {\n        /**\n         * Damper value for the panning. Default is 1/6.\n         */\n        this.damper = 1 / 6;\n        /**\n         * Delay in milliseconds for the panning. Default is 10.\n         */\n        this.delay = 10;\n        /**\n         * Specifies if mouse events outside of the component should be handled. Default is true.\n         */\n        this.handleMouseOut = true;\n        /**\n         * Border to handle automatic panning inside the component. Default is 0 (disabled).\n         */\n        this.border = 0;\n        this.thread = null;\n        this.active = false;\n        this.tdx = 0;\n        this.tdy = 0;\n        this.t0x = 0;\n        this.t0y = 0;\n        this.dx = 0;\n        this.dy = 0;\n        this.scrollbars = false;\n        this.scrollLeft = 0;\n        this.scrollTop = 0;\n        this.thread = null;\n        this.active = false;\n        this.tdx = 0;\n        this.tdy = 0;\n        this.t0x = 0;\n        this.t0y = 0;\n        this.dx = 0;\n        this.dy = 0;\n        this.scrollbars = false;\n        this.scrollLeft = 0;\n        this.scrollTop = 0;\n        this.mouseListener = {\n            mouseDown: (sender, me) => {\n                return;\n            },\n            mouseMove: (sender, me) => {\n                return;\n            },\n            mouseUp: (sender, me) => {\n                if (this.active) {\n                    this.stop();\n                }\n            },\n        };\n        graph.addMouseListener(this.mouseListener);\n        this.mouseUpListener = () => {\n            if (this.active) {\n                this.stop();\n            }\n        };\n        // Stops scrolling on every mouseup anywhere in the document\n        InternalEvent.addListener(document, 'mouseup', this.mouseUpListener);\n        const createThread = () => {\n            this.scrollbars = hasScrollbars(graph.container);\n            this.scrollLeft = graph.container.scrollLeft;\n            this.scrollTop = graph.container.scrollTop;\n            return window.setInterval(() => {\n                this.tdx -= this.dx;\n                this.tdy -= this.dy;\n                if (this.scrollbars) {\n                    const left = -graph.container.scrollLeft - Math.ceil(this.dx);\n                    const top = -graph.container.scrollTop - Math.ceil(this.dy);\n                    graph.panGraph(left, top);\n                    graph.setPanDx(this.scrollLeft - graph.container.scrollLeft);\n                    graph.setPanDy(this.scrollTop - graph.container.scrollTop);\n                    graph.fireEvent(new EventObject(InternalEvent.PAN));\n                    // TODO: Implement graph.autoExtend\n                }\n                else {\n                    graph.panGraph(this.getDx(), this.getDy());\n                }\n            }, this.delay);\n        };\n        this.isActive = () => {\n            return this.active;\n        };\n        this.getDx = () => {\n            return Math.round(this.tdx);\n        };\n        this.getDy = () => {\n            return Math.round(this.tdy);\n        };\n        this.start = () => {\n            this.t0x = graph.view.translate.x;\n            this.t0y = graph.view.translate.y;\n            this.active = true;\n        };\n        this.panTo = (x, y, w = 0, h = 0) => {\n            if (!this.active) {\n                this.start();\n            }\n            this.scrollLeft = graph.container.scrollLeft;\n            this.scrollTop = graph.container.scrollTop;\n            const c = graph.container;\n            this.dx = x + w - c.scrollLeft - c.clientWidth;\n            if (this.dx < 0 && Math.abs(this.dx) < this.border) {\n                this.dx = this.border + this.dx;\n            }\n            else if (this.handleMouseOut) {\n                this.dx = Math.max(this.dx, 0);\n            }\n            else {\n                this.dx = 0;\n            }\n            if (this.dx == 0) {\n                this.dx = x - c.scrollLeft;\n                if (this.dx > 0 && this.dx < this.border) {\n                    this.dx -= this.border;\n                }\n                else if (this.handleMouseOut) {\n                    this.dx = Math.min(0, this.dx);\n                }\n                else {\n                    this.dx = 0;\n                }\n            }\n            this.dy = y + h - c.scrollTop - c.clientHeight;\n            if (this.dy < 0 && Math.abs(this.dy) < this.border) {\n                this.dy = this.border + this.dy;\n            }\n            else if (this.handleMouseOut) {\n                this.dy = Math.max(this.dy, 0);\n            }\n            else {\n                this.dy = 0;\n            }\n            if (this.dy == 0) {\n                this.dy = y - c.scrollTop;\n                if (this.dy > 0 && this.dy < this.border) {\n                    this.dy -= this.border;\n                }\n                else if (this.handleMouseOut) {\n                    this.dy = Math.min(0, this.dy);\n                }\n                else {\n                    this.dy = 0;\n                }\n            }\n            if (this.dx != 0 || this.dy != 0) {\n                this.dx *= this.damper;\n                this.dy *= this.damper;\n                if (this.thread == null) {\n                    this.thread = createThread();\n                }\n            }\n            else if (this.thread != null) {\n                window.clearInterval(this.thread);\n                this.thread = null;\n            }\n        };\n        this.stop = () => {\n            if (this.active) {\n                this.active = false;\n                if (this.thread != null) {\n                    window.clearInterval(this.thread);\n                    this.thread = null;\n                }\n                this.tdx = 0;\n                this.tdy = 0;\n                if (!this.scrollbars) {\n                    const px = graph.getPanDx();\n                    const py = graph.getPanDy();\n                    if (px != 0 || py != 0) {\n                        graph.panGraph(0, 0);\n                        graph.view.setTranslate(this.t0x + px / graph.view.scale, this.t0y + py / graph.view.scale);\n                    }\n                }\n                else {\n                    graph.setPanDx(0);\n                    graph.setPanDy(0);\n                    graph.fireEvent(new EventObject(InternalEvent.PAN));\n                }\n            }\n        };\n        this.destroy = () => {\n            graph.removeMouseListener(this.mouseListener);\n            InternalEvent.removeListener(document, 'mouseup', this.mouseUpListener);\n        };\n    }\n}\nexport default PanningManager;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3195, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/undoable_changes/RootChange.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Action to change the root in a model.\n *\n * Constructor: mxRootChange\n *\n * Constructs a change of the root in the\n * specified model.\n *\n * @class RootChange\n */\nexport class RootChange {\n    constructor(model, root) {\n        this.model = model;\n        this.root = root;\n        this.previous = root;\n    }\n    /**\n     * Carries out a change of the root using\n     * <Transactions.rootChanged>.\n     */\n    execute() {\n        this.root = this.previous;\n        this.previous = this.model.rootChanged(this.previous);\n    }\n}\nexport default RootChange;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcA,GACA;;;;;;;;;CASC;;;;AACM,MAAM;IACT,YAAY,KAAK,EAAE,IAAI,CAAE;QACrB,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,QAAQ,GAAG;IACpB;IACA;;;KAGC,GACD,UAAU;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ;IACxD;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 3237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3243, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/undoable_changes/ChildChange.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Action to add or remove a child in a model.\n *\n * Constructor: mxChildChange\n *\n * Constructs a change of a child in the\n * specified model.\n *\n * @class ChildChange\n */\nexport class ChildChange {\n    constructor(model, parent, child, index = 0) {\n        this.model = model;\n        this.parent = parent;\n        this.previous = parent;\n        this.child = child;\n        this.index = index;\n        this.previousIndex = index;\n    }\n    /**\n     * Changes the parent of {@link child}` using\n     * <Transactions.parentForCellChanged> and\n     * removes or restores the cell's\n     * connections.\n     */\n    execute() {\n        let tmp = this.child.getParent();\n        const tmp2 = tmp ? tmp.getIndex(this.child) : 0;\n        if (!this.previous) {\n            this.connect(this.child, false);\n        }\n        tmp = this.model.parentForCellChanged(this.child, this.previous, this.previousIndex);\n        if (this.previous) {\n            this.connect(this.child, true);\n        }\n        this.parent = this.previous;\n        this.previous = tmp;\n        this.index = this.previousIndex;\n        this.previousIndex = tmp2;\n    }\n    /**\n     * Disconnects the given cell recursively from its\n     * terminals and stores the previous terminal in the\n     * cell's terminals.\n     *\n     * @warning doc from mxGraph source code is incorrect\n     */\n    connect(cell, isConnect = true) {\n        const source = cell.getTerminal(true);\n        const target = cell.getTerminal(false);\n        if (source) {\n            if (isConnect) {\n                this.model.terminalForCellChanged(cell, source, true);\n            }\n            else {\n                this.model.terminalForCellChanged(cell, null, true);\n            }\n        }\n        if (target) {\n            if (isConnect) {\n                this.model.terminalForCellChanged(cell, target, false);\n            }\n            else {\n                this.model.terminalForCellChanged(cell, null, false);\n            }\n        }\n        cell.setTerminal(source, true);\n        cell.setTerminal(target, false);\n        const childCount = cell.getChildCount();\n        for (let i = 0; i < childCount; i += 1) {\n            this.connect(cell.getChildAt(i), isConnect);\n        }\n    }\n}\nexport default ChildChange;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcA,GACA;;;;;;;;;CASC;;;;AACM,MAAM;IACT,YAAY,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAE;QACzC,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,aAAa,GAAG;IACzB;IACA;;;;;KAKC,GACD,UAAU;QACN,IAAI,MAAM,IAAI,CAAC,KAAK,CAAC,SAAS;QAC9B,MAAM,OAAO,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,IAAI;QAC9C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE;QAC7B;QACA,MAAM,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa;QACnF,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE;QAC7B;QACA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ;QAC3B,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa;QAC/B,IAAI,CAAC,aAAa,GAAG;IACzB;IACA;;;;;;KAMC,GACD,QAAQ,IAAI,EAAE,YAAY,IAAI,EAAE;QAC5B,MAAM,SAAS,KAAK,WAAW,CAAC;QAChC,MAAM,SAAS,KAAK,WAAW,CAAC;QAChC,IAAI,QAAQ;YACR,IAAI,WAAW;gBACX,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,MAAM,QAAQ;YACpD,OACK;gBACD,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,MAAM,MAAM;YAClD;QACJ;QACA,IAAI,QAAQ;YACR,IAAI,WAAW;gBACX,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,MAAM,QAAQ;YACpD,OACK;gBACD,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,MAAM,MAAM;YAClD;QACJ;QACA,KAAK,WAAW,CAAC,QAAQ;QACzB,KAAK,WAAW,CAAC,QAAQ;QACzB,MAAM,aAAa,KAAK,aAAa;QACrC,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,KAAK,EAAG;YACpC,IAAI,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC,IAAI;QACrC;IACJ;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 3331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3337, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/undoable_changes/TerminalChange.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Action to change a terminal in a model.\n */\nexport class TerminalChange {\n    constructor(model, cell, terminal, source) {\n        this.model = model;\n        this.cell = cell;\n        this.terminal = terminal;\n        this.previous = terminal;\n        this.source = source;\n    }\n    /**\n     * Changes the terminal of {@link cell}` to {@link previous}` using\n     * <Transactions.terminalForCellChanged>.\n     */\n    execute() {\n        this.terminal = this.previous;\n        this.previous = this.model.terminalForCellChanged(this.cell, this.previous, this.source);\n    }\n}\nexport default TerminalChange;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcA,GACA;;CAEC;;;;AACM,MAAM;IACT,YAAY,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAE;QACvC,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,MAAM,GAAG;IAClB;IACA;;;KAGC,GACD,UAAU;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM;IAC3F;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 3374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3380, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/undoable_changes/ValueChange.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Action to change a user object in a model.\n *\n * Constructs a change of a user object in the\n * specified model.\n *\n * @class ValueChange\n */\nclass ValueChange {\n    constructor(model, cell, value) {\n        this.model = model;\n        this.cell = cell;\n        this.value = value;\n        this.previous = value;\n    }\n    /**\n     * Changes the value of {@link cell}` to {@link previous}` using\n     * <Transactions.valueForCellChanged>.\n     */\n    execute() {\n        this.value = this.previous;\n        this.previous = this.model.valueForCellChanged(this.cell, this.previous);\n    }\n}\nexport default ValueChange;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcA,GACA;;;;;;;CAOC;;;AACD,MAAM;IACF,YAAY,KAAK,EAAE,IAAI,EAAE,KAAK,CAAE;QAC5B,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,QAAQ,GAAG;IACpB;IACA;;;KAGC,GACD,UAAU;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ;IAC3E;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 3420, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3426, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/undoable_changes/GeometryChange.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Action to change a cell's geometry in a model.\n *\n * Constructor: mxGeometryChange\n *\n * Constructs a change of a geometry in the\n * specified model.\n */\nclass GeometryChange {\n    constructor(model, cell, geometry) {\n        this.model = model;\n        this.cell = cell;\n        this.geometry = geometry;\n        this.previous = geometry;\n    }\n    /**\n     * Changes the geometry of {@link cell}` ro {@link previous}` using\n     * <Transactions.geometryForCellChanged>.\n     */\n    execute() {\n        this.geometry = this.previous;\n        this.previous = this.model.geometryForCellChanged(this.cell, this.previous);\n    }\n}\nexport default GeometryChange;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcA,GACA;;;;;;;CAOC;;;AACD,MAAM;IACF,YAAY,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAE;QAC/B,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,QAAQ,GAAG;IACpB;IACA;;;KAGC,GACD,UAAU;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ;IAC9E;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 3466, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3472, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/undoable_changes/StyleChange.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Action to change a cell's style in a model.\n *\n * @class StyleChange\n */\nclass StyleChange {\n    constructor(model, cell, style) {\n        this.model = model;\n        this.cell = cell;\n        this.style = style;\n        this.previous = style;\n    }\n    /**\n     * Changes the style of {@link cell}` to {@link previous}` using\n     * <Transactions.styleForCellChanged>.\n     */\n    execute() {\n        this.style = this.previous;\n        this.previous = this.model.styleForCellChanged(this.cell, this.previous);\n    }\n}\nexport default StyleChange;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcA,GACA;;;;CAIC;;;AACD,MAAM;IACF,YAAY,KAAK,EAAE,IAAI,EAAE,KAAK,CAAE;QAC5B,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,QAAQ,GAAG;IACpB;IACA;;;KAGC,GACD,UAAU;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ;IAC3E;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 3509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3515, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/undoable_changes/CollapseChange.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Action to change a cell's collapsed state in a model.\n *\n * Constructor: mxCollapseChange\n *\n * Constructs a change of a collapsed state in the\n * specified model.\n */\nclass CollapseChange {\n    constructor(model, cell, collapsed) {\n        this.model = model;\n        this.cell = cell;\n        this.collapsed = collapsed;\n        this.previous = collapsed;\n    }\n    /**\n     * Changes the collapsed state of {@link cell}` to {@link previous}` using\n     * <Transactions.collapsedStateForCellChanged>.\n     */\n    execute() {\n        this.collapsed = this.previous;\n        this.previous = this.model.collapsedStateForCellChanged(this.cell, this.previous);\n    }\n}\nexport default CollapseChange;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcA,GACA;;;;;;;CAOC;;;AACD,MAAM;IACF,YAAY,KAAK,EAAE,IAAI,EAAE,SAAS,CAAE;QAChC,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,QAAQ,GAAG;IACpB;IACA;;;KAGC,GACD,UAAU;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ;QAC9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,4BAA4B,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ;IACpF;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 3555, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3561, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/undoable_changes/VisibleChange.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Action to change a cell's visible state in a model.\n *\n * Constructor: mxVisibleChange\n *\n * Constructs a change of a visible state in the\n * specified model.\n */\nclass VisibleChange {\n    constructor(model, cell, visible) {\n        this.model = model;\n        this.cell = cell;\n        this.visible = visible;\n        this.previous = visible;\n    }\n    /**\n     * Changes the visible state of {@link cell}` to {@link previous}` using\n     * <Transactions.visibleStateForCellChanged>.\n     */\n    execute() {\n        this.visible = this.previous;\n        this.previous = this.model.visibleStateForCellChanged(this.cell, this.previous);\n    }\n}\nexport default VisibleChange;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcA,GACA;;;;;;;CAOC;;;AACD,MAAM;IACF,YAAY,KAAK,EAAE,IAAI,EAAE,OAAO,CAAE;QAC9B,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,QAAQ,GAAG;IACpB;IACA;;;KAGC,GACD,UAAU;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ;QAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ;IAClF;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 3601, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3607, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/undoable_changes/UndoableEdit.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport InternalEvent from '../event/InternalEvent';\nimport EventObject from '../event/EventObject';\n/**\n * Implements a composite undoable edit. Here is an example for a custom change\n * which gets executed via the model:\n *\n * ```javascript\n * function CustomChange(model, name)\n * {\n *   this.model = model;\n *   this.name = name;\n *   this.previous = name;\n * };\n *\n * execute = ()=>\n * {\n *   let tmp = this.model.name;\n *   this.model.name = this.previous;\n *   this.previous = tmp;\n * };\n *\n * let name = prompt('Enter name');\n * graph.model.execute(new CustomChange(graph.model, name));\n * ```\n *\n * Event: mxEvent.EXECUTED\n *\n * Fires between START_EDIT and END_EDIT after an atomic change was executed.\n * The <code>change</code> property contains the change that was executed.\n *\n * Event: mxEvent.START_EDIT\n *\n * Fires before a set of changes will be executed in <undo> or <redo>.\n * This event contains no properties.\n *\n * Event: mxEvent.END_EDIT\n *\n * Fires after a set of changeswas executed in <undo> or <redo>.\n * This event contains no properties.\n *\n * Constructor: mxUndoableEdit\n *\n * Constructs a new undoable edit for the given source.\n */\nclass UndoableEdit {\n    constructor(source, significant = true) {\n        /**\n         * Array that contains the changes that make up this edit. The changes are\n         * expected to either have an undo and redo function, or an execute\n         * function. Default is an empty array.\n         */\n        this.changes = [];\n        /**\n         * Specifies if the undoable change is significant.\n         * Default is true.\n         */\n        this.significant = true;\n        /**\n         * Specifies if this edit has been undone. Default is false.\n         */\n        this.undone = false;\n        /**\n         * Specifies if this edit has been redone. Default is false.\n         */\n        this.redone = false;\n        this.source = source;\n        this.changes = [];\n        this.significant = significant;\n    }\n    /**\n     * Returns true if the this edit contains no changes.\n     */\n    isEmpty() {\n        return this.changes.length === 0;\n    }\n    /**\n     * Returns <significant>.\n     */\n    isSignificant() {\n        return this.significant;\n    }\n    /**\n     * Adds the specified change to this edit. The change is an object that is\n     * expected to either have an undo and redo, or an execute function.\n     */\n    add(change) {\n        this.changes.push(change);\n    }\n    /**\n     * Hook to notify any listeners of the changes after an <undo> or <redo>\n     * has been carried out. This implementation is empty.\n     */\n    notify() {\n        return;\n    }\n    /**\n     * Hook to free resources after the edit has been removed from the command\n     * history. This implementation is empty.\n     */\n    die() {\n        return;\n    }\n    /**\n     * Undoes all changes in this edit.\n     */\n    undo() {\n        if (!this.undone) {\n            this.source.fireEvent(new EventObject(InternalEvent.START_EDIT));\n            const count = this.changes.length;\n            for (let i = count - 1; i >= 0; i--) {\n                const change = this.changes[i];\n                if (change.execute) {\n                    change.execute();\n                }\n                else if (change.undo) {\n                    change.undo();\n                }\n                // New global executed event\n                this.source.fireEvent(new EventObject(InternalEvent.EXECUTED, { change }));\n            }\n            this.undone = true;\n            this.redone = false;\n            this.source.fireEvent(new EventObject(InternalEvent.END_EDIT));\n        }\n        this.notify();\n    }\n    /**\n     * Redoes all changes in this edit.\n     */\n    redo() {\n        if (!this.redone) {\n            this.source.fireEvent(new EventObject(InternalEvent.START_EDIT));\n            const count = this.changes.length;\n            for (let i = 0; i < count; i += 1) {\n                const change = this.changes[i];\n                if (change.execute != null) {\n                    change.execute();\n                }\n                else if (change.redo != null) {\n                    change.redo();\n                }\n                // New global executed event\n                this.source.fireEvent(new EventObject(InternalEvent.EXECUTED, { change }));\n            }\n            this.undone = false;\n            this.redone = true;\n            this.source.fireEvent(new EventObject(InternalEvent.END_EDIT));\n        }\n        this.notify();\n    }\n}\nexport default UndoableEdit;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;;AAEA;AADA;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAyCC,GACD,MAAM;IACF,YAAY,MAAM,EAAE,cAAc,IAAI,CAAE;QACpC;;;;SAIC,GACD,IAAI,CAAC,OAAO,GAAG,EAAE;QACjB;;;SAGC,GACD,IAAI,CAAC,WAAW,GAAG;QACnB;;SAEC,GACD,IAAI,CAAC,MAAM,GAAG;QACd;;SAEC,GACD,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,OAAO,GAAG,EAAE;QACjB,IAAI,CAAC,WAAW,GAAG;IACvB;IACA;;KAEC,GACD,UAAU;QACN,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK;IACnC;IACA;;KAEC,GACD,gBAAgB;QACZ,OAAO,IAAI,CAAC,WAAW;IAC3B;IACA;;;KAGC,GACD,IAAI,MAAM,EAAE;QACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;IACtB;IACA;;;KAGC,GACD,SAAS;QACL;IACJ;IACA;;;KAGC,GACD,MAAM;QACF;IACJ;IACA;;KAEC,GACD,OAAO;QACH,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,yKAAA,CAAA,UAAW,CAAC,2KAAA,CAAA,UAAa,CAAC,UAAU;YAC9D,MAAM,QAAQ,IAAI,CAAC,OAAO,CAAC,MAAM;YACjC,IAAK,IAAI,IAAI,QAAQ,GAAG,KAAK,GAAG,IAAK;gBACjC,MAAM,SAAS,IAAI,CAAC,OAAO,CAAC,EAAE;gBAC9B,IAAI,OAAO,OAAO,EAAE;oBAChB,OAAO,OAAO;gBAClB,OACK,IAAI,OAAO,IAAI,EAAE;oBAClB,OAAO,IAAI;gBACf;gBACA,4BAA4B;gBAC5B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,yKAAA,CAAA,UAAW,CAAC,2KAAA,CAAA,UAAa,CAAC,QAAQ,EAAE;oBAAE;gBAAO;YAC3E;YACA,IAAI,CAAC,MAAM,GAAG;YACd,IAAI,CAAC,MAAM,GAAG;YACd,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,yKAAA,CAAA,UAAW,CAAC,2KAAA,CAAA,UAAa,CAAC,QAAQ;QAChE;QACA,IAAI,CAAC,MAAM;IACf;IACA;;KAEC,GACD,OAAO;QACH,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,yKAAA,CAAA,UAAW,CAAC,2KAAA,CAAA,UAAa,CAAC,UAAU;YAC9D,MAAM,QAAQ,IAAI,CAAC,OAAO,CAAC,MAAM;YACjC,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,KAAK,EAAG;gBAC/B,MAAM,SAAS,IAAI,CAAC,OAAO,CAAC,EAAE;gBAC9B,IAAI,OAAO,OAAO,IAAI,MAAM;oBACxB,OAAO,OAAO;gBAClB,OACK,IAAI,OAAO,IAAI,IAAI,MAAM;oBAC1B,OAAO,IAAI;gBACf;gBACA,4BAA4B;gBAC5B,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,yKAAA,CAAA,UAAW,CAAC,2KAAA,CAAA,UAAa,CAAC,QAAQ,EAAE;oBAAE;gBAAO;YAC3E;YACA,IAAI,CAAC,MAAM,GAAG;YACd,IAAI,CAAC,MAAM,GAAG;YACd,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,yKAAA,CAAA,UAAW,CAAC,2KAAA,CAAA,UAAa,CAAC,QAAQ;QAChE;QACA,IAAI,CAAC,MAAM;IACf;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 3770, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3776, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/undoable_changes/CurrentRootChange.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport EventObject from '../event/EventObject';\nimport Point from '../geometry/Point';\nimport InternalEvent from '../event/InternalEvent';\n/**\n * Action to change the current root in a view.\n */\nclass CurrentRootChange {\n    constructor(view, root) {\n        this.view = view;\n        this.root = root;\n        this.previous = root;\n        this.isUp = root === null;\n        if (!this.isUp) {\n            let tmp = this.view.currentRoot;\n            while (tmp) {\n                if (tmp === root) {\n                    this.isUp = true;\n                    break;\n                }\n                tmp = tmp.getParent();\n            }\n        }\n    }\n    /**\n     * Changes the current root of the view.\n     */\n    execute() {\n        const tmp = this.view.currentRoot;\n        this.view.currentRoot = this.previous;\n        this.previous = tmp;\n        const translate = this.view.graph.getTranslateForRoot(this.view.currentRoot);\n        if (translate) {\n            this.view.translate = new Point(-translate.x, -translate.y);\n        }\n        if (this.isUp) {\n            this.view.clear(this.view.currentRoot, true, true);\n            this.view.validate(null);\n        }\n        else {\n            this.view.refresh();\n        }\n        const name = this.isUp ? InternalEvent.UP : InternalEvent.DOWN;\n        this.view.fireEvent(new EventObject(name, { root: this.view.currentRoot, previous: this.previous }));\n        this.isUp = !this.isUp;\n    }\n}\nexport default CurrentRootChange;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcA;;;AAEA;AACA;AAFA;;;;AAGA;;CAEC,GACD,MAAM;IACF,YAAY,IAAI,EAAE,IAAI,CAAE;QACpB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,IAAI,GAAG,SAAS;QACrB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACZ,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW;YAC/B,MAAO,IAAK;gBACR,IAAI,QAAQ,MAAM;oBACd,IAAI,CAAC,IAAI,GAAG;oBACZ;gBACJ;gBACA,MAAM,IAAI,SAAS;YACvB;QACJ;IACJ;IACA;;KAEC,GACD,UAAU;QACN,MAAM,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW;QACjC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ;QACrC,IAAI,CAAC,QAAQ,GAAG;QAChB,MAAM,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW;QAC3E,IAAI,WAAW;YACX,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,sKAAA,CAAA,UAAK,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC;QAC9D;QACA,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM;YAC7C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,OACK;YACD,IAAI,CAAC,IAAI,CAAC,OAAO;QACrB;QACA,MAAM,OAAO,IAAI,CAAC,IAAI,GAAG,2KAAA,CAAA,UAAa,CAAC,EAAE,GAAG,2KAAA,CAAA,UAAa,CAAC,IAAI;QAC9D,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,yKAAA,CAAA,UAAW,CAAC,MAAM;YAAE,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,UAAU,IAAI,CAAC,QAAQ;QAAC;QACjG,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI;IAC1B;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 3843, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3849, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/undoable_changes/SelectionChange.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport EventObject from '../event/EventObject';\nimport InternalEvent from '../event/InternalEvent';\n/**\n * Action to change the current root in a view.\n */\nclass SelectionChange {\n    constructor(graph, added = [], removed = []) {\n        this.graph = graph;\n        this.added = added.slice();\n        this.removed = removed.slice();\n    }\n    /**\n     * Changes the current root of the view.\n     */\n    execute() {\n        const selectionModel = this.graph.getSelectionModel();\n        for (const removed of this.removed) {\n            selectionModel.cellRemoved(removed);\n        }\n        for (const added of this.added) {\n            selectionModel.cellAdded(added);\n        }\n        [this.added, this.removed] = [this.removed, this.added];\n        selectionModel.fireEvent(new EventObject(InternalEvent.CHANGE, { added: this.added, removed: this.removed }));\n    }\n}\nexport default SelectionChange;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcA;;;AACA;AACA;;;AACA;;CAEC,GACD,MAAM;IACF,YAAY,KAAK,EAAE,QAAQ,EAAE,EAAE,UAAU,EAAE,CAAE;QACzC,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,KAAK,GAAG,MAAM,KAAK;QACxB,IAAI,CAAC,OAAO,GAAG,QAAQ,KAAK;IAChC;IACA;;KAEC,GACD,UAAU;QACN,MAAM,iBAAiB,IAAI,CAAC,KAAK,CAAC,iBAAiB;QACnD,KAAK,MAAM,WAAW,IAAI,CAAC,OAAO,CAAE;YAChC,eAAe,WAAW,CAAC;QAC/B;QACA,KAAK,MAAM,SAAS,IAAI,CAAC,KAAK,CAAE;YAC5B,eAAe,SAAS,CAAC;QAC7B;QACA,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG;YAAC,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,KAAK;SAAC;QACvD,eAAe,SAAS,CAAC,IAAI,yKAAA,CAAA,UAAW,CAAC,2KAAA,CAAA,UAAa,CAAC,MAAM,EAAE;YAAE,OAAO,IAAI,CAAC,KAAK;YAAE,SAAS,IAAI,CAAC,OAAO;QAAC;IAC9G;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 3899, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3905, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/GraphDataModel.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2018, JGraph Ltd\nCopyright (c) 2006-2018, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport EventSource from './event/EventSource';\nimport UndoableEdit from './undoable_changes/UndoableEdit';\nimport CellPath from './cell/CellPath';\nimport Cell from './cell/Cell';\nimport { isNumeric } from '../util/mathUtils';\nimport EventObject from './event/EventObject';\nimport InternalEvent from './event/InternalEvent';\nimport ChildChange from './undoable_changes/ChildChange';\nimport CollapseChange from './undoable_changes/CollapseChange';\nimport GeometryChange from './undoable_changes/GeometryChange';\nimport RootChange from './undoable_changes/RootChange';\nimport StyleChange from './undoable_changes/StyleChange';\nimport TerminalChange from './undoable_changes/TerminalChange';\nimport ValueChange from './undoable_changes/ValueChange';\nimport VisibleChange from './undoable_changes/VisibleChange';\nimport { filterCells } from '../util/cellArrayUtils';\n/**\n * Extends {@link EventSource} to implement a graph model. The graph model acts as\n * a wrapper around the cells which are in charge of storing the actual graph\n * datastructure. The model acts as a transactional wrapper with event\n * notification for all changes, whereas the cells contain the atomic\n * operations for updating the actual datastructure.\n *\n * ### Layers\n *\n * The cell hierarchy in the model must have a top-level root cell which\n * contains the layers (typically one default layer), which in turn contain the\n * top-level cells of the layers. This means each cell is contained in a layer.\n * If no layers are required, then all new cells should be added to the default\n * layer.\n *\n * Layers are useful for hiding and showing groups of cells, or for placing\n * groups of cells on top of other cells in the display. To identify a layer,\n * the {@link isLayer} function is used. It returns true if the parent of the given\n * cell is the root of the model.\n *\n * ### Events\n *\n * See events section for more details. There is a new set of events for\n * tracking transactional changes as they happen. The events are called\n * startEdit for the initial beginUpdate, executed for each executed change\n * and endEdit for the terminal endUpdate. The executed event contains a\n * property called change which represents the change after execution.\n *\n * ### Encoding the model\n *\n * #### To encode a graph model, use the following code:\n *\n * ```javascript\n * var enc = new Codec();\n * var node = enc.encode(graph.getDataModel());\n * ```\n *\n * This will create an XML node that contains all the model information.\n *\n * #### Encoding and decoding changes:\n *\n * For the encoding of changes, a graph model listener is required that encodes\n * each change from the given array of changes.\n *\n * ```javascript\n * model.addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var changes = evt.getProperty('edit').changes;\n *   var nodes = [];\n *   var codec = new Codec();\n *\n *   for (var i = 0; i < changes.length; i++)\n *   {\n *     nodes.push(codec.encode(changes[i]));\n *   }\n *   // do something with the nodes\n * });\n * ```\n *\n * For the decoding and execution of changes, the codec needs a lookup function\n * that allows it to resolve cell IDs as follows:\n *\n * ```javascript\n * var codec = new Codec();\n * codec.lookup(id)\n * {\n *   return model.getCell(id);\n * }\n * ```\n *\n * For each encoded change (represented by a node), the following code can be\n * used to carry out the decoding and create a change object.\n *\n * ```javascript\n * var changes = [];\n * var change = codec.decode(node);\n * change.model = model;\n * change.execute();\n * changes.push(change);\n * ```\n *\n * The changes can then be dispatched using the model as follows.\n *\n * ```javascript\n * var edit = new mxUndoableEdit(model, false);\n * edit.changes = changes;\n *\n * edit.notify()\n * {\n *   edit.source.fireEvent(new mxEventObject(mxEvent.CHANGE,\n *   \t'edit', edit, 'changes', edit.changes));\n *   edit.source.fireEvent(new mxEventObject(mxEvent.NOTIFY,\n *   \t'edit', edit, 'changes', edit.changes));\n * }\n *\n * model.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n * model.fireEvent(new mxEventObject(mxEvent.CHANGE,\n *    'edit', edit, 'changes', changes));\n * ```\n *\n * Event: mxEvent.CHANGE\n *\n * Fires when an undoable edit is dispatched. The `edit` property\n * contains the {@link UndoableEdit}. The `changes` property contains\n * the array of atomic changes inside the undoable edit. The changes property\n * is **deprecated**, please use edit.changes instead.\n *\n * ### Example\n *\n * For finding newly inserted cells, the following code can be used:\n *\n * ```javascript\n * graph.model.addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var changes = evt.getProperty('edit').changes;\n *\n *   for (var i = 0; i < changes.length; i++)\n *   {\n *     var change = changes[i];\n *\n *     if (change instanceof mxChildChange &&\n *       change.change.previous == null)\n *     {\n *       graph.startEditingAtCell(change.child);\n *       break;\n *     }\n *   }\n * });\n * ```\n *\n * Event: mxEvent.NOTIFY\n *\n * Same as {@link Event#CHANGE}, this event can be used for classes that need to\n * implement a sync mechanism between this model and, say, a remote model. In\n * such a setup, only local changes should trigger a notify event and all\n * changes should trigger a change event.\n *\n * Event: mxEvent.EXECUTE\n *\n * Fires between begin- and endUpdate and after an atomic change was executed\n * in the model. The `change` property contains the atomic change\n * that was executed.\n *\n * Event: mxEvent.EXECUTED\n *\n * Fires between START_EDIT and END_EDIT after an atomic change was executed.\n * The `change` property contains the change that was executed.\n *\n * Event: mxEvent.BEGIN_UPDATE\n *\n * Fires after the {@link updateLevel} was incremented in {@link beginUpdate}. This event\n * contains no properties.\n *\n * Event: mxEvent.START_EDIT\n *\n * Fires after the {@link updateLevel} was changed from 0 to 1. This event\n * contains no properties.\n *\n * Event: mxEvent.END_UPDATE\n *\n * Fires after the {@link updateLevel} was decreased in {@link endUpdate} but before any\n * notification or change dispatching. The `edit` property contains\n * the {@link currentEdit}.\n *\n * Event: mxEvent.END_EDIT\n *\n * Fires after the {@link updateLevel} was changed from 1 to 0. This event\n * contains no properties.\n *\n * Event: mxEvent.BEFORE_UNDO\n *\n * Fires before the change is dispatched after the update level has reached 0\n * in {@link endUpdate}. The `edit` property contains the {@link currentEdit}.\n *\n * Event: mxEvent.UNDO\n *\n * Fires after the change was dispatched in {@link endUpdate}. The `edit`\n * property contains the {@link currentEdit}.\n *\n * @class GraphDataModel\n */\nexport class GraphDataModel extends EventSource {\n    constructor(root = null) {\n        super();\n        /**\n         * Holds the root cell, which in turn contains the cells that represent the\n         * layers of the diagram as child cells. That is, the actual elements of the\n         * diagram are supposed to live in the third generation of cells and below.\n         */\n        this.root = null;\n        /**\n         * Maps from Ids to cells.\n         */\n        this.cells = {};\n        /**\n         * Specifies if edges should automatically be moved into the nearest common\n         * ancestor of their terminals. Default is true.\n         */\n        this.maintainEdgeParent = true;\n        /**\n         * Specifies if relative edge parents should be ignored for finding the nearest\n         * common ancestors of an edge's terminals. Default is true.\n         */\n        this.ignoreRelativeEdgeParent = true;\n        /**\n         * Specifies if the model should automatically create Ids for new cells.\n         * Default is true.\n         */\n        this.createIds = true;\n        /**\n         * Defines the prefix of new Ids. Default is an empty string.\n         */\n        this.prefix = '';\n        /**\n         * Defines the postfix of new Ids. Default is an empty string.\n         */\n        this.postfix = '';\n        /**\n         * Specifies the next Id to be created. Initial value is 0.\n         */\n        // nextId: number | string;\n        this.nextId = 0;\n        /**\n         * Holds the changes for the current transaction. If the transaction is\n         * closed then a new object is created for this variable using\n         * {@link createUndoableEdit}.\n         */\n        this.currentEdit = null;\n        /**\n         * Counter for the depth of nested transactions. Each call to {@link beginUpdate}\n         * will increment this number and each call to {@link endUpdate} will decrement\n         * it. When the counter reaches 0, the transaction is closed and the\n         * respective events are fired. Initial value is 0.\n         */\n        this.updateLevel = 0;\n        /**\n         * True if the program flow is currently inside endUpdate.\n         */\n        this.endingUpdate = false;\n        this.currentEdit = this.createUndoableEdit();\n        if (root != null) {\n            this.setRoot(root);\n        }\n        else {\n            this.clear();\n        }\n    }\n    /**\n     * Sets a new root using {@link createRoot}.\n     */\n    clear() {\n        this.setRoot(this.createRoot());\n    }\n    /**\n     * Returns {@link createIds}.\n     */\n    isCreateIds() {\n        return this.createIds;\n    }\n    /**\n     * Sets {@link createIds}.\n     */\n    setCreateIds(value) {\n        this.createIds = value;\n    }\n    /**\n     * Creates a new root cell with a default layer (child 0).\n     */\n    createRoot() {\n        const cell = new Cell();\n        cell.insert(new Cell());\n        return cell;\n    }\n    /**\n     * Returns the {@link Cell} for the specified Id or null if no cell can be\n     * found for the given Id.\n     *\n     * @param {string} id  A string representing the Id of the cell.\n     */\n    getCell(id) {\n        return this.cells ? this.cells[id] : null;\n    }\n    filterCells(cells, filter) {\n        return filterCells(filter)(cells);\n    }\n    getRoot(cell = null) {\n        return cell ? cell.getRoot() : this.root;\n    }\n    /**\n     * Sets the {@link root} of the model using {@link RootChange} and adds the change to\n     * the current transaction. This resets all datastructures in the model and\n     * is the preferred way of clearing an existing model. Returns the new\n     * root.\n     *\n     * Example:\n     *\n     * ```javascript\n     * var root = new mxCell();\n     * root.insert(new mxCell());\n     * model.setRoot(root);\n     * ```\n     *\n     * @param {Cell} root  that specifies the new root.\n     */\n    setRoot(root) {\n        this.execute(new RootChange(this, root));\n        return root;\n    }\n    /**\n     * Inner callback to change the root of the model and update the internal\n     * datastructures, such as {@link cells} and {@link nextId}. Returns the previous root.\n     *\n     * @param {Cell} root  that specifies the new root.\n     */\n    rootChanged(root) {\n        const oldRoot = this.root;\n        this.root = root;\n        // Resets counters and datastructures\n        this.nextId = 0;\n        this.cells = null;\n        this.cellAdded(root);\n        return oldRoot;\n    }\n    /**\n     * Returns true if the given cell is the root of the model and a non-null\n     * value.\n     *\n     * @param {Cell} cell  that represents the possible root.\n     */\n    isRoot(cell = null) {\n        return cell != null && this.root === cell;\n    }\n    /**\n     * Returns true if {@link isRoot} returns true for the parent of the given cell.\n     *\n     * @param cell  that represents the possible layer.\n     */\n    isLayer(cell) {\n        return cell ? this.isRoot(cell.getParent()) : false;\n    }\n    /**\n     * Returns true if the model contains the given {@link Cell}.\n     *\n     * @param {Cell} cell  that specifies the cell.\n     */\n    contains(cell) {\n        return this.root.isAncestor(cell);\n    }\n    /**\n     * Adds the specified child to the parent at the given index using\n     * {@link ChildChange} and adds the change to the current transaction. If no\n     * index is specified then the child is appended to the parent's array of\n     * children. Returns the inserted child.\n     *\n     * @param {Cell} parent  that specifies the parent to contain the child.\n     * @param {Cell} child  that specifies the child to be inserted.\n     * @param index  Optional integer that specifies the index of the child.\n     */\n    add(parent, child, index = null) {\n        if (child !== parent && parent != null && child != null) {\n            // Appends the child if no index was specified\n            if (index == null) {\n                index = parent.getChildCount();\n            }\n            const parentChanged = parent !== child.getParent();\n            this.execute(new ChildChange(this, parent, child, index));\n            // Maintains the edges parents by moving the edges\n            // into the nearest common ancestor of its terminals\n            if (this.maintainEdgeParent && parentChanged) {\n                this.updateEdgeParents(child);\n            }\n        }\n        return child;\n    }\n    /**\n     * Inner callback to update {@link cells} when a cell has been added. This\n     * implementation resolves collisions by creating new Ids. To change the\n     * ID of a cell after it was inserted into the model, use the following\n     * code:\n     *\n     * (code\n     * delete model.cells[cell.getId()];\n     * cell.setId(newId);\n     * model.cells[cell.getId()] = cell;\n     * ```\n     *\n     * If the change of the ID should be part of the command history, then the\n     * cell should be removed from the model and a clone with the new ID should\n     * be reinserted into the model instead.\n     *\n     * @param {Cell} cell  that specifies the cell that has been added.\n     */\n    cellAdded(cell) {\n        if (cell != null) {\n            // Creates an Id for the cell if not Id exists\n            if (cell.getId() == null && this.createIds) {\n                cell.setId(this.createId(cell));\n            }\n            if (cell.getId() != null) {\n                let collision = this.getCell(cell.getId());\n                if (collision !== cell) {\n                    // Creates new Id for the cell\n                    // as long as there is a collision\n                    while (collision != null) {\n                        cell.setId(this.createId(cell));\n                        collision = this.getCell(cell.getId());\n                    }\n                    // Lazily creates the cells dictionary\n                    if (this.cells == null) {\n                        this.cells = {};\n                    }\n                    this.cells[cell.getId()] = cell;\n                }\n            }\n            // Makes sure IDs of deleted cells are not reused\n            if (isNumeric(String(cell.getId()))) {\n                this.nextId = Math.max(this.nextId, parseInt(cell.getId()));\n            }\n            // Recursively processes child cells\n            for (const child of cell.getChildren()) {\n                this.cellAdded(child);\n            }\n        }\n    }\n    /**\n     * Hook method to create an Id for the specified cell. This implementation\n     * concatenates {@link prefix}, id and {@link postfix} to create the Id and increments\n     * {@link nextId}. The cell is ignored by this implementation, but can be used in\n     * overridden methods to prefix the Ids with eg. the cell type.\n     *\n     * @param {Cell} cell  to create the Id for.\n     */\n    createId(cell) {\n        const id = this.nextId;\n        this.nextId++;\n        return this.prefix + id + this.postfix;\n    }\n    /**\n     * Updates the parent for all edges that are connected to cell or one of\n     * its descendants using {@link updateEdgeParent}.\n     */\n    updateEdgeParents(cell, root = this.getRoot(cell)) {\n        // Updates edges on children first\n        const childCount = cell.getChildCount();\n        for (let i = 0; i < childCount; i += 1) {\n            const child = cell.getChildAt(i);\n            this.updateEdgeParents(child, root);\n        }\n        // Updates the parents of all connected edges\n        const edgeCount = cell.getEdgeCount();\n        const edges = [];\n        for (let i = 0; i < edgeCount; i += 1) {\n            edges.push(cell.getEdgeAt(i));\n        }\n        for (let i = 0; i < edges.length; i += 1) {\n            const edge = edges[i];\n            // Updates edge parent if edge and child have\n            // a common root node (does not need to be the\n            // model root node)\n            if (root.isAncestor(edge)) {\n                this.updateEdgeParent(edge, root);\n            }\n        }\n    }\n    /**\n     * Inner callback to update the parent of the specified {@link Cell} to the\n     * nearest-common-ancestor of its two terminals.\n     *\n     * @param {Cell} edge  that specifies the edge.\n     * @param {Cell} root  that represents the current root of the model.\n     */\n    updateEdgeParent(edge, root) {\n        let source = edge.getTerminal(true);\n        let target = edge.getTerminal(false);\n        let cell = null;\n        // Uses the first non-relative descendants of the source terminal\n        while (source != null &&\n            !source.isEdge() &&\n            source.geometry != null &&\n            source.geometry.relative) {\n            source = source.getParent();\n        }\n        // Uses the first non-relative descendants of the target terminal\n        while (target != null &&\n            this.ignoreRelativeEdgeParent &&\n            !target.isEdge() &&\n            target.geometry != null &&\n            target.geometry.relative) {\n            target = target.getParent();\n        }\n        if (root.isAncestor(source) && root.isAncestor(target)) {\n            if (source === target) {\n                cell = source ? source.getParent() : null;\n            }\n            else if (source) {\n                cell = source.getNearestCommonAncestor(target);\n            }\n            if (cell != null &&\n                (cell.getParent() !== this.root || cell.isAncestor(edge)) &&\n                edge &&\n                edge.getParent() !== cell) {\n                let geo = edge.getGeometry();\n                if (geo != null) {\n                    const origin1 = edge.getParent().getOrigin();\n                    const origin2 = cell.getOrigin();\n                    const dx = origin2.x - origin1.x;\n                    const dy = origin2.y - origin1.y;\n                    geo = geo.clone();\n                    geo.translate(-dx, -dy);\n                    this.setGeometry(edge, geo);\n                }\n                this.add(cell, edge, cell.getChildCount());\n            }\n        }\n    }\n    /**\n     * Removes the specified cell from the model using {@link ChildChange} and adds\n     * the change to the current transaction. This operation will remove the\n     * cell and all of its children from the model. Returns the removed cell.\n     *\n     * @param {Cell} cell  that should be removed.\n     */\n    remove(cell) {\n        if (cell === this.root) {\n            this.setRoot(null);\n        }\n        else if (cell.getParent() != null) {\n            this.execute(new ChildChange(this, null, cell));\n        }\n        return cell;\n    }\n    /**\n     * Inner callback to update {@link cells} when a cell has been removed.\n     *\n     * @param {Cell} cell  that specifies the cell that has been removed.\n     */\n    cellRemoved(cell) {\n        if (cell != null && this.cells != null) {\n            // Recursively processes child cells\n            const childCount = cell.getChildCount();\n            for (let i = childCount - 1; i >= 0; i--) {\n                this.cellRemoved(cell.getChildAt(i));\n            }\n            // Removes the dictionary entry for the cell\n            if (this.cells != null && cell.getId() != null) {\n                // @ts-ignore\n                delete this.cells[cell.getId()];\n            }\n        }\n    }\n    /**\n     * Inner callback to update the parent of a cell using {@link Cell#insert}\n     * on the parent and return the previous parent.\n     *\n     * @param {Cell} cell  to update the parent for.\n     * @param {Cell} parent  that specifies the new parent of the cell.\n     * @param index  Optional integer that defines the index of the child\n     * in the parent's child array.\n     */\n    parentForCellChanged(cell, parent, index) {\n        const previous = cell.getParent();\n        if (parent != null) {\n            if (parent !== previous || previous.getIndex(cell) !== index) {\n                parent.insert(cell, index);\n            }\n        }\n        else if (previous != null) {\n            const oldIndex = previous.getIndex(cell);\n            previous.remove(oldIndex);\n        }\n        // Adds or removes the cell from the model\n        const par = parent ? this.contains(parent) : null;\n        const pre = this.contains(previous);\n        if (par && !pre) {\n            this.cellAdded(cell);\n        }\n        else if (pre && !par) {\n            this.cellRemoved(cell);\n        }\n        return previous;\n    }\n    /**\n     * Sets the source or target terminal of the given {@link Cell} using\n     * {@link TerminalChange} and adds the change to the current transaction.\n     * This implementation updates the parent of the edge using {@link updateEdgeParent}\n     * if required.\n     *\n     * @param {Cell} edge  that specifies the edge.\n     * @param {Cell} terminal  that specifies the new terminal.\n     * @param isSource  Boolean indicating if the terminal is the new source or\n     * target terminal of the edge.\n     */\n    // setTerminal(edge: mxCell, terminal: mxCell, isSource: boolean): mxCell;\n    setTerminal(edge, terminal, isSource) {\n        const terminalChanged = terminal !== edge.getTerminal(isSource);\n        this.execute(new TerminalChange(this, edge, terminal, isSource));\n        if (this.maintainEdgeParent && terminalChanged) {\n            this.updateEdgeParent(edge, this.getRoot());\n        }\n        return terminal;\n    }\n    /**\n     * Sets the source and target {@link Cell} of the given {@link Cell} in a single\n     * transaction using {@link setTerminal} for each end of the edge.\n     *\n     * @param {Cell} edge  that specifies the edge.\n     * @param {Cell} source  that specifies the new source terminal.\n     * @param {Cell} target  that specifies the new target terminal.\n     */\n    // setTerminals(edge: mxCell, source: mxCell, target: mxCell): void;\n    setTerminals(edge, source, target) {\n        this.beginUpdate();\n        try {\n            this.setTerminal(edge, source, true);\n            this.setTerminal(edge, target, false);\n        }\n        finally {\n            this.endUpdate();\n        }\n    }\n    /**\n     * Inner helper function to update the terminal of the edge using\n     * {@link Cell#insertEdge} and return the previous terminal.\n     *\n     * @param {Cell} edge  that specifies the edge to be updated.\n     * @param {Cell} terminal  that specifies the new terminal.\n     * @param isSource  Boolean indicating if the terminal is the new source or\n     * target terminal of the edge.\n     */\n    // terminalForCellChanged(edge: mxCell, terminal: mxCell, isSource: boolean): mxCell;\n    terminalForCellChanged(edge, terminal, isSource = false) {\n        const previous = edge.getTerminal(isSource);\n        if (terminal != null) {\n            terminal.insertEdge(edge, isSource);\n        }\n        else if (previous != null) {\n            previous.removeEdge(edge, isSource);\n        }\n        return previous;\n    }\n    /**\n     * Returns all edges between the given source and target pair. If directed\n     * is true, then only edges from the source to the target are returned,\n     * otherwise, all edges between the two cells are returned.\n     *\n     * @param {Cell} source  that defines the source terminal of the edge to be\n     * returned.\n     * @param {Cell} target  that defines the target terminal of the edge to be\n     * returned.\n     * @param directed  Optional boolean that specifies if the direction of the\n     * edge should be taken into account. Default is false.\n     */\n    getEdgesBetween(source, target, directed = false) {\n        const tmp1 = source.getEdgeCount();\n        const tmp2 = target.getEdgeCount();\n        // Assumes the source has less connected edges\n        let terminal = source;\n        let edgeCount = tmp1;\n        // Uses the smaller array of connected edges\n        // for searching the edge\n        if (tmp2 < tmp1) {\n            edgeCount = tmp2;\n            terminal = target;\n        }\n        const result = [];\n        // Checks if the edge is connected to the correct\n        // cell and returns the first match\n        for (let i = 0; i < edgeCount; i += 1) {\n            const edge = terminal.getEdgeAt(i);\n            const src = edge.getTerminal(true);\n            const trg = edge.getTerminal(false);\n            const directedMatch = src === source && trg === target;\n            const oppositeMatch = trg === source && src === target;\n            if (directedMatch || (!directed && oppositeMatch)) {\n                result.push(edge);\n            }\n        }\n        return result;\n    }\n    /**\n     * Sets the user object of then given {@link Cell} using {@link ValueChange}\n     * and adds the change to the current transaction.\n     *\n     * @param {Cell} cell  whose user object should be changed.\n     * @param value  Object that defines the new user object.\n     */\n    setValue(cell, value) {\n        this.execute(new ValueChange(this, cell, value));\n        return value;\n    }\n    /**\n     * Inner callback to update the user object of the given {@link Cell}\n     * using {@link Cell#valueChanged} and return the previous value,\n     * that is, the return value of {@link Cell#valueChanged}.\n     *\n     * To change a specific attribute in an XML node, the following code can be\n     * used.\n     *\n     * ```javascript\n     * graph.getDataModel().valueForCellChanged(cell, value)\n     * {\n     *   var previous = cell.value.getAttribute('label');\n     *   cell.value.setAttribute('label', value);\n     *\n     *   return previous;\n     * };\n     * ```\n     */\n    valueForCellChanged(cell, value) {\n        return cell.valueChanged(value);\n    }\n    /**\n     * Sets the {@link Geometry} of the given {@link Cell}. The actual update\n     * of the cell is carried out in {@link geometryForCellChanged}. The\n     * {@link GeometryChange} action is used to encapsulate the change.\n     *\n     * @param {Cell} cell  whose geometry should be changed.\n     * @param {Geometry} geometry  that defines the new geometry.\n     */\n    setGeometry(cell, geometry) {\n        if (geometry !== cell.getGeometry()) {\n            this.execute(new GeometryChange(this, cell, geometry));\n        }\n        return geometry;\n    }\n    /**\n     * Inner callback to update the {@link Geometry} of the given {@link Cell} using\n     * {@link Cell#setGeometry} and return the previous {@link Geometry}.\n     */\n    geometryForCellChanged(cell, geometry) {\n        const previous = cell.getGeometry();\n        cell.setGeometry(geometry);\n        return previous;\n    }\n    /**\n     * Sets the style of the given {@link Cell} using {@link StyleChange} and adds the change to the current transaction.\n     *\n     * **IMPORTANT**: Do not pass {@link Cell.getStyle} as value of the `style` parameter. Otherwise, no style change is performed, so the view won't be updated.\n     * Always get a clone of the style of the cell with {@link Cell.getClonedStyle}, then update it and pass the updated style to this method.\n     *\n     * @param cell  whose style should be changed.\n     * @param style the new cell style to set.\n     */\n    setStyle(cell, style) {\n        // To investigate in the future: it may be more convenient to do a deep comparison to prevent unnecessary changes\n        // If the passed style is the same as the current style without being the same instance, we don't need to do anything\n        // With the current implementation, a style change is executed when the styles are deep equal.\n        if (style !== cell.getStyle()) {\n            this.execute(new StyleChange(this, cell, style));\n        }\n    }\n    /**\n     * Inner callback to update the style of the given {@link Cell}  using {@link Cell#setStyle} and return the previous style.\n     *\n     * **IMPORTANT**: to fully work, this method should not receive `cell.getStyle` as value of the `style` parameter. See {@link setStyle} for more information.\n     *\n     * @param cell  whose style should be changed.\n     * @param style the new cell style to set.\n     */\n    styleForCellChanged(cell, style) {\n        const previous = cell.getStyle();\n        cell.setStyle(style);\n        return previous;\n    }\n    /**\n     * Sets the collapsed state of the given {@link Cell} using {@link CollapseChange}\n     * and adds the change to the current transaction.\n     *\n     * @param {Cell} cell  whose collapsed state should be changed.\n     * @param collapsed  Boolean that specifies the new collpased state.\n     */\n    setCollapsed(cell, collapsed) {\n        if (collapsed !== cell.isCollapsed()) {\n            this.execute(new CollapseChange(this, cell, collapsed));\n        }\n        return collapsed;\n    }\n    /**\n     * Inner callback to update the collapsed state of the\n     * given {@link Cell} using {@link Cell#setCollapsed} and return\n     * the previous collapsed state.\n     *\n     * @param {Cell} cell  that specifies the cell to be updated.\n     * @param collapsed  Boolean that specifies the new collapsed state.\n     */\n    collapsedStateForCellChanged(cell, collapsed) {\n        const previous = cell.isCollapsed();\n        cell.setCollapsed(collapsed);\n        return previous;\n    }\n    /**\n     * Sets the visible state of the given {@link Cell} using {@link VisibleChange} and\n     * adds the change to the current transaction.\n     *\n     * @param {Cell} cell  whose visible state should be changed.\n     * @param visible  Boolean that specifies the new visible state.\n     */\n    setVisible(cell, visible) {\n        if (visible !== cell.isVisible()) {\n            this.execute(new VisibleChange(this, cell, visible));\n        }\n        return visible;\n    }\n    /**\n     * Inner callback to update the visible state of the\n     * given {@link Cell} using {@link Cell#setCollapsed} and return\n     * the previous visible state.\n     *\n     * @param {Cell} cell  that specifies the cell to be updated.\n     * @param visible  Boolean that specifies the new visible state.\n     */\n    visibleStateForCellChanged(cell, visible) {\n        const previous = cell.isVisible();\n        cell.setVisible(visible);\n        return previous;\n    }\n    /**\n     * Executes the given edit and fires events if required. The edit object\n     * requires an execute function which is invoked. The edit is added to the\n     * {@link currentEdit} between {@link beginUpdate} and {@link endUpdate} calls, so that\n     * events will be fired if this execute is an individual transaction, that\n     * is, if no previous {@link beginUpdate} calls have been made without calling\n     * {@link endUpdate}. This implementation fires an {@link execute} event before\n     * executing the given change.\n     *\n     * @param change  Object that described the change.\n     */\n    execute(change) {\n        change.execute();\n        this.beginUpdate();\n        this.currentEdit.add(change);\n        this.fireEvent(new EventObject(InternalEvent.EXECUTE, { change }));\n        // New global executed event\n        this.fireEvent(new EventObject(InternalEvent.EXECUTED, { change }));\n        this.endUpdate();\n    }\n    /**\n     * Updates the model in a transaction.\n     * This is a shortcut to the usage of {@link beginUpdate} and the {@link endUpdate} methods.\n     *\n     * ```javascript\n     * const model = graph.getDataModel();\n     * const parent = graph.getDefaultParent();\n     * const index = model.getChildCount(parent);\n     * model.batchUpdate(() => {\n     *   model.add(parent, v1, index);\n     *   model.add(parent, v2, index+1);\n     * });\n     * ```\n     *\n     * @param fn the update to be performed in the transaction.\n     */\n    batchUpdate(fn) {\n        this.beginUpdate();\n        try {\n            fn();\n        }\n        finally {\n            this.endUpdate();\n        }\n    }\n    /**\n     * Increments the {@link updateLevel} by one. The event notification\n     * is queued until {@link updateLevel} reaches 0 by use of\n     * {@link endUpdate}.\n     *\n     * All changes on {@link GraphDataModel} are transactional,\n     * that is, they are executed in a single undoable change\n     * on the model (without transaction isolation).\n     * Therefore, if you want to combine any\n     * number of changes into a single undoable change,\n     * you should group any two or more API calls that\n     * modify the graph model between {@link beginUpdate}\n     * and {@link endUpdate} calls as shown here:\n     *\n     * ```javascript\n     * const model = graph.getDataModel();\n     * const parent = graph.getDefaultParent();\n     * const index = model.getChildCount(parent);\n     * model.beginUpdate();\n     * try\n     * {\n     *   model.add(parent, v1, index);\n     *   model.add(parent, v2, index+1);\n     * }\n     * finally\n     * {\n     *   model.endUpdate();\n     * }\n     * ```\n     *\n     * Of course there is a shortcut for appending a\n     * sequence of cells into the default parent:\n     *\n     * ```javascript\n     * graph.addCells([v1, v2]).\n     * ```\n     */\n    beginUpdate() {\n        this.updateLevel += 1;\n        this.fireEvent(new EventObject(InternalEvent.BEGIN_UPDATE));\n        if (this.updateLevel === 1) {\n            this.fireEvent(new EventObject(InternalEvent.START_EDIT));\n        }\n    }\n    /**\n     * Decrements the {@link updateLevel} by one and fires an {@link undo}\n     * event if the {@link updateLevel} reaches 0. This function\n     * indirectly fires a {@link change} event by invoking the notify\n     * function on the {@link currentEdit} und then creates a new\n     * {@link currentEdit} using {@link createUndoableEdit}.\n     *\n     * The {@link undo} event is fired only once per edit, whereas\n     * the {@link change} event is fired whenever the notify\n     * function is invoked, that is, on undo and redo of\n     * the edit.\n     */\n    endUpdate() {\n        this.updateLevel -= 1;\n        if (this.updateLevel === 0) {\n            this.fireEvent(new EventObject(InternalEvent.END_EDIT));\n        }\n        if (!this.endingUpdate) {\n            this.endingUpdate = this.updateLevel === 0;\n            this.fireEvent(new EventObject(InternalEvent.END_UPDATE, { edit: this.currentEdit }));\n            try {\n                if (this.endingUpdate && !this.currentEdit.isEmpty()) {\n                    this.fireEvent(new EventObject(InternalEvent.BEFORE_UNDO, { edit: this.currentEdit }));\n                    const tmp = this.currentEdit;\n                    this.currentEdit = this.createUndoableEdit();\n                    tmp.notify();\n                    this.fireEvent(new EventObject(InternalEvent.UNDO, { edit: tmp }));\n                }\n            }\n            finally {\n                this.endingUpdate = false;\n            }\n        }\n    }\n    /**\n     * Creates a new {@link UndoableEdit} that implements the\n     * notify function to fire a {@link change} and {@link notify} event\n     * through the {@link UndoableEdit}'s source.\n     *\n     * @param significant  Optional boolean that specifies if the edit to be created is\n     * significant. Default is true.\n     */\n    createUndoableEdit(significant = true) {\n        const edit = new UndoableEdit(this, significant);\n        edit.notify = () => {\n            // LATER: Remove changes property (deprecated)\n            edit.source.fireEvent(new EventObject(InternalEvent.CHANGE, { edit, changes: edit.changes }));\n            edit.source.fireEvent(new EventObject(InternalEvent.NOTIFY, { edit, changes: edit.changes }));\n        };\n        return edit;\n    }\n    /**\n     * Merges the children of the given cell into the given target cell inside\n     * this model. All cells are cloned unless there is a corresponding cell in\n     * the model with the same id, in which case the source cell is ignored and\n     * all edges are connected to the corresponding cell in this model. Edges\n     * are considered to have no identity and are always cloned unless the\n     * cloneAllEdges flag is set to false, in which case edges with the same\n     * id in the target model are reconnected to reflect the terminals of the\n     * source edges.\n     */\n    mergeChildren(from, to, cloneAllEdges = true) {\n        this.beginUpdate();\n        try {\n            const mapping = {};\n            this.mergeChildrenImpl(from, to, cloneAllEdges, mapping);\n            // Post-processes all edges in the mapping and\n            // reconnects the terminals to the corresponding\n            // cells in the target model\n            for (const key in mapping) {\n                const cell = mapping[key];\n                let terminal = cell.getTerminal(true);\n                if (terminal != null) {\n                    terminal = mapping[CellPath.create(terminal)];\n                    this.setTerminal(cell, terminal, true);\n                }\n                terminal = cell.getTerminal(false);\n                if (terminal != null) {\n                    terminal = mapping[CellPath.create(terminal)];\n                    this.setTerminal(cell, terminal, false);\n                }\n            }\n        }\n        finally {\n            this.endUpdate();\n        }\n    }\n    /**\n     * Clones the children of the source cell into the given target cell in\n     * this model and adds an entry to the mapping that maps from the source\n     * cell to the target cell with the same id or the clone of the source cell\n     * that was inserted into this model.\n     */\n    mergeChildrenImpl(from, to, cloneAllEdges, mapping = {}) {\n        this.beginUpdate();\n        try {\n            const childCount = from.getChildCount();\n            for (let i = 0; i < childCount; i += 1) {\n                const cell = from.getChildAt(i);\n                if (typeof cell.getId === 'function') {\n                    const id = cell.getId();\n                    let target = id != null && (!cell.isEdge() || !cloneAllEdges) ? this.getCell(id) : null;\n                    // Clones and adds the child if no cell exists for the id\n                    if (target == null) {\n                        const clone = cell.clone();\n                        clone.setId(id);\n                        // Sets the terminals from the original cell to the clone\n                        // because the lookup uses strings not cells in JS\n                        clone.setTerminal(cell.getTerminal(true), true);\n                        clone.setTerminal(cell.getTerminal(false), false);\n                        // Do *NOT* use model.add as this will move the edge away\n                        // from the parent in updateEdgeParent if maintainEdgeParent\n                        // is enabled in the target model\n                        target = to.insert(clone);\n                        this.cellAdded(target);\n                    }\n                    // Stores the mapping for later reconnecting edges\n                    mapping[CellPath.create(cell)] = target;\n                    // Recurses\n                    this.mergeChildrenImpl(cell, target, cloneAllEdges, mapping);\n                }\n            }\n        }\n        finally {\n            this.endUpdate();\n        }\n    }\n}\nexport default GraphDataModel;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4755, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4761, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/GraphView.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Point from './geometry/Point';\nimport Rectangle from './geometry/Rectangle';\nimport Dictionary from '../util/Dictionary';\nimport EventSource from './event/EventSource';\nimport EventObject from './event/EventObject';\nimport RectangleShape from './geometry/node/RectangleShape';\nimport { ALIGN, NS_SVG } from '../util/Constants';\nimport Client from '../Client';\nimport InternalEvent from './event/InternalEvent';\nimport { convertPoint, getCurrentStyle, getOffset } from '../util/styleUtils';\nimport { getRotatedPoint, ptSegDistSq, relativeCcw, toRadians } from '../util/mathUtils';\nimport { GlobalConfig } from '../util/config';\nimport CellState from './cell/CellState';\nimport UndoableEdit from './undoable_changes/UndoableEdit';\nimport ImageShape from './geometry/node/ImageShape';\nimport InternalMouseEvent from './event/InternalMouseEvent';\nimport CurrentRootChange from './undoable_changes/CurrentRootChange';\nimport { getClientX, getClientY, getSource, isConsumed } from '../util/EventUtils';\nimport { clone } from '../util/cloneUtils';\nimport StyleRegistry from './style/StyleRegistry';\n/**\n * @class GraphView\n * @extends {EventSource}\n *\n * Extends {@link EventSource} to implement a view for a graph. This class is in\n * charge of computing the absolute coordinates for the relative child\n * geometries, the points for perimeters and edge styles and keeping them\n * cached in {@link CellState}s for faster retrieval. The states are updated\n * whenever the model or the view state (translate, scale) changes. The scale\n * and translate are honoured in the bounds.\n *\n * #### Event: mxEvent.UNDO\n *\n * Fires after the root was changed in {@link setCurrentRoot}. The `edit`\n * property contains the {@link UndoableEdit} which contains the\n * {@link CurrentRootChange}.\n *\n * #### Event: mxEvent.SCALE_AND_TRANSLATE\n *\n * Fires after the scale and translate have been changed in {@link scaleAndTranslate}.\n * The `scale`, `previousScale`, `translate`\n * and `previousTranslate` properties contain the new and previous\n * scale and translate, respectively.\n *\n * #### Event: mxEvent.SCALE\n *\n * Fires after the scale was changed in {@link setScale}. The `scale` and\n * `previousScale` properties contain the new and previous scale.\n *\n * #### Event: mxEvent.TRANSLATE\n *\n * Fires after the translate was changed in {@link setTranslate}. The\n * `translate` and `previousTranslate` properties contain\n * the new and previous value for translate.\n *\n * #### Event: mxEvent.DOWN and mxEvent.UP\n *\n * Fire if the current root is changed by executing an {@link CurrentRootChange}.\n * The event name depends on the location of the root in the cell hierarchy\n * with respect to the current root. The `root` and\n * `previous` properties contain the new and previous root,\n * respectively.\n */\nexport class GraphView extends EventSource {\n    constructor(graph) {\n        super();\n        // TODO: Document me!\n        this.backgroundImage = null;\n        this.backgroundPageShape = null;\n        this.EMPTY_POINT = new Point();\n        /**\n         * Specifies the resource key for the status message after a long operation.\n         * If the resource for this key does not exist then the value is used as\n         * the status message. Default is 'done'.\n         */\n        this.doneResource = Client.language !== 'none' ? 'done' : '';\n        /**\n         * Specifies the resource key for the status message while the document is\n         * being updated. If the resource for this key does not exist then the\n         * value is used as the status message. Default is 'updatingDocument'.\n         */\n        this.updatingDocumentResource = Client.language !== 'none' ? 'updatingDocument' : '';\n        /**\n         * Specifies if string values in cell styles should be evaluated using\n         * {@link eval}. This will only be used if the string values can't be mapped\n         * to objects using {@link StyleRegistry}. Default is false. NOTE: Enabling this\n         * switch carries a possible security risk.\n         */\n        this.allowEval = false;\n        /**\n         * Specifies if a gesture should be captured when it goes outside of the\n         * graph container. Default is true.\n         */\n        this.captureDocumentGesture = true;\n        /**\n         * Specifies if shapes should be created, updated and destroyed using the\n         * methods of {@link cellRenderer} in {@link graph}. Default is true.\n         */\n        this.rendering = true;\n        /**\n         * {@link Cell} that acts as the root of the displayed cell hierarchy.\n         */\n        this.currentRoot = null;\n        this.graphBounds = new Rectangle();\n        this.scale = 1;\n        /**\n         * {@link Point} that specifies the current translation. Default is a new\n         * empty {@link Point}.\n         */\n        this.translate = new Point();\n        this.states = new Dictionary();\n        /**\n         * Specifies if the style should be updated in each validation step. If this\n         * is false then the style is only updated if the state is created or if the\n         * style of the cell was changed. Default is false.\n         */\n        this.updateStyle = false;\n        /**\n         * During validation, this contains the last DOM node that was processed.\n         */\n        this.lastNode = null;\n        /**\n         * During validation, this contains the last HTML DOM node that was processed.\n         */\n        this.lastHtmlNode = null;\n        /**\n         * During validation, this contains the last edge's DOM node that was processed.\n         */\n        this.lastForegroundNode = null;\n        /**\n         * During validation, this contains the last edge HTML DOM node that was processed.\n         */\n        this.lastForegroundHtmlNode = null;\n        this.endHandler = null;\n        this.moveHandler = null;\n        this.graph = graph;\n    }\n    /**\n     * Returns {@link graphBounds}.\n     */\n    getGraphBounds() {\n        return this.graphBounds;\n    }\n    /**\n     * Sets {@link graphBounds}.\n     */\n    setGraphBounds(value) {\n        this.graphBounds = value;\n    }\n    /**\n     * Returns the {@link scale}.\n     */\n    getScale() {\n        return this.scale;\n    }\n    /**\n     * Sets the scale and fires a {@link scale} event before calling {@link revalidate} followed\n     * by {@link Graph.sizeDidChange}.\n     *\n     * @param value Decimal value that specifies the new scale (1 is 100%).\n     */\n    setScale(value) {\n        const previousScale = this.scale;\n        if (previousScale !== value) {\n            this.scale = value;\n            if (this.isEventsEnabled()) {\n                this.viewStateChanged();\n            }\n        }\n        this.fireEvent(new EventObject(InternalEvent.SCALE, { scale: value, previousScale }));\n    }\n    /**\n     * Returns the {@link translate}.\n     */\n    getTranslate() {\n        return this.translate;\n    }\n    isRendering() {\n        return this.rendering;\n    }\n    setRendering(value) {\n        this.rendering = value;\n    }\n    /**\n     * Sets the translation and fires a {@link translate} event before calling\n     * {@link revalidate} followed by {@link Graph.sizeDidChange}. The translation is the\n     * negative of the origin.\n     *\n     * @param dx X-coordinate of the translation.\n     * @param dy Y-coordinate of the translation.\n     */\n    setTranslate(dx, dy) {\n        const previousTranslate = new Point(this.translate.x, this.translate.y);\n        if (this.translate.x !== dx || this.translate.y !== dy) {\n            this.translate.x = dx;\n            this.translate.y = dy;\n            if (this.isEventsEnabled()) {\n                this.viewStateChanged();\n            }\n        }\n        this.fireEvent(new EventObject(InternalEvent.TRANSLATE, {\n            translate: this.translate,\n            previousTranslate: previousTranslate,\n        }));\n    }\n    isAllowEval() {\n        return this.allowEval;\n    }\n    setAllowEval(value) {\n        this.allowEval = value;\n    }\n    /**\n     * Returns {@link states}.\n     */\n    getStates() {\n        return this.states;\n    }\n    /**\n     * Sets {@link states}.\n     */\n    setStates(value) {\n        this.states = value;\n    }\n    /**\n     * Returns the DOM node that contains the background-, draw- and\n     * overlay- and decoratorpanes.\n     */\n    getCanvas() {\n        return this.canvas;\n    }\n    /**\n     * Returns the DOM node that represents the background layer.\n     */\n    getBackgroundPane() {\n        return this.backgroundPane;\n    }\n    /**\n     * Returns the DOM node that represents the main drawing layer.\n     */\n    getDrawPane() {\n        return this.drawPane;\n    }\n    /**\n     * Returns the DOM node that represents the layer above the drawing layer.\n     */\n    getOverlayPane() {\n        return this.overlayPane;\n    }\n    /**\n     * Returns the DOM node that represents the topmost drawing layer.\n     */\n    getDecoratorPane() {\n        return this.decoratorPane;\n    }\n    /**\n     * Returns the union of all {@link mxCellStates} for the given array of {@link Cell}.\n     *\n     * @param cells Array of {@link Cell} whose bounds should be returned.\n     */\n    getBounds(cells) {\n        let result = null;\n        if (cells.length > 0) {\n            for (let i = 0; i < cells.length; i += 1) {\n                if (cells[i].isVertex() || cells[i].isEdge()) {\n                    const state = this.getState(cells[i]);\n                    if (state) {\n                        if (!result) {\n                            result = Rectangle.fromRectangle(state);\n                        }\n                        else {\n                            result.add(state);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Sets and returns the current root and fires an {@link undo} event before\n     * calling {@link graph.sizeDidChange}.\n     *\n     * @param root {@link mxCell} that specifies the root of the displayed cell hierarchy.\n     */\n    setCurrentRoot(root) {\n        if (this.currentRoot !== root) {\n            const change = new CurrentRootChange(this, root);\n            change.execute();\n            const edit = new UndoableEdit(this, true);\n            edit.add(change);\n            this.fireEvent(new EventObject(InternalEvent.UNDO, { edit }));\n            this.graph.sizeDidChange();\n            this.currentRoot = root;\n        }\n        return root;\n    }\n    /**\n     * Sets the scale and translation and fires a {@link scale} and {@link translate} event\n     * before calling {@link revalidate} followed by {@link graph.sizeDidChange}.\n     *\n     * @param scale Decimal value that specifies the new scale (1 is 100%).\n     * @param dx X-coordinate of the translation.\n     * @param dy Y-coordinate of the translation.\n     */\n    scaleAndTranslate(scale, dx, dy) {\n        const previousScale = this.scale;\n        const previousTranslate = new Point(this.translate.x, this.translate.y);\n        if (this.scale !== scale || this.translate.x !== dx || this.translate.y !== dy) {\n            this.scale = scale;\n            this.translate.x = dx;\n            this.translate.y = dy;\n            if (this.isEventsEnabled()) {\n                this.viewStateChanged();\n            }\n        }\n        this.fireEvent(new EventObject(InternalEvent.SCALE_AND_TRANSLATE, {\n            scale,\n            previousScale,\n            translate: this.translate,\n            previousTranslate: previousTranslate,\n        }));\n    }\n    /**\n     * Invoked after {@link scale} and/or {@link translate} has changed.\n     */\n    viewStateChanged() {\n        this.revalidate();\n        this.graph.sizeDidChange();\n    }\n    /**\n     * Clears the view if {@link currentRoot} is not null and revalidates.\n     */\n    refresh() {\n        if (this.currentRoot) {\n            this.clear();\n        }\n        this.revalidate();\n    }\n    /**\n     * Revalidates the complete view with all cell states.\n     */\n    revalidate() {\n        this.invalidate();\n        this.validate();\n    }\n    /**\n     * Removes the state of the given cell and all descendants if the given\n     * cell is not the current root.\n     *\n     * @param cell Optional {@link Cell} for which the state should be removed. Default\n     * is the root of the model.\n     * @param force Boolean indicating if the current root should be ignored for\n     * recursion.\n     */\n    clear(cell, force = false, recurse = true) {\n        if (!cell) {\n            cell = this.graph.getDataModel().getRoot();\n        }\n        if (cell) {\n            this.removeState(cell);\n            if (recurse && (force || cell !== this.currentRoot)) {\n                const childCount = cell.getChildCount();\n                for (let i = 0; i < childCount; i += 1) {\n                    this.clear(cell.getChildAt(i), force);\n                }\n            }\n            else {\n                this.invalidate(cell);\n            }\n        }\n    }\n    /**\n     * Invalidates the state of the given cell, all its descendants and\n     * connected edges.\n     *\n     * @param cell Optional {@link Cell} to be invalidated. Default is the root of the\n     * model.\n     */\n    invalidate(cell = null, recurse = true, includeEdges = true) {\n        const model = this.graph.getDataModel();\n        cell = cell ?? model.getRoot();\n        if (cell) {\n            const state = this.getState(cell);\n            if (state) {\n                state.invalid = true;\n            }\n            // Avoids infinite loops for invalid graphs\n            if (!cell.invalidating) {\n                cell.invalidating = true;\n                // Recursively invalidates all descendants\n                if (recurse) {\n                    const childCount = cell.getChildCount();\n                    for (let i = 0; i < childCount; i += 1) {\n                        const child = cell.getChildAt(i);\n                        this.invalidate(child, recurse, includeEdges);\n                    }\n                }\n                // Propagates invalidation to all connected edges\n                if (includeEdges) {\n                    const edgeCount = cell.getEdgeCount();\n                    for (let i = 0; i < edgeCount; i += 1) {\n                        this.invalidate(cell.getEdgeAt(i), recurse, includeEdges);\n                    }\n                }\n                cell.invalidating = false;\n            }\n        }\n    }\n    /**\n     * Calls {@link validateCell} and {@link validateCellState} and updates the {@link graphBounds}\n     * using {@link getBoundingBox}. Finally the background is validated using\n     * {@link validateBackground}.\n     *\n     * @param cell Optional {@link Cell} to be used as the root of the validation.\n     * Default is {@link currentRoot} or the root of the model.\n     */\n    validate(cell = null) {\n        const t0 = GlobalConfig.logger.enter('GraphView.validate');\n        this.resetValidationState();\n        const c = cell || (this.currentRoot ?? this.graph.getDataModel().getRoot());\n        if (c) {\n            const graphBounds = this.getBoundingBox(this.validateCellState(c ? this.validateCell(c) : null));\n            this.setGraphBounds(graphBounds ?? this.getEmptyBounds());\n            this.validateBackground();\n            this.resetValidationState();\n        }\n        GlobalConfig.logger.leave('GraphView.validate', t0);\n    }\n    /**\n     * Returns the bounds for an empty graph. This returns a rectangle at\n     * {@link translate} with the size of 0 x 0.\n     */\n    getEmptyBounds() {\n        return new Rectangle(this.translate.x * this.scale, this.translate.y * this.scale);\n    }\n    /**\n     * Returns the bounding box of the shape and the label for the given\n     * {@link CellState} and its children if recurse is true.\n     *\n     * @param state {@link CellState} whose bounding box should be returned.\n     * @param recurse Optional boolean indicating if the children should be included.\n     * Default is true.\n     */\n    getBoundingBox(state = null, recurse = true) {\n        let bbox = null;\n        if (state) {\n            if (state.shape && state.shape.boundingBox) {\n                bbox = state.shape.boundingBox.clone();\n            }\n            // Adds label bounding box to graph bounds\n            if (state.text && state.text.boundingBox) {\n                if (bbox) {\n                    bbox.add(state.text.boundingBox);\n                }\n                else {\n                    bbox = state.text.boundingBox.clone();\n                }\n            }\n            if (recurse) {\n                const childCount = state.cell.getChildCount();\n                for (let i = 0; i < childCount; i += 1) {\n                    const bounds = this.getBoundingBox(this.getState(state.cell.getChildAt(i)));\n                    if (bounds) {\n                        if (!bbox) {\n                            bbox = bounds;\n                        }\n                        else {\n                            bbox.add(bounds);\n                        }\n                    }\n                }\n            }\n        }\n        return bbox;\n    }\n    /**\n     * Creates and returns the shape used as the background page.\n     *\n     * @param bounds {@link mxRectangle} that represents the bounds of the shape.\n     */\n    createBackgroundPageShape(bounds) {\n        return new RectangleShape(bounds, 'white', 'black');\n    }\n    /**\n     * Calls {@link validateBackgroundImage} and {@link validateBackgroundPage}.\n     */\n    validateBackground() {\n        this.validateBackgroundImage();\n        this.validateBackgroundPage();\n    }\n    /**\n     * Validates the background image.\n     */\n    validateBackgroundImage() {\n        const bg = this.graph.getBackgroundImage();\n        if (bg) {\n            if (!this.backgroundImage || this.backgroundImage.imageSrc !== bg.src) {\n                if (this.backgroundImage) {\n                    this.backgroundImage.destroy();\n                }\n                const bounds = new Rectangle(0, 0, 1, 1);\n                this.backgroundImage = new ImageShape(bounds, bg.src);\n                this.backgroundImage.dialect = this.graph.dialect;\n                this.backgroundImage.init(this.backgroundPane);\n                this.backgroundImage.redraw();\n            }\n            this.redrawBackgroundImage(this.backgroundImage, bg);\n        }\n        else if (this.backgroundImage) {\n            this.backgroundImage.destroy();\n            this.backgroundImage = null;\n        }\n    }\n    /**\n     * Validates the background page.\n     */\n    validateBackgroundPage() {\n        const graph = this.graph;\n        if (graph.pageVisible) {\n            const bounds = this.getBackgroundPageBounds();\n            if (this.backgroundPageShape == null) {\n                this.backgroundPageShape = this.createBackgroundPageShape(bounds);\n                this.backgroundPageShape.scale = this.scale;\n                this.backgroundPageShape.isShadow = true;\n                this.backgroundPageShape.dialect = this.graph.dialect;\n                this.backgroundPageShape.init(this.backgroundPane);\n                this.backgroundPageShape.redraw();\n                if (this.backgroundPageShape.node) {\n                    // Adds listener for double click handling on background\n                    if (graph.isNativeDblClickEnabled()) {\n                        InternalEvent.addListener(this.backgroundPageShape.node, 'dblclick', ((evt) => {\n                            graph.dblClick(evt);\n                        }));\n                    }\n                    // Adds basic listeners for graph event dispatching outside of the\n                    // container and finishing the handling of a single gesture\n                    InternalEvent.addGestureListeners(this.backgroundPageShape.node, (evt) => {\n                        graph.fireMouseEvent(InternalEvent.MOUSE_DOWN, new InternalMouseEvent(evt));\n                    }, (evt) => {\n                        const tooltipHandler = graph.getPlugin('TooltipHandler');\n                        // Hides the tooltip if mouse is outside container\n                        if (tooltipHandler && tooltipHandler.isHideOnHover()) {\n                            tooltipHandler.hide();\n                        }\n                        if (graph.isMouseDown && !isConsumed(evt)) {\n                            graph.fireMouseEvent(InternalEvent.MOUSE_MOVE, new InternalMouseEvent(evt));\n                        }\n                    }, (evt) => {\n                        graph.fireMouseEvent(InternalEvent.MOUSE_UP, new InternalMouseEvent(evt));\n                    });\n                }\n            }\n            else {\n                this.backgroundPageShape.scale = this.scale;\n                this.backgroundPageShape.bounds = bounds;\n                this.backgroundPageShape.redraw();\n            }\n        }\n        else if (this.backgroundPageShape) {\n            this.backgroundPageShape.destroy();\n            this.backgroundPageShape = null;\n        }\n    }\n    /**\n     * Returns the bounds for the background page.\n     */\n    getBackgroundPageBounds() {\n        const fmt = this.graph.pageFormat;\n        const ps = this.scale * this.graph.pageScale;\n        return new Rectangle(this.scale * this.translate.x, this.scale * this.translate.y, fmt.width * ps, fmt.height * ps);\n    }\n    /**\n     * Updates the bounds and redraws the background image.\n     *\n     * Example:\n     *\n     * If the background image should not be scaled, this can be replaced with\n     * the following.\n     *\n     * @example\n     * ```javascript\n     * redrawBackground(backgroundImage, bg)\n     * {\n     *   backgroundImage.bounds.x = this.translate.x;\n     *   backgroundImage.bounds.y = this.translate.y;\n     *   backgroundImage.bounds.width = bg.width;\n     *   backgroundImage.bounds.height = bg.height;\n     *\n     *   backgroundImage.redraw();\n     * };\n     * ```\n     *\n     * @param backgroundImage {@link mxImageShape} that represents the background image.\n     * @param bg {@link mxImage} that specifies the image and its dimensions.\n     */\n    redrawBackgroundImage(backgroundImage, bg) {\n        backgroundImage.scale = this.scale;\n        if (backgroundImage.bounds) {\n            const bounds = backgroundImage.bounds;\n            bounds.x = this.scale * this.translate.x;\n            bounds.y = this.scale * this.translate.y;\n            bounds.width = this.scale * bg.width;\n            bounds.height = this.scale * bg.height;\n        }\n        backgroundImage.redraw();\n    }\n    /**\n     * Recursively creates the cell state for the given cell if visible is true and\n     * the given cell is visible. If the cell is not visible but the state exists\n     * then it is removed using {@link removeState}.\n     *\n     * @param cell {@link mxCell} whose {@link CellState} should be created.\n     * @param visible Optional boolean indicating if the cell should be visible. Default\n     * is true.\n     */\n    validateCell(cell, visible = true) {\n        visible = visible && cell.isVisible();\n        const state = this.getState(cell, visible);\n        if (state && !visible) {\n            this.removeState(cell);\n        }\n        else {\n            const childCount = cell.getChildCount();\n            for (let i = 0; i < childCount; i += 1) {\n                this.validateCell(cell.getChildAt(i), visible && (!cell.isCollapsed() || cell === this.currentRoot));\n            }\n        }\n        return cell;\n    }\n    /**\n     * Validates and repaints the {@link CellState} for the given {@link Cell}.\n     *\n     * @param cell {@link mxCell} whose {@link CellState} should be validated.\n     * @param recurse Optional boolean indicating if the children of the cell should be\n     * validated. Default is true.\n     */\n    validateCellState(cell, recurse = true) {\n        let state = null;\n        if (cell) {\n            state = this.getState(cell);\n            if (state) {\n                if (state.invalid) {\n                    state.invalid = false;\n                    if (!state.style || state.invalidStyle) {\n                        state.style = this.graph.getCellStyle(state.cell);\n                        state.invalidStyle = false;\n                    }\n                    if (cell !== this.currentRoot) {\n                        this.validateCellState(cell.getParent(), false);\n                    }\n                    state.setVisibleTerminalState(this.validateCellState(this.getVisibleTerminal(cell, true), false), true);\n                    state.setVisibleTerminalState(this.validateCellState(this.getVisibleTerminal(cell, false), false), false);\n                    this.updateCellState(state);\n                    // Repaint happens immediately after the cell is validated\n                    if (cell !== this.currentRoot && !state.invalid) {\n                        this.graph.cellRenderer.redraw(state, false, this.isRendering());\n                        // Handles changes to invertex paintbounds after update of rendering shape\n                        state.updateCachedBounds();\n                    }\n                }\n                if (recurse && !state.invalid) {\n                    // Updates order in DOM if recursively traversing\n                    if (state.shape) {\n                        this.stateValidated(state);\n                    }\n                    const childCount = cell.getChildCount();\n                    for (let i = 0; i < childCount; i += 1) {\n                        this.validateCellState(cell.getChildAt(i));\n                    }\n                }\n            }\n        }\n        return state;\n    }\n    /**\n     * Updates the given {@link CellState}.\n     *\n     * @param state {@link CellState} to be updated.\n     */\n    updateCellState(state) {\n        const absoluteOffset = state.absoluteOffset;\n        const origin = state.origin;\n        absoluteOffset.x = 0;\n        absoluteOffset.y = 0;\n        origin.x = 0;\n        origin.y = 0;\n        state.length = 0;\n        if (state.cell !== this.currentRoot) {\n            const parent = state.cell.getParent();\n            const pState = parent ? this.getState(parent) : null;\n            if (pState && pState.cell !== this.currentRoot) {\n                origin.x += pState.origin.x;\n                origin.y += pState.origin.y;\n            }\n            let offset = this.graph.getChildOffsetForCell(state.cell);\n            if (offset) {\n                origin.x += offset.x;\n                origin.y += offset.y;\n            }\n            const geo = state.cell.getGeometry();\n            if (geo) {\n                if (!state.cell.isEdge()) {\n                    offset = geo.offset ? geo.offset : this.EMPTY_POINT;\n                    if (geo.relative && pState) {\n                        if (pState.cell.isEdge()) {\n                            const point = this.getPoint(pState, geo);\n                            if (point) {\n                                origin.x += point.x / this.scale - pState.origin.x - this.translate.x;\n                                origin.y += point.y / this.scale - pState.origin.y - this.translate.y;\n                            }\n                        }\n                        else {\n                            origin.x += geo.x * pState.unscaledWidth + offset.x;\n                            origin.y += geo.y * pState.unscaledHeight + offset.y;\n                        }\n                    }\n                    else {\n                        absoluteOffset.x = this.scale * offset.x;\n                        absoluteOffset.y = this.scale * offset.y;\n                        origin.x += geo.x;\n                        origin.y += geo.y;\n                    }\n                }\n                state.x = this.scale * (this.translate.x + origin.x);\n                state.y = this.scale * (this.translate.y + origin.y);\n                state.width = this.scale * geo.width;\n                state.unscaledWidth = geo.width;\n                state.height = this.scale * geo.height;\n                state.unscaledHeight = geo.height;\n                if (state.cell.isVertex()) {\n                    this.updateVertexState(state, geo);\n                }\n                if (state.cell.isEdge()) {\n                    this.updateEdgeState(state, geo);\n                }\n            }\n        }\n        state.updateCachedBounds();\n    }\n    /**\n     * Validates the given cell state.\n     */\n    updateVertexState(state, geo) {\n        const parent = state.cell.getParent();\n        const pState = parent ? this.getState(parent) : null;\n        if (geo.relative && pState && !pState.cell.isEdge()) {\n            const alpha = toRadians(pState.style.rotation ?? 0);\n            if (alpha !== 0) {\n                const cos = Math.cos(alpha);\n                const sin = Math.sin(alpha);\n                const ct = new Point(state.getCenterX(), state.getCenterY());\n                const cx = new Point(pState.getCenterX(), pState.getCenterY());\n                const pt = getRotatedPoint(ct, cos, sin, cx);\n                state.x = pt.x - state.width / 2;\n                state.y = pt.y - state.height / 2;\n            }\n        }\n        this.updateVertexLabelOffset(state);\n    }\n    /**\n     * Validates the given cell state.\n     */\n    updateEdgeState(state, geo) {\n        const source = state.getVisibleTerminalState(true);\n        const target = state.getVisibleTerminalState(false);\n        // This will remove edges with no terminals and no terminal points\n        // as such edges are invalid and produce NPEs in the edge styles.\n        // Also removes connected edges that have no visible terminals.\n        if ((state.cell.getTerminal(true) && !source) ||\n            (!source && !geo.getTerminalPoint(true)) ||\n            (state.cell.getTerminal(false) && !target) ||\n            (!target && !geo.getTerminalPoint(false))) {\n            this.clear(state.cell, true);\n        }\n        else {\n            this.updateFixedTerminalPoints(state, source, target);\n            this.updatePoints(state, geo.points, source, target);\n            this.updateFloatingTerminalPoints(state, source, target);\n            const pts = state.absolutePoints;\n            if (state.cell !== this.currentRoot &&\n                (pts == null || pts.length < 2 || pts[0] == null || pts[pts.length - 1] == null)) {\n                // This will remove edges with invalid points from the list of states in the view.\n                // Happens if the one of the terminals and the corresponding terminal point is null.\n                this.clear(state.cell, true);\n            }\n            else {\n                this.updateEdgeBounds(state);\n                this.updateEdgeLabelOffset(state);\n            }\n        }\n    }\n    /**\n     * Updates the absoluteOffset of the given vertex cell state. This takes\n     * into account the label position styles.\n     *\n     * @param state {@link CellState} whose absolute offset should be updated.\n     */\n    updateVertexLabelOffset(state) {\n        const h = state.style.labelPosition ?? ALIGN.CENTER;\n        if (h === ALIGN.LEFT) {\n            let lw = state.style.labelWidth ?? null;\n            if (lw != null) {\n                lw *= this.scale;\n            }\n            else {\n                lw = state.width;\n            }\n            // @ts-ignore\n            state.absoluteOffset.x -= lw;\n        }\n        else if (h === ALIGN.RIGHT) {\n            // @ts-ignore\n            state.absoluteOffset.x += state.width;\n        }\n        else if (h === ALIGN.CENTER) {\n            const lw = state.style.labelWidth ?? null;\n            if (lw != null) {\n                // Aligns text block with given width inside the vertex width\n                const align = state.style.align ?? ALIGN.CENTER;\n                let dx = 0;\n                if (align === ALIGN.CENTER) {\n                    dx = 0.5;\n                }\n                else if (align === ALIGN.RIGHT) {\n                    dx = 1;\n                }\n                if (dx !== 0) {\n                    // @ts-ignore\n                    state.absoluteOffset.x -= (lw * this.scale - state.width) * dx;\n                }\n            }\n        }\n        const v = state.style.verticalLabelPosition ?? ALIGN.MIDDLE;\n        if (v === ALIGN.TOP) {\n            // @ts-ignore\n            state.absoluteOffset.y -= state.height;\n        }\n        else if (v === ALIGN.BOTTOM) {\n            // @ts-ignore\n            state.absoluteOffset.y += state.height;\n        }\n    }\n    /**\n     * Resets the current validation state.\n     */\n    resetValidationState() {\n        this.lastNode = null;\n        this.lastHtmlNode = null;\n        this.lastForegroundNode = null;\n        this.lastForegroundHtmlNode = null;\n    }\n    /**\n     * Invoked when a state has been processed in {@link validatePoints}. This is used\n     * to update the order of the DOM nodes of the shape.\n     *\n     * @param state {@link CellState} that represents the cell state.\n     */\n    stateValidated(state) {\n        const graph = this.graph;\n        const fg = (state.cell.isEdge() && graph.keepEdgesInForeground) ||\n            (state.cell.isVertex() && graph.keepEdgesInBackground);\n        const htmlNode = fg\n            ? this.lastForegroundHtmlNode || this.lastHtmlNode\n            : this.lastHtmlNode;\n        const node = fg ? this.lastForegroundNode || this.lastNode : this.lastNode;\n        const result = graph.cellRenderer.insertStateAfter(state, node, htmlNode);\n        if (fg) {\n            this.lastForegroundHtmlNode = result[1];\n            this.lastForegroundNode = result[0];\n        }\n        else {\n            this.lastHtmlNode = result[1];\n            this.lastNode = result[0];\n        }\n    }\n    /**\n     * Sets the initial absolute terminal points in the given state before the edge\n     * style is computed.\n     *\n     * @param edge {@link CellState} whose initial terminal points should be updated.\n     * @param source {@link CellState} which represents the source terminal.\n     * @param target {@link CellState} which represents the target terminal.\n     */\n    updateFixedTerminalPoints(edge, source, target) {\n        this.updateFixedTerminalPoint(edge, source, true, this.graph.getConnectionConstraint(edge, source, true));\n        this.updateFixedTerminalPoint(edge, target, false, this.graph.getConnectionConstraint(edge, target, false));\n    }\n    /**\n     * Sets the fixed source or target terminal point on the given edge.\n     *\n     * @param edge <CellState> whose terminal point should be updated.\n     * @param terminal <CellState> which represents the actual terminal.\n     * @param source Boolean that specifies if the terminal is the source.\n     * @param constraint {@link ConnectionConstraint} that specifies the connection.\n     */\n    updateFixedTerminalPoint(edge, terminal, source, constraint) {\n        edge.setAbsoluteTerminalPoint(this.getFixedTerminalPoint(edge, terminal, source, constraint), source);\n    }\n    /**\n     * Returns the fixed source or target terminal point for the given edge.\n     *\n     * @param edge <CellState> whose terminal point should be returned.\n     * @param terminal <CellState> which represents the actual terminal.\n     * @param source Boolean that specifies if the terminal is the source.\n     * @param constraint {@link ConnectionConstraint} that specifies the connection.\n     */\n    getFixedTerminalPoint(edge, terminal, source, constraint) {\n        let pt = null;\n        if (constraint && terminal) {\n            pt = this.graph.getConnectionPoint(terminal, constraint, false); // FIXME Rounding introduced bugs when calculating label positions -> , this.graph.isOrthogonal(edge));\n        }\n        if (!pt && !terminal) {\n            const s = this.scale;\n            const tr = this.translate;\n            const orig = edge.origin;\n            const geo = edge.cell.getGeometry();\n            pt = geo.getTerminalPoint(source);\n            if (pt) {\n                pt = new Point(s * (tr.x + pt.x + orig.x), s * (tr.y + pt.y + orig.y));\n            }\n        }\n        return pt;\n    }\n    /**\n     * Updates the bounds of the given cell state to reflect the bounds of the stencil\n     * if it has a fixed aspect and returns the previous bounds as an {@link Rectangle} if\n     * the bounds have been modified or null otherwise.\n     *\n     * @param edge {@link CellState} whose bounds should be updated.\n     */\n    updateBoundsFromStencil(state) {\n        let previous = null;\n        if (state &&\n            state.shape &&\n            state.shape.stencil &&\n            state.shape.stencil.aspect === 'fixed') {\n            previous = Rectangle.fromRectangle(state);\n            const asp = state.shape.stencil.computeAspect(null, // this argument is not used\n            state.x, state.y, state.width, state.height);\n            state.setRect(asp.x, asp.y, state.shape.stencil.w0 * asp.width, state.shape.stencil.h0 * asp.height);\n        }\n        return previous;\n    }\n    /**\n     * Updates the absolute points in the given state using the specified array\n     * of {@link Point} as the relative points.\n     *\n     * @param edge {@link CellState} whose absolute points should be updated.\n     * @param points Array of {@link Point} that constitute the relative points.\n     * @param source {@link CellState} that represents the source terminal.\n     * @param target {@link CellState} that represents the target terminal.\n     */\n    updatePoints(edge, points, source, target) {\n        const pts = [];\n        pts.push(edge.absolutePoints[0]);\n        const edgeStyle = this.getEdgeStyle(edge, points, source, target);\n        if (edgeStyle && source) {\n            // target can be null\n            const src = this.getTerminalPort(edge, source, true);\n            const trg = target ? this.getTerminalPort(edge, target, false) : null;\n            // Uses the stencil bounds for routing and restores after routing\n            const srcBounds = this.updateBoundsFromStencil(src);\n            const trgBounds = this.updateBoundsFromStencil(trg);\n            edgeStyle(edge, src, trg, points, pts);\n            // Restores previous bounds\n            if (src && srcBounds) {\n                src.setRect(srcBounds.x, srcBounds.y, srcBounds.width, srcBounds.height);\n            }\n            if (trg && trgBounds) {\n                trg.setRect(trgBounds.x, trgBounds.y, trgBounds.width, trgBounds.height);\n            }\n        }\n        else if (points) {\n            for (let i = 0; i < points.length; i += 1) {\n                if (points[i]) {\n                    const pt = clone(points[i]);\n                    pts.push(this.transformControlPoint(edge, pt));\n                }\n            }\n        }\n        const tmp = edge.absolutePoints;\n        pts.push(tmp[tmp.length - 1]);\n        edge.absolutePoints = pts;\n    }\n    /**\n     * Transforms the given control point to an absolute point.\n     */\n    transformControlPoint(state, pt, ignoreScale = false) {\n        if (state && pt) {\n            const orig = state.origin;\n            const scale = ignoreScale ? 1 : this.scale;\n            return new Point(scale * (pt.x + this.translate.x + orig.x), scale * (pt.y + this.translate.y + orig.y));\n        }\n        return null;\n    }\n    /**\n     * Returns true if the given edge should be routed with {@link graph.defaultLoopStyle}\n     * or the {@link CellStateStyle.STYLE_LOOP} defined for the given edge.\n     * This implementation returns `true` if the given edge is a loop and does not\n     */\n    isLoopStyleEnabled(edge, points = [], source = null, target = null) {\n        const sc = this.graph.getConnectionConstraint(edge, source, true);\n        const tc = this.graph.getConnectionConstraint(edge, target, false);\n        if ((points == null || points.length < 2) &&\n            !((edge.style.orthogonalLoop ?? false) ||\n                ((sc == null || sc.point == null) && (tc == null || tc.point == null)))) {\n            return source != null && source === target;\n        }\n        return false;\n    }\n    /**\n     * Returns the edge style function to be used to render the given edge state.\n     */\n    getEdgeStyle(edge, points = [], source = null, target = null) {\n        let edgeStyle = this.isLoopStyleEnabled(edge, points, source, target)\n            ? edge.style.loopStyle ?? this.graph.defaultLoopStyle\n            : !(edge.style.noEdgeStyle ?? false)\n                ? edge.style.edgeStyle\n                : null;\n        // Converts string values to objects\n        if (typeof edgeStyle === 'string') {\n            let tmp = StyleRegistry.getValue(edgeStyle);\n            if (!tmp && this.isAllowEval()) {\n                tmp = eval(edgeStyle);\n            }\n            edgeStyle = tmp;\n        }\n        if (typeof edgeStyle === 'function') {\n            return edgeStyle;\n        }\n        return null;\n    }\n    /**\n     * Updates the terminal points in the given state after the edge style was\n     * computed for the edge.\n     *\n     * @param state {@link CellState} whose terminal points should be updated.\n     * @param source {@link CellState} that represents the source terminal.\n     * @param target {@link CellState} that represents the target terminal.\n     */\n    updateFloatingTerminalPoints(state, source, target) {\n        const pts = state.absolutePoints;\n        const p0 = pts[0];\n        const pe = pts[pts.length - 1];\n        if (!pe && target) {\n            this.updateFloatingTerminalPoint(state, target, source, false);\n        }\n        if (!p0 && source) {\n            this.updateFloatingTerminalPoint(state, source, target, true);\n        }\n    }\n    /**\n     * Updates the absolute terminal point in the given state for the given\n     * start and end state, where start is the source if source is true.\n     *\n     * @param edge {@link CellState} whose terminal point should be updated.\n     * @param start {@link CellState} for the terminal on \"this\" side of the edge.\n     * @param end {@link CellState} for the terminal on the other side of the edge.\n     * @param source Boolean indicating if start is the source terminal state.\n     */\n    updateFloatingTerminalPoint(edge, start, end, source) {\n        edge.setAbsoluteTerminalPoint(this.getFloatingTerminalPoint(edge, start, end, source), source);\n    }\n    /**\n     * Returns the floating terminal point for the given edge, start and end\n     * state, where start is the source if source is true.\n     *\n     * @param edge {@link CellState} whose terminal point should be returned.\n     * @param start {@link CellState} for the terminal on \"this\" side of the edge.\n     * @param end {@link CellState} for the terminal on the other side of the edge.\n     * @param source Boolean indicating if start is the source terminal state.\n     */\n    getFloatingTerminalPoint(edge, start, end, source) {\n        start = this.getTerminalPort(edge, start, source);\n        let next = this.getNextPoint(edge, end, source);\n        const orth = this.graph.isOrthogonal(edge);\n        const alpha = toRadians(start.style.rotation ?? 0);\n        const center = new Point(start.getCenterX(), start.getCenterY());\n        if (alpha !== 0) {\n            const cos = Math.cos(-alpha);\n            const sin = Math.sin(-alpha);\n            next = getRotatedPoint(next, cos, sin, center);\n        }\n        let border = edge.style.perimeterSpacing ?? 0;\n        border +=\n            edge.style[source ? 'sourcePerimeterSpacing' : 'targetPerimeterSpacing'] ?? 0;\n        let pt = this.getPerimeterPoint(start, next, alpha === 0 && orth, border);\n        if (pt && alpha !== 0) {\n            const cos = Math.cos(alpha);\n            const sin = Math.sin(alpha);\n            pt = getRotatedPoint(pt, cos, sin, center);\n        }\n        return pt;\n    }\n    /**\n     * Returns an {@link CellState} that represents the source or target terminal or\n     * port for the given edge.\n     *\n     * @param state {@link CellState} that represents the state of the edge.\n     * @param terminal {@link CellState} that represents the terminal.\n     * @param source Boolean indicating if the given terminal is the source terminal.\n     */\n    getTerminalPort(state, terminal, source = false) {\n        const key = source ? 'sourcePort' : 'targetPort';\n        const id = state.style[key];\n        if (id) {\n            const cell = this.graph.getDataModel().getCell(id);\n            if (cell) {\n                const tmp = this.getState(cell, false);\n                // Only uses ports where a cell state exists\n                if (tmp) {\n                    terminal = tmp;\n                }\n            }\n        }\n        return terminal;\n    }\n    /**\n     * Returns an {@link Point} that defines the location of the intersection point between\n     * the perimeter and the line between the center of the shape and the given point.\n     *\n     * @param terminal {@link CellState} for the source or target terminal.\n     * @param next {@link Point} that lies outside the given terminal.\n     * @param orthogonal Boolean that specifies if the orthogonal projection onto\n     * the perimeter should be returned. If this is false then the intersection\n     * of the perimeter and the line between the next and the center point is\n     * returned.\n     * @param border Optional border between the perimeter and the shape.\n     */\n    getPerimeterPoint(terminal, next, orthogonal, border = 0) {\n        let point = null;\n        if (terminal != null) {\n            const perimeter = this.getPerimeterFunction(terminal);\n            if (perimeter != null && next != null) {\n                const bounds = this.getPerimeterBounds(terminal, border);\n                if (bounds.width > 0 || bounds.height > 0) {\n                    point = new Point(next.x, next.y);\n                    let flipH = false;\n                    let flipV = false;\n                    if (terminal.cell.isVertex()) {\n                        flipH = !!terminal.style.flipH;\n                        flipV = !!terminal.style.flipV;\n                        if (flipH) {\n                            point.x = 2 * bounds.getCenterX() - point.x;\n                        }\n                        if (flipV) {\n                            point.y = 2 * bounds.getCenterY() - point.y;\n                        }\n                    }\n                    point = perimeter(bounds, terminal, point, orthogonal);\n                    if (point != null) {\n                        if (flipH) {\n                            point.x = 2 * bounds.getCenterX() - point.x;\n                        }\n                        if (flipV) {\n                            point.y = 2 * bounds.getCenterY() - point.y;\n                        }\n                    }\n                }\n            }\n            if (point == null) {\n                point = this.getPoint(terminal);\n            }\n        }\n        return point;\n    }\n    /**\n     * Returns the x-coordinate of the center point for automatic routing.\n     */\n    getRoutingCenterX(state) {\n        const f = state.style ? state.style.routingCenterX ?? 0 : 0;\n        return state.getCenterX() + f * state.width;\n    }\n    /**\n     * Returns the y-coordinate of the center point for automatic routing.\n     */\n    getRoutingCenterY(state) {\n        const f = state.style ? state.style.routingCenterY ?? 0 : 0;\n        return state.getCenterY() + f * state.height;\n    }\n    /**\n     * Returns the perimeter bounds for the given terminal, edge pair as an\n     * {@link Rectangle}.\n     *\n     * If you have a model where each terminal has a relative child that should\n     * act as the graphical endpoint for a connection from/to the terminal, then\n     * this method can be replaced as follows:\n     *\n     * @example\n     * ```javascript\n     * var oldGetPerimeterBounds = getPerimeterBounds;\n     * getPerimeterBounds(terminal, edge, isSource)\n     * {\n     *   var model = this.graph.getDataModel();\n     *   var childCount = model.getChildCount(terminal.cell);\n     *\n     *   if (childCount > 0)\n     *   {\n     *     var child = model.getChildAt(terminal.cell, 0);\n     *     var geo = model.getGeometry(child);\n     *\n     *     if (geo != null &&\n     *         geo.relative)\n     *     {\n     *       var state = this.getState(child);\n     *\n     *       if (state != null)\n     *       {\n     *         terminal = state;\n     *       }\n     *     }\n     *   }\n     *\n     *   return oldGetPerimeterBounds.apply(this, arguments);\n     * };\n     * ```\n     *\n     * @param terminal CellState that represents the terminal.\n     * @param border Number that adds a border between the shape and the perimeter.\n     */\n    getPerimeterBounds(terminal, border = 0) {\n        border += terminal.style.perimeterSpacing ?? 0;\n        return terminal.getPerimeterBounds(border * this.scale);\n    }\n    /**\n     * Returns the perimeter function for the given state.\n     */\n    getPerimeterFunction(state) {\n        let perimeter = state.style.perimeter;\n        // Converts string values to objects\n        if (typeof perimeter === 'string') {\n            let tmp = StyleRegistry.getValue(perimeter);\n            if (tmp == null && this.isAllowEval()) {\n                tmp = eval(perimeter);\n            }\n            perimeter = tmp;\n        }\n        if (typeof perimeter === 'function') {\n            return perimeter;\n        }\n        return null;\n    }\n    /**\n     * Returns the nearest point in the list of absolute points or the center\n     * of the opposite terminal.\n     *\n     * @param edge {@link CellState} that represents the edge.\n     * @param opposite {@link CellState} that represents the opposite terminal.\n     * @param source Boolean indicating if the next point for the source or target\n     * should be returned.\n     */\n    getNextPoint(edge, opposite, source = false) {\n        const pts = edge.absolutePoints;\n        let point = null;\n        if (pts.length >= 2) {\n            const count = pts.length;\n            point = pts[source ? Math.min(1, count - 1) : Math.max(0, count - 2)];\n        }\n        if (!point && opposite) {\n            point = new Point(opposite.getCenterX(), opposite.getCenterY());\n        }\n        return point; // shouldn't return null, but really?\n    }\n    /**\n     * Returns the nearest ancestor terminal that is visible. The edge appears\n     * to be connected to this terminal on the display. The result of this method\n     * is cached in {@link CellState.getVisibleTerminalState}.\n     *\n     * @param edge {@link mxCell} whose visible terminal should be returned.\n     * @param source Boolean that specifies if the source or target terminal\n     * should be returned.\n     */\n    getVisibleTerminal(edge, source) {\n        const model = this.graph.getDataModel();\n        let result = edge.getTerminal(source);\n        let best = result;\n        while (result && result !== this.currentRoot) {\n            if ((best && !best.isVisible()) || result.isCollapsed()) {\n                best = result;\n            }\n            result = result.getParent();\n        }\n        // Checks if the result is valid for the current view state\n        if (best &&\n            (!model.contains(best) ||\n                best.getParent() === model.getRoot() ||\n                best === this.currentRoot)) {\n            best = null;\n        }\n        return best;\n    }\n    /**\n     * Updates the given state using the bounding box of t\n     * he absolute points.\n     * Also updates {@link CellState.terminalDistance}, {@link CellState.length} and\n     * {@link CellState.segments}.\n     *\n     * @param state {@link CellState} whose bounds should be updated.\n     */\n    updateEdgeBounds(state) {\n        const points = state.absolutePoints;\n        const p0 = points[0];\n        const pe = points[points.length - 1];\n        if (p0 && pe && (p0.x !== pe.x || p0.y !== pe.y)) {\n            const dx = pe.x - p0.x;\n            const dy = pe.y - p0.y;\n            state.terminalDistance = Math.sqrt(dx * dx + dy * dy);\n        }\n        else {\n            state.terminalDistance = 0;\n        }\n        let length = 0;\n        const segments = [];\n        let pt = p0;\n        if (pt) {\n            let minX = pt.x;\n            let minY = pt.y;\n            let maxX = minX;\n            let maxY = minY;\n            for (let i = 1; i < points.length; i += 1) {\n                const tmp = points[i];\n                if (tmp) {\n                    const dx = pt.x - tmp.x;\n                    const dy = pt.y - tmp.y;\n                    const segment = Math.sqrt(dx * dx + dy * dy);\n                    segments.push(segment);\n                    length += segment;\n                    pt = tmp;\n                    minX = Math.min(pt.x, minX);\n                    minY = Math.min(pt.y, minY);\n                    maxX = Math.max(pt.x, maxX);\n                    maxY = Math.max(pt.y, maxY);\n                }\n            }\n            state.length = length;\n            state.segments = segments;\n            const markerSize = 1; // TODO: include marker size\n            state.x = minX;\n            state.y = minY;\n            state.width = Math.max(markerSize, maxX - minX);\n            state.height = Math.max(markerSize, maxY - minY);\n        }\n    }\n    /**\n     * Returns the absolute point on the edge for the given relative\n     * {@link Geometry} as an {@link Point}. The edge is represented by the given\n     * {@link CellState}.\n     *\n     * @param state {@link CellState} that represents the state of the parent edge.\n     * @param geometry {@link mxGeometry} that represents the relative location.\n     */\n    getPoint(state, geometry = null) {\n        let x = state.getCenterX();\n        let y = state.getCenterY();\n        if (state.segments != null && (geometry == null || geometry.relative)) {\n            const gx = geometry != null ? geometry.x / 2 : 0;\n            const pointCount = state.absolutePoints.length;\n            const dist = Math.round((gx + 0.5) * state.length);\n            let segment = state.segments[0];\n            let length = 0;\n            let index = 1;\n            while (dist >= Math.round(length + segment) && index < pointCount - 1) {\n                length += segment;\n                segment = state.segments[index++];\n            }\n            const factor = segment === 0 ? 0 : (dist - length) / segment;\n            const p0 = state.absolutePoints[index - 1];\n            const pe = state.absolutePoints[index];\n            if (p0 != null && pe != null) {\n                let gy = 0;\n                let offsetX = 0;\n                let offsetY = 0;\n                if (geometry != null) {\n                    gy = geometry.y;\n                    const { offset } = geometry;\n                    if (offset != null) {\n                        offsetX = offset.x;\n                        offsetY = offset.y;\n                    }\n                }\n                const dx = pe.x - p0.x;\n                const dy = pe.y - p0.y;\n                const nx = segment === 0 ? 0 : dy / segment;\n                const ny = segment === 0 ? 0 : dx / segment;\n                x = p0.x + dx * factor + (nx * gy + offsetX) * this.scale;\n                y = p0.y + dy * factor - (ny * gy - offsetY) * this.scale;\n            }\n        }\n        else if (geometry != null) {\n            const { offset } = geometry;\n            if (offset != null) {\n                x += offset.x;\n                y += offset.y;\n            }\n        }\n        return new Point(x, y);\n    }\n    /**\n     * Gets the relative point that describes the given, absolute label\n     * position for the given edge state.\n     *\n     * @param state {@link CellState} that represents the state of the parent edge.\n     * @param x Specifies the x-coordinate of the absolute label location.\n     * @param y Specifies the y-coordinate of the absolute label location.\n     */\n    getRelativePoint(edgeState, x, y) {\n        const geometry = edgeState.cell.getGeometry();\n        if (geometry) {\n            const absolutePoints = edgeState.absolutePoints;\n            const pointCount = absolutePoints.length;\n            if (geometry.relative && pointCount > 1) {\n                const totalLength = edgeState.length;\n                const { segments } = edgeState;\n                // Works out which line segment the point of the label is closest to\n                let p0 = absolutePoints[0];\n                let pe = absolutePoints[1];\n                let minDist = ptSegDistSq(p0.x, p0.y, pe.x, pe.y, x, y);\n                let length = 0;\n                let index = 0;\n                let tmp = 0;\n                for (let i = 2; i < pointCount; i += 1) {\n                    p0 = pe;\n                    pe = absolutePoints[i];\n                    const dist = ptSegDistSq(p0.x, p0.y, pe.x, pe.y, x, y);\n                    tmp += segments[i - 2];\n                    if (dist <= minDist) {\n                        minDist = dist;\n                        index = i - 1;\n                        length = tmp;\n                    }\n                }\n                const seg = segments[index];\n                p0 = absolutePoints[index];\n                pe = absolutePoints[index + 1];\n                const x2 = p0.x;\n                const y2 = p0.y;\n                const x1 = pe.x;\n                const y1 = pe.y;\n                let px = x;\n                let py = y;\n                const xSegment = x2 - x1;\n                const ySegment = y2 - y1;\n                px -= x1;\n                py -= y1;\n                let projlenSq = 0;\n                px = xSegment - px;\n                py = ySegment - py;\n                const dotprod = px * xSegment + py * ySegment;\n                if (dotprod <= 0.0) {\n                    projlenSq = 0;\n                }\n                else {\n                    projlenSq = (dotprod * dotprod) / (xSegment * xSegment + ySegment * ySegment);\n                }\n                let projlen = Math.sqrt(projlenSq);\n                if (projlen > seg) {\n                    projlen = seg;\n                }\n                let yDistance = Math.sqrt(ptSegDistSq(p0.x, p0.y, pe.x, pe.y, x, y));\n                const direction = relativeCcw(p0.x, p0.y, pe.x, pe.y, x, y);\n                if (direction === -1) {\n                    yDistance = -yDistance;\n                }\n                // Constructs the relative point for the label\n                return new Point(((totalLength / 2 - length - projlen) / totalLength) * -2, yDistance / this.scale);\n            }\n        }\n        return new Point();\n    }\n    /**\n     * Updates {@link CellState.absoluteOffset} for the given state. The absolute\n     * offset is normally used for the position of the edge label. Is is\n     * calculated from the geometry as an absolute offset from the center\n     * between the two endpoints if the geometry is absolute, or as the\n     * relative distance between the center along the line and the absolute\n     * orthogonal distance if the geometry is relative.\n     *\n     * @param state {@link CellState} whose absolute offset should be updated.\n     */\n    updateEdgeLabelOffset(state) {\n        const points = state.absolutePoints;\n        const absoluteOffset = state.absoluteOffset;\n        absoluteOffset.x = state.getCenterX();\n        absoluteOffset.y = state.getCenterY();\n        if (points.length > 0 && state.segments) {\n            const geometry = state.cell.getGeometry();\n            if (geometry) {\n                if (geometry.relative) {\n                    const offset = this.getPoint(state, geometry);\n                    state.absoluteOffset = offset;\n                }\n                else {\n                    const p0 = points[0];\n                    const pe = points[points.length - 1];\n                    if (p0 && pe) {\n                        const dx = pe.x - p0.x;\n                        const dy = pe.y - p0.y;\n                        let x0 = 0;\n                        let y0 = 0;\n                        const off = geometry.offset;\n                        if (off) {\n                            x0 = off.x;\n                            y0 = off.y;\n                        }\n                        const x = p0.x + dx / 2 + x0 * this.scale;\n                        const y = p0.y + dy / 2 + y0 * this.scale;\n                        absoluteOffset.x = x;\n                        absoluteOffset.y = y;\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Returns the {@link CellState} for the given cell. If create is true, then\n     * the state is created if it does not yet exist.\n     *\n     * @param cell {@link mxCell} for which the {@link CellState} should be returned.\n     * @param create Optional boolean indicating if a new state should be created\n     * if it does not yet exist. Default is false.\n     */\n    getState(cell, create = false) {\n        let state = this.states.get(cell);\n        if (create && (!state || this.updateStyle) && cell.isVisible()) {\n            if (!state) {\n                state = this.createState(cell);\n                this.states.put(cell, state);\n            }\n            else {\n                state.style = this.graph.getCellStyle(cell);\n            }\n        }\n        return state;\n    }\n    /**\n     * Returns the {@link mxCellStates} for the given array of {@link Cell}. The array\n     * contains all states that are not null, that is, the returned array may\n     * have less elements than the given array. If no argument is given, then\n     * this returns {@link states}.\n     */\n    getCellStates(cells = null) {\n        if (!cells) {\n            return this.states.getValues();\n        }\n        const result = [];\n        for (const cell of cells) {\n            const state = this.getState(cell);\n            if (state) {\n                result.push(state);\n            }\n        }\n        return result;\n    }\n    /**\n     * Removes and returns the {@link CellState} for the given cell.\n     *\n     * @param cell {@link mxCell} for which the {@link CellState} should be removed.\n     */\n    removeState(cell) {\n        const state = this.states.remove(cell);\n        if (state) {\n            this.graph.cellRenderer.destroy(state);\n            state.invalid = true;\n            state.destroy();\n        }\n        return state;\n    }\n    /**\n     * Creates and returns an {@link CellState} for the given cell and initializes\n     * it using {@link cellRenderer.initialize}.\n     *\n     * @param cell {@link mxCell} for which a new {@link CellState} should be created.\n     */\n    createState(cell) {\n        return new CellState(this, cell, this.graph.getCellStyle(cell));\n    }\n    /**\n     * Returns true if the event origin is one of the drawing panes or\n     * containers of the view.\n     */\n    isContainerEvent(evt) {\n        const source = getSource(evt);\n        return (source &&\n            (source === this.graph.container ||\n                // @ts-ignore parentNode may exist\n                source.parentNode === this.backgroundPane ||\n                // @ts-ignore parentNode may exist\n                (source.parentNode && source.parentNode.parentNode === this.backgroundPane) ||\n                source === this.canvas.parentNode ||\n                source === this.canvas ||\n                source === this.backgroundPane ||\n                source === this.drawPane ||\n                source === this.overlayPane ||\n                source === this.decoratorPane));\n    }\n    isScrollEvent(evt) {\n        const graph = this.graph;\n        const offset = getOffset(graph.container);\n        const eventClientPosition = evt instanceof MouseEvent\n            ? [evt.clientX, evt.clientY]\n            : [evt.touches[0].clientX, evt.touches[0].clientY];\n        const pt = new Point(eventClientPosition[0] - offset.x, eventClientPosition[1] - offset.y);\n        const container = graph.container;\n        const outWidth = container.offsetWidth;\n        const inWidth = container.clientWidth;\n        if (outWidth > inWidth && pt.x > inWidth + 2 && pt.x <= outWidth) {\n            return true;\n        }\n        const outHeight = container.offsetHeight;\n        const inHeight = container.clientHeight;\n        return outHeight > inHeight && pt.y > inHeight + 2 && pt.y <= outHeight;\n    }\n    /**\n     * Initializes the graph event dispatch loop for the specified container\n     * and invokes {@link create} to create the required DOM nodes for the display.\n     */\n    init() {\n        this.installListeners();\n        this.createSvg();\n    }\n    /**\n     * Installs the required listeners in the container.\n     */\n    installListeners() {\n        const graph = this.graph;\n        const { container } = graph;\n        // Support for touch device gestures (eg. pinch to zoom)\n        // Double-tap handling is implemented in mxGraph.fireMouseEvent\n        if (Client.IS_TOUCH) {\n            InternalEvent.addListener(container, 'gesturestart', ((evt) => {\n                graph.fireGestureEvent(evt);\n                InternalEvent.consume(evt);\n            }));\n            InternalEvent.addListener(container, 'gesturechange', ((evt) => {\n                graph.fireGestureEvent(evt);\n                InternalEvent.consume(evt);\n            }));\n            InternalEvent.addListener(container, 'gestureend', ((evt) => {\n                graph.fireGestureEvent(evt);\n                InternalEvent.consume(evt);\n            }));\n        }\n        // Fires event only for one pointer per gesture\n        let pointerId = null;\n        // Adds basic listeners for graph event dispatching\n        InternalEvent.addGestureListeners(container, ((evt) => {\n            // Condition to avoid scrollbar events starting a rubberband selection\n            if (this.isContainerEvent(evt) &&\n                ((!Client.IS_GC && !Client.IS_SF) || !this.isScrollEvent(evt))) {\n                graph.fireMouseEvent(InternalEvent.MOUSE_DOWN, new InternalMouseEvent(evt));\n                // @ts-ignore\n                pointerId = evt.pointerId;\n            }\n        }), (evt) => {\n            if (this.isContainerEvent(evt) &&\n                // @ts-ignore\n                (pointerId === null || evt.pointerId === pointerId)) {\n                graph.fireMouseEvent(InternalEvent.MOUSE_MOVE, new InternalMouseEvent(evt));\n            }\n        }, (evt) => {\n            if (this.isContainerEvent(evt)) {\n                graph.fireMouseEvent(InternalEvent.MOUSE_UP, new InternalMouseEvent(evt));\n            }\n            pointerId = null;\n        });\n        // Adds listener for double click handling on background, this does always\n        // use native event handler, we assume that the DOM of the background\n        // does not change during the double click\n        InternalEvent.addListener(container, 'dblclick', ((evt) => {\n            if (this.isContainerEvent(evt)) {\n                graph.dblClick(evt);\n            }\n        }));\n        // Workaround for touch events which started on some DOM node\n        // on top of the container, in which case the cells under the\n        // mouse for the move and up events are not detected.\n        const getState = (evt) => {\n            let state = null;\n            // Workaround for touch events which started on some DOM node\n            // on top of the container, in which case the cells under the\n            // mouse for the move and up events are not detected.\n            if (Client.IS_TOUCH) {\n                const x = getClientX(evt);\n                const y = getClientY(evt);\n                // Dispatches the drop event to the graph which\n                // consumes and executes the source function\n                const pt = convertPoint(container, x, y);\n                const cell = graph.getCellAt(pt.x, pt.y);\n                if (cell)\n                    state = graph.view.getState(cell);\n            }\n            return state;\n        };\n        // Adds basic listeners for graph event dispatching outside of the\n        // container and finishing the handling of a single gesture\n        // Implemented via graph event dispatch loop to avoid duplicate events\n        // in Firefox and Chrome\n        graph.addMouseListener({\n            mouseDown: (sender, me) => {\n                const popupMenuHandler = graph.getPlugin('PopupMenuHandler');\n                popupMenuHandler?.hideMenu();\n            },\n            mouseMove: () => {\n                return;\n            },\n            mouseUp: () => {\n                return;\n            },\n        });\n        this.moveHandler = (evt) => {\n            const tooltipHandler = graph.getPlugin('TooltipHandler');\n            // Hides the tooltip if mouse is outside container\n            if (tooltipHandler && tooltipHandler.isHideOnHover()) {\n                tooltipHandler.hide();\n            }\n            if (this.captureDocumentGesture &&\n                graph.isMouseDown &&\n                graph.container != null &&\n                !this.isContainerEvent(evt) &&\n                graph.container.style.display !== 'none' &&\n                graph.container.style.visibility !== 'hidden' &&\n                !isConsumed(evt)) {\n                graph.fireMouseEvent(InternalEvent.MOUSE_MOVE, new InternalMouseEvent(evt, getState(evt)));\n            }\n        };\n        this.endHandler = (evt) => {\n            if (this.captureDocumentGesture &&\n                graph.isMouseDown &&\n                graph.container != null &&\n                !this.isContainerEvent(evt) &&\n                graph.container.style.display !== 'none' &&\n                graph.container.style.visibility !== 'hidden') {\n                graph.fireMouseEvent(InternalEvent.MOUSE_UP, new InternalMouseEvent(evt));\n            }\n        };\n        InternalEvent.addGestureListeners(document, null, this.moveHandler, this.endHandler);\n    }\n    /**\n     * Creates and returns the DOM nodes for the SVG display.\n     */\n    createSvg() {\n        const { container } = this.graph;\n        const canvas = (this.canvas = document.createElementNS(NS_SVG, 'g'));\n        // For background image\n        this.backgroundPane = document.createElementNS(NS_SVG, 'g');\n        canvas.appendChild(this.backgroundPane);\n        // Adds two layers (background is early feature)\n        this.drawPane = document.createElementNS(NS_SVG, 'g');\n        canvas.appendChild(this.drawPane);\n        this.overlayPane = document.createElementNS(NS_SVG, 'g');\n        canvas.appendChild(this.overlayPane);\n        this.decoratorPane = document.createElementNS(NS_SVG, 'g');\n        canvas.appendChild(this.decoratorPane);\n        const root = document.createElementNS(NS_SVG, 'svg');\n        root.style.left = '0px';\n        root.style.top = '0px';\n        root.style.width = '100%';\n        root.style.height = '100%';\n        // NOTE: In standards mode, the SVG must have block layout\n        // in order for the container DIV to not show scrollbars.\n        root.style.display = 'block';\n        root.appendChild(this.canvas);\n        if (container != null) {\n            container.appendChild(root);\n            this.updateContainerStyle(container);\n        }\n    }\n    /**\n     * Function: createHtml\n     *\n     * Creates the DOM nodes for the HTML display.\n     */\n    createHtml() {\n        const container = this.graph.container;\n        if (container != null) {\n            this.canvas = this.createHtmlPane('100%', '100%');\n            this.canvas.style.overflow = 'hidden';\n            // Uses minimal size for inner DIVs on Canvas. This is required\n            // for correct event processing in IE. If we have an overlapping\n            // DIV then the events on the cells are only fired for labels.\n            this.backgroundPane = this.createHtmlPane('1px', '1px');\n            this.drawPane = this.createHtmlPane('1px', '1px');\n            this.overlayPane = this.createHtmlPane('1px', '1px');\n            this.decoratorPane = this.createHtmlPane('1px', '1px');\n            this.canvas.appendChild(this.backgroundPane);\n            this.canvas.appendChild(this.drawPane);\n            this.canvas.appendChild(this.overlayPane);\n            this.canvas.appendChild(this.decoratorPane);\n            container.appendChild(this.canvas);\n            this.updateContainerStyle(container);\n        }\n    }\n    /**\n     * Function: updateHtmlCanvasSize\n     *\n     * Updates the size of the HTML canvas.\n     */\n    updateHtmlCanvasSize(width, height) {\n        if (this.graph.container != null) {\n            const ow = this.graph.container.offsetWidth;\n            const oh = this.graph.container.offsetHeight;\n            if (ow < width) {\n                this.canvas.style.width = width + 'px';\n            }\n            else {\n                this.canvas.style.width = '100%';\n            }\n            if (oh < height) {\n                this.canvas.style.height = height + 'px';\n            }\n            else {\n                this.canvas.style.height = '100%';\n            }\n        }\n    }\n    /**\n     * Function: createHtmlPane\n     *\n     * Creates and returns a drawing pane in HTML (DIV).\n     */\n    createHtmlPane(width, height) {\n        const pane = document.createElement('DIV');\n        if (width != null && height != null) {\n            pane.style.position = 'absolute';\n            pane.style.left = '0px';\n            pane.style.top = '0px';\n            pane.style.width = width;\n            pane.style.height = height;\n        }\n        else {\n            pane.style.position = 'relative';\n        }\n        return pane;\n    }\n    /**\n     * Updates the style of the container after installing the SVG DOM elements.\n     */\n    updateContainerStyle(container) {\n        // Workaround for offset of container\n        const style = getCurrentStyle(container);\n        if (style != null && style.position == 'static') {\n            container.style.position = 'relative';\n        }\n        // Disables built-in pan and zoom in IE10 and later\n        if (Client.IS_POINTER) {\n            container.style.touchAction = 'none';\n        }\n    }\n    /**\n     * Destroys the view and all its resources.\n     */\n    destroy() {\n        let root = null;\n        if (this.canvas && this.canvas instanceof SVGElement) {\n            root = this.canvas.ownerSVGElement;\n        }\n        if (!root) {\n            root = this.canvas;\n        }\n        if (root && root.parentNode) {\n            this.clear(this.currentRoot, true);\n            InternalEvent.removeGestureListeners(document, null, this.moveHandler, this.endHandler);\n            InternalEvent.release(this.graph.container);\n            root.parentNode.removeChild(root);\n            this.moveHandler = null;\n            this.endHandler = null;\n            // @ts-expect-error Can be null when destroyed.\n            this.canvas = null;\n            // @ts-expect-error Can be null when destroyed.\n            this.backgroundPane = null;\n            // @ts-expect-error Can be null when destroyed.\n            this.drawPane = null;\n            // @ts-expect-error Can be null when destroyed.\n            this.overlayPane = null;\n            // @ts-expect-error Can be null when destroyed.\n            this.decoratorPane = null;\n        }\n    }\n}\nexport default GraphView;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6489, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6495, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/GraphSelectionModel.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Client from '../Client';\nimport EventSource from '../view/event/EventSource';\nimport SelectionChange from './undoable_changes/SelectionChange';\nimport UndoableEdit from './undoable_changes/UndoableEdit';\nimport EventObject from './event/EventObject';\nimport InternalEvent from './event/InternalEvent';\n/**\n * Class: mxGraphSelectionModel\n *\n * Implements the selection model for a graph. Here is a listener that handles\n * all removed selection cells.\n *\n * (code)\n * graph.getSelectionModel().addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var cells = evt.getProperty('added');\n *\n *   for (var i = 0; i < cells.length; i++)\n *   {\n *     // Handle cells[i]...\n *   }\n * });\n * (end)\n *\n * Event: mxEvent.UNDO\n *\n * Fires after the selection was changed in <changeSelection>. The\n * <code>edit</code> property contains the {@link UndoableEdit} which contains the\n * {@link SelectionChange}.\n *\n * Event: mxEvent.CHANGE\n *\n * Fires after the selection changes by executing an {@link SelectionChange}. The\n * <code>added</code> and <code>removed</code> properties contain arrays of\n * cells that have been added to or removed from the selection, respectively.\n * The names are inverted due to historic reasons. This cannot be changed.\n *\n * Constructor: mxGraphSelectionModel\n *\n * Constructs a new graph selection model for the given {@link Graph}.\n *\n * Parameters:\n *\n * graph - Reference to the enclosing {@link Graph}.\n */\nclass GraphSelectionModel extends EventSource {\n    constructor(graph) {\n        super();\n        /**\n         * Specifies the resource key for the status message after a long operation.\n         * If the resource for this key does not exist then the value is used as\n         * the status message. Default is 'done'.\n         */\n        this.doneResource = Client.language !== 'none' ? 'done' : '';\n        /**\n         * Specifies the resource key for the status message while the selection is\n         * being updated. If the resource for this key does not exist then the\n         * value is used as the status message. Default is 'updatingSelection'.\n         */\n        this.updatingSelectionResource = Client.language !== 'none' ? 'updatingSelection' : '';\n        /**\n         * Specifies if only one selected item at a time is allowed.\n         * Default is false.\n         */\n        this.singleSelection = false;\n        this.graph = graph;\n        this.cells = [];\n    }\n    /**\n     * Returns {@link singleSelection} as a boolean.\n     */\n    isSingleSelection() {\n        return this.singleSelection;\n    }\n    /**\n     * Sets the {@link singleSelection} flag.\n     *\n     * @param {boolean} singleSelection Boolean that specifies the new value for\n     * {@link singleSelection}.\n     */\n    setSingleSelection(singleSelection) {\n        this.singleSelection = singleSelection;\n    }\n    /**\n     * Returns true if the given {@link Cell} is selected.\n     */\n    isSelected(cell) {\n        return this.cells.indexOf(cell) >= 0;\n    }\n    /**\n     * Returns true if no cells are currently selected.\n     */\n    isEmpty() {\n        return this.cells.length === 0;\n    }\n    /**\n     * Clears the selection and fires a {@link change} event if the selection was not\n     * empty.\n     */\n    clear() {\n        this.changeSelection(null, this.cells);\n    }\n    /**\n     * Selects the specified {@link Cell} using {@link setCells}.\n     *\n     * @param cell {@link mxCell} to be selected.\n     */\n    setCell(cell) {\n        this.setCells(cell ? [cell] : []);\n    }\n    /**\n     * Selects the given array of {@link Cell} and fires a {@link change} event.\n     *\n     * @param cells Array of {@link Cell} to be selected.\n     */\n    setCells(cells) {\n        if (this.singleSelection) {\n            cells = [this.getFirstSelectableCell(cells)];\n        }\n        const tmp = [];\n        for (let i = 0; i < cells.length; i += 1) {\n            if (this.graph.isCellSelectable(cells[i])) {\n                tmp.push(cells[i]);\n            }\n        }\n        this.changeSelection(tmp, this.cells);\n    }\n    /**\n     * Returns the first selectable cell in the given array of cells.\n     */\n    getFirstSelectableCell(cells) {\n        for (let i = 0; i < cells.length; i += 1) {\n            if (this.graph.isCellSelectable(cells[i])) {\n                return cells[i];\n            }\n        }\n        return null;\n    }\n    /**\n     * Adds the given {@link Cell} to the selection and fires a {@link select} event.\n     *\n     * @param cell {@link mxCell} to add to the selection.\n     */\n    addCell(cell) {\n        this.addCells([cell]);\n    }\n    /**\n     * Adds the given array of {@link Cell} to the selection and fires a {@link select}\n     * event.\n     *\n     * @param cells Array of {@link Cell} to add to the selection.\n     */\n    addCells(cells) {\n        let remove = null;\n        if (this.singleSelection) {\n            remove = this.cells;\n            const selectableCell = this.getFirstSelectableCell(cells);\n            cells = selectableCell ? [selectableCell] : [];\n        }\n        const tmp = [];\n        for (let i = 0; i < cells.length; i += 1) {\n            if (!this.isSelected(cells[i]) && this.graph.isCellSelectable(cells[i])) {\n                tmp.push(cells[i]);\n            }\n        }\n        this.changeSelection(tmp, remove);\n    }\n    /**\n     * Removes the specified {@link Cell} from the selection and fires a {@link select}\n     * event for the remaining cells.\n     *\n     * @param cell {@link mxCell} to remove from the selection.\n     */\n    removeCell(cell) {\n        this.removeCells([cell]);\n    }\n    /**\n     * Removes the specified {@link Cell} from the selection and fires a {@link select}\n     * event for the remaining cells.\n     *\n     * @param cells {@link mxCell}s to remove from the selection.\n     */\n    removeCells(cells) {\n        const tmp = [];\n        for (let i = 0; i < cells.length; i += 1) {\n            if (this.isSelected(cells[i])) {\n                tmp.push(cells[i]);\n            }\n        }\n        this.changeSelection(null, tmp);\n    }\n    /**\n     * Adds/removes the specified arrays of {@link Cell} to/from the selection.\n     *\n     * @param added Array of {@link Cell} to add to the selection.\n     * @param remove Array of {@link Cell} to remove from the selection.\n     */\n    changeSelection(added = null, removed = null) {\n        if ((added && added.length > 0 && added[0]) ||\n            (removed && removed.length > 0 && removed[0])) {\n            const change = new SelectionChange(this.graph, added || [], removed || []);\n            change.execute();\n            const edit = new UndoableEdit(this.graph, false);\n            edit.add(change);\n            this.fireEvent(new EventObject(InternalEvent.UNDO, { edit }));\n        }\n    }\n    /**\n     * Inner callback to add the specified {@link Cell} to the selection. No event\n     * is fired in this implementation.\n     *\n     * Paramters:\n     *\n     * @param cell {@link mxCell} to add to the selection.\n     */\n    cellAdded(cell) {\n        if (!this.isSelected(cell)) {\n            this.cells.push(cell);\n        }\n    }\n    /**\n     * Inner callback to remove the specified {@link Cell} from the selection. No\n     * event is fired in this implementation.\n     *\n     * @param cell {@link mxCell} to remove from the selection.\n     */\n    cellRemoved(cell) {\n        const index = this.cells.indexOf(cell);\n        if (index >= 0) {\n            this.cells.splice(index, 1);\n        }\n    }\n}\nexport default GraphSelectionModel;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6746, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6752, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/plugins/index.js"],"sourcesContent":["/*\nCopyright 2024-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport CellEditorHandler from '../handler/CellEditorHandler';\nimport TooltipHandler from '../handler/TooltipHandler';\nimport SelectionCellsHandler from '../handler/SelectionCellsHandler';\nimport PopupMenuHandler from '../handler/PopupMenuHandler';\nimport ConnectionHandler from '../handler/ConnectionHandler';\nimport SelectionHandler from '../handler/SelectionHandler';\nimport PanningHandler from '../handler/PanningHandler';\n/**\n * Returns the list of plugins used by default in `maxGraph`.\n *\n * The function returns a new array each time it is called.\n *\n * @category Plugin\n * @since 0.13.0\n */\nexport const getDefaultPlugins = () => [\n    CellEditorHandler,\n    TooltipHandler,\n    SelectionCellsHandler,\n    PopupMenuHandler,\n    ConnectionHandler,\n    SelectionHandler,\n    PanningHandler,\n];\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AASO,MAAM,oBAAoB,IAAM;QACnC,iLAAA,CAAA,UAAiB;QACjB,8KAAA,CAAA,UAAc;QACd,qLAAA,CAAA,UAAqB;QACrB,gLAAA,CAAA,UAAgB;QAChB,iLAAA,CAAA,UAAiB;QACjB,gLAAA,CAAA,UAAgB;QAChB,8KAAA,CAAA,UAAc;KACjB","ignoreList":[0]}},
    {"offset": {"line": 6792, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6798, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/view/Graph.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Image from './image/ImageBox';\nimport EventObject from './event/EventObject';\nimport EventSource from './event/EventSource';\nimport InternalEvent from './event/InternalEvent';\nimport Rectangle from './geometry/Rectangle';\nimport Client from '../Client';\nimport GraphView from './GraphView';\nimport CellRenderer from './cell/CellRenderer';\nimport { getCurrentStyle, hasScrollbars, parseCssNumber } from '../util/styleUtils';\nimport Cell from './cell/Cell';\nimport GraphDataModel from './GraphDataModel';\nimport { Stylesheet } from './style/Stylesheet';\nimport { PAGE_FORMAT_A4_PORTRAIT } from '../util/Constants';\nimport ChildChange from './undoable_changes/ChildChange';\nimport GeometryChange from './undoable_changes/GeometryChange';\nimport RootChange from './undoable_changes/RootChange';\nimport StyleChange from './undoable_changes/StyleChange';\nimport TerminalChange from './undoable_changes/TerminalChange';\nimport ValueChange from './undoable_changes/ValueChange';\nimport { isNode } from '../util/domUtils';\nimport EdgeStyle from './style/EdgeStyle';\nimport EdgeHandler from './handler/EdgeHandler';\nimport VertexHandler from './handler/VertexHandler';\nimport EdgeSegmentHandler from './handler/EdgeSegmentHandler';\nimport ElbowEdgeHandler from './handler/ElbowEdgeHandler';\nimport GraphSelectionModel from './GraphSelectionModel';\nimport { registerDefaultShapes } from './cell/register-shapes';\nimport { registerDefaultEdgeMarkers } from './geometry/edge/MarkerShape';\nimport { registerDefaultStyleElements } from './style/register';\nimport { applyGraphMixins } from './mixins/_graph-mixins-apply';\nimport { getDefaultPlugins } from './plugins';\n/**\n * Extends {@link EventSource} to implement a graph component for the browser. This is the main class of the package.\n *\n * To activate panning and connections use {@link setPanning} and {@link setConnectable}.\n * For rubberband selection you must create a new instance of {@link rubberband}.\n *\n * The following listeners are added to {@link mouseListeners} by default:\n *\n * - tooltipHandler: {@link TooltipHandler} that displays tooltips\n * - panningHandler: {@link PanningHandler} for panning and popup menus\n * - connectionHandler: {@link ConnectionHandler} for creating connections\n * - selectionHandler: {@link SelectionHandler} for moving and cloning cells\n *\n * These listeners will be called in the above order if they are enabled.\n */\nclass Graph extends EventSource {\n    // ===================================================================================================================\n    // Group: \"Create Class Instance\" factory functions.\n    // These can be overridden in subclasses of Graph to allow the Graph to instantiate user-defined implementations with\n    // custom behavior.\n    // ===================================================================================================================\n    /**\n     * Creates a new {@link CellRenderer} to be used in this graph.\n     */\n    createCellRenderer() {\n        return new CellRenderer();\n    }\n    /**\n     * Hooks to create a new {@link EdgeHandler} for the given {@link CellState}.\n     *\n     * @param state {@link CellState} to create the handler for.\n     */\n    createEdgeHandlerInstance(state) {\n        // Note this method not being called createEdgeHandler to keep compatibility\n        // with older code which overrides/calls createEdgeHandler\n        return new EdgeHandler(state);\n    }\n    /**\n     * Hooks to create a new {@link EdgeSegmentHandler} for the given {@link CellState}.\n     *\n     * @param state {@link CellState} to create the handler for.\n     */\n    createEdgeSegmentHandler(state) {\n        return new EdgeSegmentHandler(state);\n    }\n    /**\n     * Hooks to create a new {@link ElbowEdgeHandler} for the given {@link CellState}.\n     *\n     * @param state {@link CellState} to create the handler for.\n     */\n    createElbowEdgeHandler(state) {\n        return new ElbowEdgeHandler(state);\n    }\n    /**\n     * Creates a new {@link GraphDataModel} to be used in this graph.\n     */\n    createGraphDataModel() {\n        return new GraphDataModel();\n    }\n    /**\n     * Creates a new {@link GraphView} to be used in this graph.\n     */\n    createGraphView() {\n        return new GraphView(this);\n    }\n    /**\n     * Creates a new {@link GraphSelectionModel} to be used in this graph.\n     */\n    createSelectionModel() {\n        return new GraphSelectionModel(this);\n    }\n    /**\n     * Creates a new {@link Stylesheet} to be used in this graph.\n     */\n    createStylesheet() {\n        return new Stylesheet();\n    }\n    /**\n     * Hooks to create a new {@link VertexHandler} for the given {@link CellState}.\n     *\n     * @param state {@link CellState} to create the handler for.\n     */\n    createVertexHandler(state) {\n        return new VertexHandler(state);\n    }\n    // ===================================================================================================================\n    // Group: Main graph constructor and functions\n    // ===================================================================================================================\n    registerDefaults() {\n        registerDefaultShapes();\n        registerDefaultStyleElements();\n        registerDefaultEdgeMarkers();\n    }\n    constructor(container, model, plugins = getDefaultPlugins(), stylesheet = null) {\n        super();\n        this.destroyed = false;\n        this.graphModelChangeListener = null;\n        this.paintBackground = null;\n        this.isConstrainedMoving = false;\n        // ===================================================================================================================\n        // Group: Variables (that maybe should be in the mixins, but need to be created for each new class instance)\n        // ===================================================================================================================\n        this.cells = [];\n        this.imageBundles = [];\n        /**\n         * Holds the mouse event listeners. See {@link fireMouseEvent}.\n         */\n        this.mouseListeners = [];\n        /**\n         * An array of {@link Multiplicity} describing the allowed connections in a graph.\n         */\n        this.multiplicities = [];\n        this.plugins = {};\n        /**\n         * RenderHint as it was passed to the constructor.\n         */\n        this.renderHint = null;\n        /**\n         * Dialect to be used for drawing the graph. Possible values are all constants in {@link DIALECT}.\n         */\n        this.dialect = 'svg';\n        /**\n         * Value returned by {@link getOverlap} if {@link isAllowOverlapParent} returns\n         * `true` for the given cell. {@link getOverlap} is used in {@link constrainChild} if\n         * {@link isConstrainChild} returns `true`. The value specifies the\n         * portion of the child which is allowed to overlap the parent.\n         */\n        this.defaultOverlap = 0.5;\n        /**\n         * Specifies the default parent to be used to insert new cells.\n         * This is used in {@link getDefaultParent}.\n         * @default null\n         */\n        this.defaultParent = null;\n        /**\n         * Specifies the {@link Image} to be returned by {@link getBackgroundImage}.\n         * @default null\n         *\n         * @example\n         * ```javascript\n         * var img = new mxImage('http://www.example.com/maps/examplemap.jpg', 1024, 768);\n         * graph.setBackgroundImage(img);\n         * graph.view.validate();\n         * ```\n         */\n        this.backgroundImage = null;\n        /**\n         * Specifies if the background page should be visible.\n         * Not yet implemented.\n         * @default false\n         */\n        this.pageVisible = false;\n        /**\n         * Specifies if a dashed line should be drawn between multiple pages.\n         * If you change this value while a graph is being displayed then you\n         * should call {@link sizeDidChange} to force an update of the display.\n         * @default false\n         */\n        this.pageBreaksVisible = false;\n        /**\n         * Specifies the color for page breaks.\n         * @default gray\n         */\n        this.pageBreakColor = 'gray';\n        /**\n         * Specifies the page breaks should be dashed.\n         * @default true\n         */\n        this.pageBreakDashed = true;\n        /**\n         * Specifies the minimum distance in pixels for page breaks to be visible.\n         * @default 20\n         */\n        this.minPageBreakDist = 20;\n        /**\n         * Specifies if the graph size should be rounded to the next page number in\n         * {@link sizeDidChange}. This is only used if the graph container has scrollbars.\n         * @default false\n         */\n        this.preferPageSize = false;\n        /**\n         * Specifies the page format for the background page.\n         * This is used as the default in {@link PrintPreview} and for painting the background page\n         * if {@link pageVisible} is `true` and the page breaks if {@link pageBreaksVisible} is `true`.\n         * @default {@link mxConstants.PAGE_FORMAT_A4_PORTRAIT}\n         */\n        this.pageFormat = new Rectangle(...PAGE_FORMAT_A4_PORTRAIT);\n        /**\n         * Specifies the scale of the background page.\n         * Not yet implemented.\n         * @default 1.5\n         */\n        this.pageScale = 1.5;\n        /**\n         * Specifies the return value for {@link isEnabled}.\n         * @default true\n         */\n        this.enabled = true;\n        /**\n         * Specifies the return value for {@link canExportCell}.\n         * @default true\n         */\n        this.exportEnabled = true;\n        /**\n         * Specifies the return value for {@link canImportCell}.\n         * @default true\n         */\n        this.importEnabled = true;\n        /**\n         * Specifies if the graph should automatically scroll regardless of the\n         * scrollbars. This will scroll the container using positive values for\n         * scroll positions (ie usually only rightwards and downwards). To avoid\n         * possible conflicts with panning, set {@link translateToScrollPosition} to `true`.\n         */\n        this.ignoreScrollbars = false;\n        /**\n         * Specifies if the graph should automatically convert the current scroll\n         * position to a translate in the graph view when a mouseUp event is received.\n         * This can be used to avoid conflicts when using {@link autoScroll} and\n         * {@link ignoreScrollbars} with no scrollbars in the container.\n         */\n        this.translateToScrollPosition = false;\n        /**\n         * {@link Rectangle} that specifies the area in which all cells in the diagram\n         * should be placed. Uses in {@link getMaximumGraphBounds}. Use a width or height of\n         * `0` if you only want to give a upper, left corner.\n         */\n        this.maximumGraphBounds = null;\n        /**\n         * {@link Rectangle} that specifies the minimum size of the graph. This is ignored\n         * if the graph container has no scrollbars.\n         * @default null\n         */\n        this.minimumGraphSize = null;\n        /**\n         * {@link Rectangle} that specifies the minimum size of the {@link container} if\n         * {@link resizeContainer} is `true`.\n         */\n        this.minimumContainerSize = null;\n        /**\n         * {@link Rectangle} that specifies the maximum size of the container if\n         * {@link resizeContainer} is `true`.\n         */\n        this.maximumContainerSize = null;\n        /**\n         * Specifies if the container should be resized to the graph size when\n         * the graph size has changed.\n         * @default false\n         */\n        this.resizeContainer = false;\n        /**\n         * Border to be added to the bottom and right side when the container is\n         * being resized after the graph has been changed.\n         * @default 0\n         */\n        this.border = 0;\n        /**\n         * Specifies if edges should appear in the foreground regardless of their order\n         * in the model. If {@link keepEdgesInForeground} and {@link keepEdgesInBackground} are\n         * both `true` then the normal order is applied.\n         * @default false\n         */\n        this.keepEdgesInForeground = false;\n        /**\n         * Specifies if edges should appear in the background regardless of their order\n         * in the model. If {@link keepEdgesInForeground} and {@link keepEdgesInBackground} are\n         * both `true` then the normal order is applied.\n         * @default false\n         */\n        this.keepEdgesInBackground = false;\n        /**\n         * Specifies the return value for {@link isRecursiveResize}.\n         * @default false (for backwards compatibility)\n         */\n        this.recursiveResize = false;\n        /**\n         * Specifies if the scale and translate should be reset if the root changes in\n         * the model.\n         * @default true\n         */\n        this.resetViewOnRootChange = true;\n        /**\n         * Specifies if loops (aka self-references) are allowed.\n         * @default false\n         */\n        this.allowLoops = false;\n        /**\n         * {@link EdgeStyle} to be used for loops. This is a fallback for loops if the\n         * {@link CellStateStyle.loopStyle} is `undefined`.\n         * @default {@link EdgeStyle.Loop}\n         */\n        this.defaultLoopStyle = EdgeStyle.Loop;\n        /**\n         * Specifies if multiple edges in the same direction between the same pair of\n         * vertices are allowed.\n         * @default true\n         */\n        this.multigraph = true;\n        /**\n         * Specifies the minimum scale to be applied in {@link fit}. Set this to `null` to allow any value.\n         * @default 0.1\n         */\n        this.minFitScale = 0.1;\n        /**\n         * Specifies the maximum scale to be applied in {@link fit}. Set this to `null` to allow any value.\n         * @default 8\n         */\n        this.maxFitScale = 8;\n        /**\n         * Specifies the {@link Image} for the image to be used to display a warning\n         * overlay. See {@link setCellWarning}. Default value is Client.imageBasePath +\n         * '/warning'.  The extension for the image depends on the platform. It is\n         * '.png' on the Mac and '.gif' on all other platforms.\n         */\n        this.warningImage = new Image(`${Client.imageBasePath}/warning${Client.IS_MAC ? '.png' : '.gif'}`, 16, 16);\n        /**\n         * Specifies the resource key for the error message to be displayed in\n         * non-multigraphs when two vertices are already connected. If the resource\n         * for this key does not exist then the value is used as the error message.\n         * @default 'alreadyConnected'\n         */\n        this.alreadyConnectedResource = Client.language != 'none' ? 'alreadyConnected' : '';\n        /**\n         * Specifies the resource key for the warning message to be displayed when\n         * a collapsed cell contains validation errors. If the resource for this\n         * key does not exist then the value is used as the warning message.\n         * @default 'containsValidationErrors'\n         */\n        this.containsValidationErrorsResource = Client.language != 'none' ? 'containsValidationErrors' : '';\n        this.getContainer = () => this.container;\n        this.getPlugin = (id) => this.plugins[id];\n        this.getCellRenderer = () => this.cellRenderer;\n        this.getDialect = () => this.dialect;\n        this.isPageVisible = () => this.pageVisible;\n        this.isPageBreaksVisible = () => this.pageBreaksVisible;\n        this.getPageBreakColor = () => this.pageBreakColor;\n        this.isPageBreakDashed = () => this.pageBreakDashed;\n        this.getMinPageBreakDist = () => this.minPageBreakDist;\n        this.isPreferPageSize = () => this.preferPageSize;\n        this.getPageFormat = () => this.pageFormat;\n        this.getPageScale = () => this.pageScale;\n        this.isExportEnabled = () => this.exportEnabled;\n        this.isImportEnabled = () => this.importEnabled;\n        this.isIgnoreScrollbars = () => this.ignoreScrollbars;\n        this.isTranslateToScrollPosition = () => this.translateToScrollPosition;\n        this.getMinimumGraphSize = () => this.minimumGraphSize;\n        this.setMinimumGraphSize = (size) => (this.minimumGraphSize = size);\n        this.getMinimumContainerSize = () => this.minimumContainerSize;\n        this.setMinimumContainerSize = (size) => (this.minimumContainerSize = size);\n        this.getAlreadyConnectedResource = () => this.alreadyConnectedResource;\n        this.getContainsValidationErrorsResource = () => this.containsValidationErrorsResource;\n        this.registerDefaults();\n        this.container = container ?? document.createElement('div');\n        this.model = model ?? this.createGraphDataModel();\n        this.cellRenderer = this.createCellRenderer();\n        this.setStylesheet(stylesheet ?? this.createStylesheet());\n        this.view = this.createGraphView();\n        // Adds a graph model listener to update the view\n        this.graphModelChangeListener = (sender, evt) => {\n            this.graphModelChanged(evt.getProperty('edit').changes);\n        };\n        this.getDataModel().addListener(InternalEvent.CHANGE, this.graphModelChangeListener);\n        // Initializes the container using the view\n        this.view.init();\n        // Updates the size of the container for the current graph\n        this.sizeDidChange();\n        // Set the selection model\n        this.setSelectionModel(this.createSelectionModel());\n        // Initializes plugins\n        plugins.forEach((p) => (this.plugins[p.pluginId] = new p(this)));\n        this.view.revalidate();\n    }\n    getWarningImage() {\n        return this.warningImage;\n    }\n    /**\n     * Updates the model in a transaction.\n     *\n     * @param fn the update to be performed in the transaction.\n     *\n     * @see {@link GraphDataModel.batchUpdate}\n     */\n    batchUpdate(fn) {\n        this.getDataModel().batchUpdate(fn);\n    }\n    /**\n     * Returns the {@link GraphDataModel} that contains the cells.\n     */\n    getDataModel() {\n        return this.model;\n    }\n    /**\n     * Returns the {@link GraphView} that contains the {@link mxCellStates}.\n     */\n    getView() {\n        return this.view;\n    }\n    /**\n     * Returns the {@link Stylesheet} that defines the style.\n     */\n    getStylesheet() {\n        return this.stylesheet;\n    }\n    /**\n     * Sets the {@link Stylesheet} that defines the style.\n     */\n    setStylesheet(stylesheet) {\n        this.stylesheet = stylesheet;\n    }\n    /**\n     * Called when the graph model changes. Invokes {@link processChange} on each\n     * item of the given array to update the view accordingly.\n     *\n     * @param changes Array that contains the individual changes.\n     */\n    graphModelChanged(changes) {\n        for (const change of changes) {\n            this.processChange(change);\n        }\n        this.updateSelection();\n        this.view.validate();\n        this.sizeDidChange();\n    }\n    /**\n     * Processes the given change and invalidates the respective cached data\n     * in {@link GraphView}. This fires a {@link root} event if the root has changed in the\n     * model.\n     *\n     * @param {(RootChange|ChildChange|TerminalChange|GeometryChange|ValueChange|StyleChange)} change - Object that represents the change on the model.\n     */\n    processChange(change) {\n        // Resets the view settings, removes all cells and clears\n        // the selection if the root changes.\n        if (change instanceof RootChange) {\n            this.clearSelection();\n            this.setDefaultParent(null);\n            if (change.previous)\n                this.removeStateForCell(change.previous);\n            if (this.resetViewOnRootChange) {\n                this.view.scale = 1;\n                this.view.translate.x = 0;\n                this.view.translate.y = 0;\n            }\n            this.fireEvent(new EventObject(InternalEvent.ROOT));\n        }\n        // Adds or removes a child to the view by online invaliding\n        // the minimal required portions of the cache, namely, the\n        // old and new parent and the child.\n        else if (change instanceof ChildChange) {\n            const newParent = change.child.getParent();\n            this.view.invalidate(change.child, true, true);\n            if (!newParent ||\n                !this.getDataModel().contains(newParent) ||\n                newParent.isCollapsed()) {\n                this.view.invalidate(change.child, true, true);\n                this.removeStateForCell(change.child);\n                // Handles special case of current root of view being removed\n                if (this.view.currentRoot == change.child) {\n                    this.home();\n                }\n            }\n            if (newParent != change.previous) {\n                // Refreshes the collapse/expand icons on the parents\n                if (newParent != null) {\n                    this.view.invalidate(newParent, false, false);\n                }\n                if (change.previous != null) {\n                    this.view.invalidate(change.previous, false, false);\n                }\n            }\n        }\n        // Handles two special cases where the shape does not need to be\n        // recreated from scratch, it only needs to be invalidated.\n        else if (change instanceof TerminalChange || change instanceof GeometryChange) {\n            // Checks if the geometry has changed to avoid unnessecary revalidation\n            if (change instanceof TerminalChange ||\n                (change.previous == null && change.geometry != null) ||\n                (change.previous != null && !change.previous.equals(change.geometry))) {\n                this.view.invalidate(change.cell);\n            }\n        }\n        // Handles two special cases where only the shape, but no\n        // descendants need to be recreated\n        else if (change instanceof ValueChange) {\n            this.view.invalidate(change.cell, false, false);\n        }\n        // Requires a new mxShape in JavaScript\n        else if (change instanceof StyleChange) {\n            this.view.invalidate(change.cell, true, true);\n            const state = this.view.getState(change.cell);\n            if (state != null) {\n                state.invalidStyle = true;\n            }\n        }\n        // Removes the state from the cache by default\n        else if (change.cell != null && change.cell instanceof Cell) {\n            this.removeStateForCell(change.cell);\n        }\n    }\n    /**\n     * Scrolls the graph to the given point, extending the graph container if\n     * specified.\n     */\n    scrollPointToVisible(x, y, extend = false, border = 20) {\n        const panningHandler = this.getPlugin('PanningHandler');\n        if (!this.isTimerAutoScroll() &&\n            (this.ignoreScrollbars || hasScrollbars(this.container))) {\n            const c = this.container;\n            if (x >= c.scrollLeft &&\n                y >= c.scrollTop &&\n                x <= c.scrollLeft + c.clientWidth &&\n                y <= c.scrollTop + c.clientHeight) {\n                let dx = c.scrollLeft + c.clientWidth - x;\n                if (dx < border) {\n                    const old = c.scrollLeft;\n                    c.scrollLeft += border - dx;\n                    // Automatically extends the canvas size to the bottom, right\n                    // if the event is outside of the canvas and the edge of the\n                    // canvas has been reached. Notes: Needs fix for IE.\n                    if (extend && old === c.scrollLeft) {\n                        // @ts-ignore\n                        const root = this.view.getDrawPane().ownerSVGElement;\n                        const width = c.scrollWidth + border - dx;\n                        // Updates the clipping region. This is an expensive\n                        // operation that should not be executed too often.\n                        // @ts-ignore\n                        root.style.width = `${width}px`;\n                        c.scrollLeft += border - dx;\n                    }\n                }\n                else {\n                    dx = x - c.scrollLeft;\n                    if (dx < border) {\n                        c.scrollLeft -= border - dx;\n                    }\n                }\n                let dy = c.scrollTop + c.clientHeight - y;\n                if (dy < border) {\n                    const old = c.scrollTop;\n                    c.scrollTop += border - dy;\n                    if (old == c.scrollTop && extend) {\n                        // @ts-ignore\n                        const root = this.view.getDrawPane().ownerSVGElement;\n                        const height = c.scrollHeight + border - dy;\n                        // Updates the clipping region. This is an expensive\n                        // operation that should not be executed too often.\n                        // @ts-ignore\n                        root.style.height = `${height}px`;\n                        c.scrollTop += border - dy;\n                    }\n                }\n                else {\n                    dy = y - c.scrollTop;\n                    if (dy < border) {\n                        c.scrollTop -= border - dy;\n                    }\n                }\n            }\n        }\n        else if (this.isAllowAutoPanning() &&\n            panningHandler &&\n            !panningHandler.isActive()) {\n            panningHandler.getPanningManager().panTo(x + this.getPanDx(), y + this.getPanDy());\n        }\n    }\n    /**\n     * Returns the size of the border and padding on all four sides of the\n     * container. The left, top, right and bottom borders are stored in the x, y,\n     * width and height of the returned {@link Rectangle}, respectively.\n     */\n    getBorderSizes() {\n        const css = getCurrentStyle(this.container);\n        return new Rectangle(parseCssNumber(css.paddingLeft) +\n            (css.borderLeftStyle != 'none' ? parseCssNumber(css.borderLeftWidth) : 0), parseCssNumber(css.paddingTop) +\n            (css.borderTopStyle != 'none' ? parseCssNumber(css.borderTopWidth) : 0), parseCssNumber(css.paddingRight) +\n            (css.borderRightStyle != 'none' ? parseCssNumber(css.borderRightWidth) : 0), parseCssNumber(css.paddingBottom) +\n            (css.borderBottomStyle != 'none' ? parseCssNumber(css.borderBottomWidth) : 0));\n    }\n    /**\n     * Returns the preferred size of the background page if {@link preferPageSize} is true.\n     */\n    getPreferredPageSize(bounds, width, height) {\n        const tr = this.view.translate;\n        const fmt = this.pageFormat;\n        const ps = this.pageScale;\n        const page = new Rectangle(0, 0, Math.ceil(fmt.width * ps), Math.ceil(fmt.height * ps));\n        const hCount = this.pageBreaksVisible ? Math.ceil(width / page.width) : 1;\n        const vCount = this.pageBreaksVisible ? Math.ceil(height / page.height) : 1;\n        return new Rectangle(0, 0, hCount * page.width + 2 + tr.x, vCount * page.height + 2 + tr.y);\n    }\n    /**\n     * Scales the graph such that the complete diagram fits into <container> and\n     * returns the current scale in the view. To fit an initial graph prior to\n     * rendering, set {@link GraphView#rendering} to false prior to changing the model\n     * and execute the following after changing the model.\n     *\n     * ```javascript\n     * graph.fit();\n     * graph.view.rendering = true;\n     * graph.refresh();\n     * ```\n     *\n     * To fit and center the graph, the following code can be used.\n     *\n     * ```javascript\n     * let margin = 2;\n     * let max = 3;\n     *\n     * let bounds = graph.getGraphBounds();\n     * let cw = graph.container.clientWidth - margin;\n     * let ch = graph.container.clientHeight - margin;\n     * let w = bounds.width / graph.view.scale;\n     * let h = bounds.height / graph.view.scale;\n     * let s = Math.min(max, Math.min(cw / w, ch / h));\n     *\n     * graph.view.scaleAndTranslate(s,\n     *   (margin + cw - w * s) / (2 * s) - bounds.x / graph.view.scale,\n     *   (margin + ch - h * s) / (2 * s) - bounds.y / graph.view.scale);\n     * ```\n     *\n     * @param border Optional number that specifies the border. Default is <border>.\n     * @param keepOrigin Optional boolean that specifies if the translate should be\n     * changed. Default is false.\n     * @param margin Optional margin in pixels. Default is 0.\n     * @param enabled Optional boolean that specifies if the scale should be set or\n     * just returned. Default is true.\n     * @param ignoreWidth Optional boolean that specifies if the width should be\n     * ignored. Default is false.\n     * @param ignoreHeight Optional boolean that specifies if the height should be\n     * ignored. Default is false.\n     * @param maxHeight Optional maximum height.\n     */\n    fit(border = this.getBorder(), keepOrigin = false, margin = 0, enabled = true, ignoreWidth = false, ignoreHeight = false, maxHeight = null) {\n        if (this.container != null) {\n            // Adds spacing and border from css\n            const cssBorder = this.getBorderSizes();\n            let w1 = this.container.offsetWidth - cssBorder.x - cssBorder.width - 1;\n            let h1 = maxHeight != null\n                ? maxHeight\n                : this.container.offsetHeight - cssBorder.y - cssBorder.height - 1;\n            let bounds = this.view.getGraphBounds();\n            if (bounds.width > 0 && bounds.height > 0) {\n                if (keepOrigin && bounds.x != null && bounds.y != null) {\n                    bounds = bounds.clone();\n                    bounds.width += bounds.x;\n                    bounds.height += bounds.y;\n                    bounds.x = 0;\n                    bounds.y = 0;\n                }\n                // LATER: Use unscaled bounding boxes to fix rounding errors\n                const s = this.view.scale;\n                let w2 = bounds.width / s;\n                let h2 = bounds.height / s;\n                // Fits to the size of the background image if required\n                if (this.backgroundImage != null) {\n                    w2 = Math.max(w2, this.backgroundImage.width - bounds.x / s);\n                    h2 = Math.max(h2, this.backgroundImage.height - bounds.y / s);\n                }\n                const b = (keepOrigin ? border : 2 * border) + margin + 1;\n                w1 -= b;\n                h1 -= b;\n                let s2 = ignoreWidth\n                    ? h1 / h2\n                    : ignoreHeight\n                        ? w1 / w2\n                        : Math.min(w1 / w2, h1 / h2);\n                if (this.minFitScale != null) {\n                    s2 = Math.max(s2, this.minFitScale);\n                }\n                if (this.maxFitScale != null) {\n                    s2 = Math.min(s2, this.maxFitScale);\n                }\n                if (enabled) {\n                    if (!keepOrigin) {\n                        if (!hasScrollbars(this.container)) {\n                            const x0 = bounds.x != null\n                                ? Math.floor(this.view.translate.x - bounds.x / s + border / s2 + margin / 2)\n                                : border;\n                            const y0 = bounds.y != null\n                                ? Math.floor(this.view.translate.y - bounds.y / s + border / s2 + margin / 2)\n                                : border;\n                            this.view.scaleAndTranslate(s2, x0, y0);\n                        }\n                        else {\n                            this.view.setScale(s2);\n                            const b2 = this.getGraphBounds();\n                            if (b2.x != null) {\n                                this.container.scrollLeft = b2.x;\n                            }\n                            if (b2.y != null) {\n                                this.container.scrollTop = b2.y;\n                            }\n                        }\n                    }\n                    else if (this.view.scale != s2) {\n                        this.view.setScale(s2);\n                    }\n                }\n                else {\n                    return s2;\n                }\n            }\n        }\n        return this.view.scale;\n    }\n    /**\n     * Resizes the container for the given graph width and height.\n     */\n    doResizeContainer(width, height) {\n        if (this.maximumContainerSize != null) {\n            width = Math.min(this.maximumContainerSize.width, width);\n            height = Math.min(this.maximumContainerSize.height, height);\n        }\n        const container = this.container;\n        container.style.width = `${Math.ceil(width)}px`;\n        container.style.height = `${Math.ceil(height)}px`;\n    }\n    /*****************************************************************************\n     * Group: UNCLASSIFIED\n     *****************************************************************************/\n    /**\n     * Creates a new handler for the given cell state. This implementation\n     * returns a new {@link EdgeHandler} of the corresponding cell is an edge,\n     * otherwise it returns an {@link VertexHandler}.\n     *\n     * @param state {@link CellState} whose handler should be created.\n     */\n    createHandler(state) {\n        let result = null;\n        if (state.cell.isEdge()) {\n            const source = state.getVisibleTerminalState(true);\n            const target = state.getVisibleTerminalState(false);\n            const geo = state.cell.getGeometry();\n            const edgeStyle = this.getView().getEdgeStyle(state, geo ? geo.points || undefined : undefined, source, target);\n            result = this.createEdgeHandler(state, edgeStyle);\n        }\n        else {\n            result = this.createVertexHandler(state);\n        }\n        return result;\n    }\n    /**\n     * Hooks to create a new {@link EdgeHandler} for the given {@link CellState}.\n     *\n     * @param state {@link CellState} to create the handler for.\n     * @param edgeStyle the {@link EdgeStyleFunction} that let choose the actual edge handler.\n     */\n    createEdgeHandler(state, edgeStyle) {\n        let result = null;\n        if (edgeStyle == EdgeStyle.Loop ||\n            edgeStyle == EdgeStyle.ElbowConnector ||\n            edgeStyle == EdgeStyle.SideToSide ||\n            edgeStyle == EdgeStyle.TopToBottom) {\n            result = this.createElbowEdgeHandler(state);\n        }\n        else if (edgeStyle == EdgeStyle.SegmentConnector ||\n            edgeStyle == EdgeStyle.OrthConnector) {\n            result = this.createEdgeSegmentHandler(state);\n        }\n        else {\n            result = this.createEdgeHandlerInstance(state);\n        }\n        return result;\n    }\n    /*****************************************************************************\n     * Group: Drilldown\n     *****************************************************************************/\n    /**\n     * Returns the current root of the displayed cell hierarchy. This is a\n     * shortcut to {@link GraphView.currentRoot} in {@link GraphView}.\n     */\n    getCurrentRoot() {\n        return this.view.currentRoot;\n    }\n    /**\n     * Returns the translation to be used if the given cell is the root cell as\n     * an {@link Point}. This implementation returns null.\n     *\n     * To keep the children at their absolute position while stepping into groups,\n     * this function can be overridden as follows.\n     *\n     * @example\n     * ```javascript\n     * var offset = new mxPoint(0, 0);\n     *\n     * while (cell != null)\n     * {\n     *   var geo = this.model.getGeometry(cell);\n     *\n     *   if (geo != null)\n     *   {\n     *     offset.x -= geo.x;\n     *     offset.y -= geo.y;\n     *   }\n     *\n     *   cell = this.model.getParent(cell);\n     * }\n     *\n     * return offset;\n     * ```\n     *\n     * @param cell {@link mxCell} that represents the root.\n     */\n    getTranslateForRoot(cell) {\n        return null;\n    }\n    /**\n     * Returns the offset to be used for the cells inside the given cell. The\n     * root and layer cells may be identified using {@link GraphDataModel.isRoot} and\n     * {@link GraphDataModel.isLayer}. For all other current roots, the\n     * {@link GraphView.currentRoot} field points to the respective cell, so that\n     * the following holds: cell == this.view.currentRoot. This implementation\n     * returns null.\n     *\n     * @param cell {@link mxCell} whose offset should be returned.\n     */\n    getChildOffsetForCell(cell) {\n        return null;\n    }\n    /**\n     * Uses the root of the model as the root of the displayed cell hierarchy\n     * and selects the previous root.\n     */\n    home() {\n        const current = this.getCurrentRoot();\n        if (current != null) {\n            this.view.setCurrentRoot(null);\n            const state = this.view.getState(current);\n            if (state != null) {\n                this.setSelectionCell(current);\n            }\n        }\n    }\n    /**\n     * Returns true if the given cell is a valid root for the cell display\n     * hierarchy. This implementation returns true for all non-null values.\n     *\n     * @param cell {@link mxCell} which should be checked as a possible root.\n     */\n    isValidRoot(cell) {\n        return !!cell;\n    }\n    /*****************************************************************************\n     * Group: Graph display\n     *****************************************************************************/\n    /**\n     * Returns the bounds of the visible graph. Shortcut to\n     * {@link GraphView.getGraphBounds}. See also: {@link getBoundingBoxFromGeometry}.\n     */\n    getGraphBounds() {\n        return this.view.getGraphBounds();\n    }\n    /**\n     * Returns the bounds inside which the diagram should be kept as an\n     * {@link Rectangle}.\n     */\n    getMaximumGraphBounds() {\n        return this.maximumGraphBounds;\n    }\n    /**\n     * Clears all cell states or the states for the hierarchy starting at the\n     * given cell and validates the graph. This fires a refresh event as the\n     * last step.\n     *\n     * @param cell Optional {@link Cell} for which the cell states should be cleared.\n     */\n    refresh(cell = null) {\n        if (cell) {\n            this.view.clear(cell, false);\n        }\n        else {\n            this.view.clear(undefined, true);\n        }\n        this.view.validate();\n        this.sizeDidChange();\n        this.fireEvent(new EventObject(InternalEvent.REFRESH));\n    }\n    /**\n     * Centers the graph in the container.\n     *\n     * @param horizontal Optional boolean that specifies if the graph should be centered\n     * horizontally. Default is `true`.\n     * @param vertical Optional boolean that specifies if the graph should be centered\n     * vertically. Default is `true`.\n     * @param cx Optional float that specifies the horizontal center. Default is `0.5`.\n     * @param cy Optional float that specifies the vertical center. Default is `0.5`.\n     */\n    center(horizontal = true, vertical = true, cx = 0.5, cy = 0.5) {\n        const container = this.container;\n        const _hasScrollbars = hasScrollbars(this.container);\n        const padding = 2 * this.getBorder();\n        const cw = container.clientWidth - padding;\n        const ch = container.clientHeight - padding;\n        const bounds = this.getGraphBounds();\n        const t = this.view.translate;\n        const s = this.view.scale;\n        let dx = horizontal ? cw - bounds.width : 0;\n        let dy = vertical ? ch - bounds.height : 0;\n        if (!_hasScrollbars) {\n            this.view.setTranslate(horizontal ? Math.floor(t.x - bounds.x / s + (dx * cx) / s) : t.x, vertical ? Math.floor(t.y - bounds.y / s + (dy * cy) / s) : t.y);\n        }\n        else {\n            bounds.x -= t.x;\n            bounds.y -= t.y;\n            const sw = container.scrollWidth;\n            const sh = container.scrollHeight;\n            if (sw > cw) {\n                dx = 0;\n            }\n            if (sh > ch) {\n                dy = 0;\n            }\n            this.view.setTranslate(Math.floor(dx / 2 - bounds.x), Math.floor(dy / 2 - bounds.y));\n            container.scrollLeft = (sw - cw) / 2;\n            container.scrollTop = (sh - ch) / 2;\n        }\n    }\n    /**\n     * Returns true if perimeter points should be computed such that the\n     * resulting edge has only horizontal or vertical segments.\n     *\n     * @param edge {@link CellState} that represents the edge.\n     */\n    isOrthogonal(edge) {\n        /*\n        'orthogonal' defines if the connection points on either end of the edge should\n        be computed so that the edge is vertical or horizontal if possible\n        and if the point is not at a fixed location. Default is false.\n        This also returns true if the edgeStyle of the edge is an elbow or\n        entity.\n         */\n        const orthogonal = edge.style.orthogonal;\n        if (orthogonal != null) {\n            return orthogonal;\n        }\n        const tmp = this.view.getEdgeStyle(edge);\n        return (tmp === EdgeStyle.SegmentConnector ||\n            tmp === EdgeStyle.ElbowConnector ||\n            tmp === EdgeStyle.SideToSide ||\n            tmp === EdgeStyle.TopToBottom ||\n            tmp === EdgeStyle.EntityRelation ||\n            tmp === EdgeStyle.OrthConnector);\n    }\n    /*****************************************************************************\n     * Group: Graph appearance\n     *****************************************************************************/\n    /**\n     * Returns the {@link backgroundImage} as an {@link Image}.\n     */\n    getBackgroundImage() {\n        return this.backgroundImage;\n    }\n    /**\n     * Sets the new {@link backgroundImage}.\n     *\n     * @param image New {@link Image} to be used for the background.\n     */\n    setBackgroundImage(image) {\n        this.backgroundImage = image;\n    }\n    /**\n     * Returns the textual representation for the given cell.\n     *\n     * This implementation returns the node name or string-representation of the user object.\n     *\n     *\n     * The following returns the label attribute from the cells user object if it is an XML node.\n     *\n     * @example\n     * ```javascript\n     * graph.convertValueToString = function(cell)\n     * {\n     * \treturn cell.getAttribute('label');\n     * }\n     * ```\n     *\n     * See also: {@link cellLabelChanged}.\n     *\n     * @param cell {@link Cell} whose textual representation should be returned.\n     */\n    convertValueToString(cell) {\n        const value = cell.getValue();\n        if (value != null) {\n            if (isNode(value)) {\n                return value.nodeName;\n            }\n            if (typeof value.toString === 'function') {\n                return value.toString();\n            }\n        }\n        return '';\n    }\n    /**\n     * Returns the string to be used as the link for the given cell.\n     *\n     * This implementation returns null.\n     *\n     * @param cell {@link Cell} whose link should be returned.\n     */\n    getLinkForCell(cell) {\n        return null;\n    }\n    /**\n     * Returns the value of {@link border}.\n     */\n    getBorder() {\n        return this.border;\n    }\n    /**\n     * Sets the value of {@link border}.\n     *\n     * @param value Positive integer that represents the border to be used.\n     */\n    setBorder(value) {\n        this.border = value;\n    }\n    /*****************************************************************************\n     * Group: Graph behaviour\n     *****************************************************************************/\n    /**\n     * Returns {@link resizeContainer}.\n     */\n    isResizeContainer() {\n        return this.resizeContainer;\n    }\n    /**\n     * Sets {@link resizeContainer}.\n     *\n     * @param value Boolean indicating if the container should be resized.\n     */\n    setResizeContainer(value) {\n        this.resizeContainer = value;\n    }\n    /**\n     * Returns true if the graph is {@link enabled}.\n     */\n    isEnabled() {\n        return this.enabled;\n    }\n    /**\n     * Specifies if the graph should allow any interactions. This\n     * implementation updates {@link enabled}.\n     *\n     * @param value Boolean indicating if the graph should be enabled.\n     */\n    setEnabled(value) {\n        this.enabled = value;\n    }\n    /**\n     * Returns {@link multigraph} as a boolean.\n     */\n    isMultigraph() {\n        return this.multigraph;\n    }\n    /**\n     * Specifies if the graph should allow multiple connections between the\n     * same pair of vertices.\n     *\n     * @param value Boolean indicating if the graph allows multiple connections\n     * between the same pair of vertices.\n     */\n    setMultigraph(value) {\n        this.multigraph = value;\n    }\n    /**\n     * Returns {@link allowLoops} as a boolean.\n     */\n    isAllowLoops() {\n        return this.allowLoops;\n    }\n    /**\n     * Specifies if loops are allowed.\n     *\n     * @param value Boolean indicating if loops are allowed.\n     */\n    setAllowLoops(value) {\n        this.allowLoops = value;\n    }\n    /**\n     * Returns {@link recursiveResize}.\n     *\n     * @param state {@link CellState} that is being resized.\n     */\n    isRecursiveResize(state = null) {\n        return this.recursiveResize;\n    }\n    /**\n     * Sets {@link recursiveResize}.\n     *\n     * @param value New boolean value for {@link recursiveResize}.\n     */\n    setRecursiveResize(value) {\n        this.recursiveResize = value;\n    }\n    /**\n     * Returns a decimal number representing the amount of the width and height\n     * of the given cell that is allowed to overlap its parent. A value of 0\n     * means all children must stay inside the parent, 1 means the child is\n     * allowed to be placed outside of the parent such that it touches one of\n     * the parents sides. If {@link isAllowOverlapParent} returns false for the given\n     * cell, then this method returns 0.\n     *\n     * @param cell {@link mxCell} for which the overlap ratio should be returned.\n     */\n    getOverlap(cell) {\n        return this.isAllowOverlapParent(cell) ? this.defaultOverlap : 0;\n    }\n    /**\n     * Returns true if the given cell is allowed to be placed outside of the\n     * parents area.\n     *\n     * @param cell {@link mxCell} that represents the child to be checked.\n     */\n    isAllowOverlapParent(cell) {\n        return false;\n    }\n    /*****************************************************************************\n     * Group: Cell retrieval\n     *****************************************************************************/\n    /**\n     * Returns {@link defaultParent} or {@link GraphView.currentRoot} or the first child\n     * child of {@link GraphDataModel.root} if both are null. The value returned by\n     * this function should be used as the parent for new cells (aka default\n     * layer).\n     */\n    getDefaultParent() {\n        let parent = this.getCurrentRoot();\n        if (!parent) {\n            parent = this.defaultParent;\n            if (!parent) {\n                const root = this.getDataModel().getRoot();\n                parent = root.getChildAt(0);\n            }\n        }\n        return parent;\n    }\n    /**\n     * Sets the {@link defaultParent} to the given cell. Set this to null to return\n     * the first child of the root in getDefaultParent.\n     */\n    setDefaultParent(cell) {\n        this.defaultParent = cell;\n    }\n    /**\n     * Destroys the graph and all its resources.\n     */\n    destroy() {\n        if (!this.destroyed) {\n            this.destroyed = true;\n            Object.values(this.plugins).forEach((p) => p.onDestroy());\n            this.view.destroy();\n            if (this.model && this.graphModelChangeListener) {\n                this.getDataModel().removeListener(this.graphModelChangeListener);\n                this.graphModelChangeListener = null;\n            }\n        }\n    }\n}\n// This introduces a side effect, but it is necessary to ensure the Graph is enriched with all properties and methods defined in mixins.\n// It is only called when Graph is imported, so the Graph definition is always consistent.\n// And this doesn't impact the tree-shaking.\napplyGraphMixins();\nexport { Graph };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7883, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}