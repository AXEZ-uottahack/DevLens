{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/Constants.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Defines the portion of the cell which is to be used as a connectable\n * region. Default is 0.3. Possible values are 0 < x <= 1.\n */\nexport const DEFAULT_HOTSPOT = 0.3;\n/**\n * Defines the minimum size in pixels of the portion of the cell which is\n * to be used as a connectable region. Default is 8.\n */\nexport const MIN_HOTSPOT_SIZE = 8;\n/**\n * Defines the maximum size in pixels of the portion of the cell which is\n * to be used as a connectable region. Use 0 for no maximum. Default is 0.\n */\nexport const MAX_HOTSPOT_SIZE = 0;\nexport var RENDERING_HINT;\n(function (RENDERING_HINT) {\n    RENDERING_HINT[\"EXACT\"] = \"exact\";\n    RENDERING_HINT[\"FASTER\"] = \"faster\";\n    RENDERING_HINT[\"FASTEST\"] = \"fastest\";\n})(RENDERING_HINT || (RENDERING_HINT = {}));\nexport var DIALECT;\n(function (DIALECT) {\n    /** the SVG display dialect name. */\n    DIALECT[\"SVG\"] = \"svg\";\n    /** the mixed HTML display dialect name. */\n    DIALECT[\"MIXEDHTML\"] = \"mixedHtml\";\n    /** the preferred HTML display dialect name. */\n    DIALECT[\"PREFERHTML\"] = \"preferHtml\";\n    /** the strict HTML display dialect name. */\n    DIALECT[\"STRICTHTML\"] = \"strictHtml\";\n})(DIALECT || (DIALECT = {}));\n/**\n * Name of the field to be used to store the object ID. Default is\n * <code>mxObjectId</code>.\n */\nexport const IDENTITY_FIELD_NAME = 'mxObjectId';\n/**\n * Defines the SVG namespace.\n */\nexport const NS_SVG = 'http://www.w3.org/2000/svg';\n/**\n * Defines the XLink namespace.\n */\nexport const NS_XLINK = 'http://www.w3.org/1999/xlink';\n/** Default value of {@link StyleDefaultsConfig.shadowColor}. */\nexport const SHADOWCOLOR = 'gray';\n/** Default value of {@link StyleDefaultsConfig.shadowOffsetX}. */\nexport const SHADOW_OFFSET_X = 2;\n/** Default value of {@link StyleDefaultsConfig.shadowOffsetY}. */\nexport const SHADOW_OFFSET_Y = 3;\n/** Default value of {@link StyleDefaultsConfig.shadowOpacity}. */\nexport const SHADOW_OPACITY = 1;\nexport var NODETYPE;\n(function (NODETYPE) {\n    NODETYPE[NODETYPE[\"ELEMENT\"] = 1] = \"ELEMENT\";\n    NODETYPE[NODETYPE[\"ATTRIBUTE\"] = 2] = \"ATTRIBUTE\";\n    NODETYPE[NODETYPE[\"TEXT\"] = 3] = \"TEXT\";\n    NODETYPE[NODETYPE[\"CDATA\"] = 4] = \"CDATA\";\n    NODETYPE[NODETYPE[\"ENTITY_REFERENCE\"] = 5] = \"ENTITY_REFERENCE\";\n    NODETYPE[NODETYPE[\"ENTITY\"] = 6] = \"ENTITY\";\n    NODETYPE[NODETYPE[\"PROCESSING_INSTRUCTION\"] = 7] = \"PROCESSING_INSTRUCTION\";\n    NODETYPE[NODETYPE[\"COMMENT\"] = 8] = \"COMMENT\";\n    NODETYPE[NODETYPE[\"DOCUMENT\"] = 9] = \"DOCUMENT\";\n    NODETYPE[NODETYPE[\"DOCUMENTTYPE\"] = 10] = \"DOCUMENTTYPE\";\n    NODETYPE[NODETYPE[\"DOCUMENT_FRAGMENT\"] = 11] = \"DOCUMENT_FRAGMENT\";\n    NODETYPE[NODETYPE[\"NOTATION\"] = 12] = \"NOTATION\";\n})(NODETYPE || (NODETYPE = {}));\n/**\n * Defines the vertical offset for the tooltip.\n * Default is 16.\n */\nexport const TOOLTIP_VERTICAL_OFFSET = 16;\n/**\n * Specifies the default valid color. Default is #0000FF.\n */\nexport const DEFAULT_VALID_COLOR = '#00FF00';\n/**\n * Specifies the default invalid color. Default is #FF0000.\n */\nexport const DEFAULT_INVALID_COLOR = '#FF0000';\n/**\n * Specifies the default highlight color for shape outlines.\n * Default is #0000FF. This is used in {@link ConnectionHandler} and {@link EdgeHandler}.\n */\nexport const OUTLINE_HIGHLIGHT_COLOR = '#00FF00';\n/**\n * Defines the strokewidth to be used for shape outlines.\n * Default is 5. This is used in {@link ConnectionHandler} and {@link EdgeHandler}.\n */\nexport const OUTLINE_HIGHLIGHT_STROKEWIDTH = 5;\n/**\n * Defines the strokewidth to be used for the highlights.\n * Default is 3.\n */\nexport const HIGHLIGHT_STROKEWIDTH = 3;\n/**\n * Size of the constraint highlight (in px). Default is 2.\n */\nexport const HIGHLIGHT_SIZE = 2;\n/**\n * Opacity (in %) used for the highlights (including outline).\n * Default is 100.\n */\nexport const HIGHLIGHT_OPACITY = 100;\nexport var CURSOR;\n(function (CURSOR) {\n    /** Defines the cursor for a movable vertex. */\n    CURSOR[\"MOVABLE_VERTEX\"] = \"move\";\n    /** Defines the cursor for a movable edge. */\n    CURSOR[\"MOVABLE_EDGE\"] = \"move\";\n    /** Defines the cursor for a movable label. */\n    CURSOR[\"LABEL_HANDLE\"] = \"default\";\n    /** Defines the cursor for a terminal handle. */\n    CURSOR[\"TERMINAL_HANDLE\"] = \"pointer\";\n    /** Defines the cursor for a movable bend. */\n    CURSOR[\"BEND_HANDLE\"] = \"crosshair\";\n    /** Defines the cursor for a movable bend. */\n    CURSOR[\"VIRTUAL_BEND_HANDLE\"] = \"crosshair\";\n    /** Defines the cursor for a connectable state. */\n    CURSOR[\"CONNECT\"] = \"pointer\";\n})(CURSOR || (CURSOR = {}));\n/**\n * Defines the color to be used for the cell highlighting.\n * Use 'none' for no color. Default is #00FF00.\n */\n// TODO this constants is unused (it wasn't used in mxGraph as well)--> remove it (and all documentation references as well)\nexport const HIGHLIGHT_COLOR = '#00FF00';\n/**\n * Defines the color to be used for highlighting a target cell for a new\n * or changed connection. Note that this may be either a source or\n * target terminal in the graph. Use 'none' for no color.\n * Default is #0000FF.\n */\n// TODO this constants is unused (it wasn't used in mxGraph as well)--> remove it (and all documentation references as well)\nexport const CONNECT_TARGET_COLOR = '#0000FF';\n/**\n * Defines the color to be used for highlighting an invalid target cells\n * for a new or changed connections. Note that this may be either a source\n * or target terminal in the graph. Use 'none' for no color. Default is\n * #FF0000.\n */\nexport const INVALID_CONNECT_TARGET_COLOR = '#FF0000';\n/**\n * Defines the color to be used for the highlighting target parent cells\n * (for drag and drop). Use 'none' for no color. Default is #0000FF.\n */\nexport const DROP_TARGET_COLOR = '#0000FF';\n/**\n * Defines the color to be used for the coloring valid connection\n * previews. Use 'none' for no color. Default is #FF0000.\n */\nexport const VALID_COLOR = '#00FF00';\n/**\n * Defines the color to be used for the coloring invalid connection\n * previews. Use 'none' for no color. Default is #FF0000.\n */\nexport const INVALID_COLOR = '#FF0000';\n/**\n * Default value ('green' color) of {@link EdgeHandlerConfig.selectionColor}.\n */\nexport const EDGE_SELECTION_COLOR = '#00FF00';\n/**\n * Default value ('green' color) of {@link VertexHandlerConfig.selectionColor}.\n */\nexport const VERTEX_SELECTION_COLOR = '#00FF00';\n/**\n * Default value of {@link VertexHandlerConfig.selectionStrokeWidth}.\n */\nexport const VERTEX_SELECTION_STROKEWIDTH = 1;\n/**\n * Default value of {@link EdgeHandlerConfig.selectionStrokeWidth}.\n */\nexport const EDGE_SELECTION_STROKEWIDTH = 1;\n/**\n * Default value of {@link VertexHandlerConfig.selectionDashed}.\n */\nexport const VERTEX_SELECTION_DASHED = true;\n/**\n * Default value of {@link EdgeHandlerConfig.selectionDashed}.\n */\nexport const EDGE_SELECTION_DASHED = true;\n/**\n * Defines the color to be used for the guidelines in `Guide`.\n * @default #FF0000.\n */\nexport const GUIDE_COLOR = '#FF0000';\n/**\n * Defines the strokewidth to be used for the guidelines in `Guide`.\n * @default 1.\n */\nexport const GUIDE_STROKEWIDTH = 1;\n/**\n * Defines the color to be used for the outline rectangle\n * border.  Use 'none' for no color. Default is #0099FF.\n */\nexport const OUTLINE_COLOR = '#0099FF';\n/**\n * Defines the strokewidth to be used for the outline rectangle\n * stroke width. Default is 3.\n */\nexport const OUTLINE_STROKEWIDTH = 3;\n/**\n * Default value of {@link HandleConfig.size}.\n */\nexport const HANDLE_SIZE = 6;\n/**\n * Default value of {@link HandleConfig.labelSize}.\n */\nexport const LABEL_HANDLE_SIZE = 4;\n/**\n * Default value ('green' color) of {@link HandleConfig.fillColor}.\n */\nexport const HANDLE_FILLCOLOR = '#00FF00';\n/**\n * Default value of {@link HandleConfig.strokeColor}.\n */\nexport const HANDLE_STROKECOLOR = 'black';\n/**\n * Default value of {@link HandleConfig.labelFillColor}.\n */\nexport const LABEL_HANDLE_FILLCOLOR = 'yellow';\n/**\n * Default value ('blue' color) of {@link EdgeHandlerConfig.connectFillColor}.\n */\nexport const CONNECT_HANDLE_FILLCOLOR = '#0000FF';\n/**\n * Defines the color to be used for the locked handle fill color. Use\n * 'none' for no color. Default is #FF0000 (red).\n */\nexport const LOCKED_HANDLE_FILLCOLOR = '#FF0000';\n/**\n * Defines the color to be used for the outline sizer fill color. Use\n * 'none' for no color. Default is #00FFFF.\n */\nexport const OUTLINE_HANDLE_FILLCOLOR = '#00FFFF';\n/**\n * Defines the color to be used for the outline sizer stroke color. Use\n * 'none' for no color. Default is #0033FF.\n */\nexport const OUTLINE_HANDLE_STROKECOLOR = '#0033FF';\n/**\n * Defines the default family for all fonts. Default is Arial,Helvetica.\n */\nexport const DEFAULT_FONTFAMILY = 'Arial,Helvetica';\n/**\n * Defines the default size (in px). Default is 11.\n */\nexport const DEFAULT_FONTSIZE = 11;\n/**\n * Defines the default value for the <STYLE_TEXT_DIRECTION> if no value is\n * defined for it in the style. Default value is an empty string which means\n * the default system setting is used and no direction is set.\n */\nexport const DEFAULT_TEXT_DIRECTION = '';\n/**\n * Defines the default line height for text labels. Default is 1.2.\n */\nexport const LINE_HEIGHT = 1.2;\n/**\n * Defines the CSS value for the word-wrap property. Default is \"normal\".\n * Change this to \"break-word\" to allow long words to be able to be broken\n * and wrap onto the next line.\n */\nexport const WORD_WRAP = 'normal';\n/**\n * Specifies if absolute line heights should be used (px) in CSS. Default\n * is false. Set this to true for backwards compatibility.\n */\nexport const ABSOLUTE_LINE_HEIGHT = false;\n/**\n * Defines the default style for all fonts. Default is 0. This can be set\n * to any combination of font styles as follows.\n *\n * ```javascript\n * mxConstants.DEFAULT_FONTSTYLE = mxConstants.FONT_BOLD | mxConstants.FONT_ITALIC;\n * ```\n */\nexport const DEFAULT_FONTSTYLE = 0;\n/**\n * Defines the default start size for swimlanes. Default is 40.\n */\nexport const DEFAULT_STARTSIZE = 40;\n/**\n * Defines the default size for all markers. Default is 6.\n */\nexport const DEFAULT_MARKERSIZE = 6;\n/**\n * Defines the default width and height for images used in the\n * label shape. Default is 24.\n */\nexport const DEFAULT_IMAGESIZE = 24;\n/**\n * Defines the length of the horizontal segment of an `Entity Relation`.\n * This can be overridden using {@link CellStateStyle.segment} style.\n */\nexport const ENTITY_SEGMENT = 30;\n/**\n * Defines the default rounding factor for the rounded vertices in percent between\n * `0` and `1`. Values should be smaller than `0.5`.\n * See {@link CellStateStyle.arcSize}.\n */\nexport const RECTANGLE_ROUNDING_FACTOR = 0.15;\n/**\n * Defines the default size in pixels of the arcs for the rounded edges.\n * See {@link CellStateStyle.arcSize}.\n */\nexport const LINE_ARCSIZE = 20;\n/**\n * Defines the spacing between the arrow shape and its terminals. Default is 0.\n */\nexport const ARROW_SPACING = 0;\n/**\n * Defines the width of the arrow shape. Default is 30.\n */\nexport const ARROW_WIDTH = 30;\n/**\n * Defines the size of the arrowhead in the arrow shape. Default is 30.\n */\nexport const ARROW_SIZE = 30;\n/**\n * Defines the rectangle for the A4 portrait page format.\n * The dimensions of this page format are 827x1169 pixels.\n */\nexport const PAGE_FORMAT_A4_PORTRAIT = [0, 0, 827, 1169];\n/**\n * Defines the rectangle for the A4 landscape page format.\n * The dimensions of this page format are 1169x827 pixels.\n */\nexport const PAGE_FORMAT_A4_LANDSCAPE = [0, 0, 1169, 827];\n/**\n * Defines the rectangle for the Letter portrait page format.\n * The dimensions of this page format are 850x1100 pixels.\n */\n// It may not be used in @maxGraph/core for now, but helpful for users. So don't remove it.\nexport const PAGE_FORMAT_LETTER_PORTRAIT = [0, 0, 850, 1100];\n/**\n * Defines the rectangle for the Letter landscape page format.\n * The dimensions of this page format are 1100x850 pixels.\n */\n// It may not be used in @maxGraph/core for now, but helpful for users. So don't remove it.\nexport const PAGE_FORMAT_LETTER_LANDSCAPE = [0, 0, 1100, 850];\n/**\n * Defines the value for none. Default is \"none\".\n */\nexport const NONE = 'none';\nexport var FONT;\n(function (FONT) {\n    /** for bold fonts. */\n    FONT[FONT[\"BOLD\"] = 1] = \"BOLD\";\n    /** for italic fonts. */\n    FONT[FONT[\"ITALIC\"] = 2] = \"ITALIC\";\n    /** for underlined fonts. */\n    FONT[FONT[\"UNDERLINE\"] = 4] = \"UNDERLINE\";\n    /** for strikethrough fonts. */\n    FONT[FONT[\"STRIKETHROUGH\"] = 8] = \"STRIKETHROUGH\";\n})(FONT || (FONT = {}));\nexport var ARROW;\n(function (ARROW) {\n    /** for classic arrow markers. */\n    ARROW[\"CLASSIC\"] = \"classic\";\n    /** for thin classic arrow markers. */\n    ARROW[\"CLASSIC_THIN\"] = \"classicThin\";\n    /** for block arrow markers. */\n    ARROW[\"BLOCK\"] = \"block\";\n    /** for thin block arrow markers. */\n    ARROW[\"BLOCK_THIN\"] = \"blockThin\";\n    /** for open arrow markers. */\n    ARROW[\"OPEN\"] = \"open\";\n    /** for thin open arrow markers. */\n    ARROW[\"OPEN_THIN\"] = \"openThin\";\n    /** for oval arrow markers. */\n    ARROW[\"OVAL\"] = \"oval\";\n    /** for diamond arrow markers. */\n    ARROW[\"DIAMOND\"] = \"diamond\";\n    /** for thin diamond arrow markers. */\n    ARROW[\"DIAMOND_THIN\"] = \"diamondThin\";\n})(ARROW || (ARROW = {}));\nexport var ALIGN;\n(function (ALIGN) {\n    /** left horizontal alignment. */\n    ALIGN[\"LEFT\"] = \"left\";\n    /** center horizontal alignment. */\n    ALIGN[\"CENTER\"] = \"center\";\n    /** right horizontal alignment. */\n    ALIGN[\"RIGHT\"] = \"right\";\n    /** top vertical alignment. */\n    ALIGN[\"TOP\"] = \"top\";\n    /** middle vertical alignment. */\n    ALIGN[\"MIDDLE\"] = \"middle\";\n    /** bottom vertical alignment. */\n    ALIGN[\"BOTTOM\"] = \"bottom\";\n})(ALIGN || (ALIGN = {}));\nexport var DIRECTION;\n(function (DIRECTION) {\n    DIRECTION[\"NORTH\"] = \"north\";\n    DIRECTION[\"SOUTH\"] = \"south\";\n    DIRECTION[\"EAST\"] = \"east\";\n    DIRECTION[\"WEST\"] = \"west\";\n})(DIRECTION || (DIRECTION = {}));\nexport var TEXT_DIRECTION;\n(function (TEXT_DIRECTION) {\n    /**\n     * Use this value to use the default text direction of the operating system. */\n    TEXT_DIRECTION[\"DEFAULT\"] = \"\";\n    /** Use this value to find the direction for a given text with {@link Text#getAutoDirection}. */\n    TEXT_DIRECTION[\"AUTO\"] = \"auto\";\n    /** Use this value for left to right text direction. */\n    TEXT_DIRECTION[\"LTR\"] = \"ltr\";\n    /** Use this value for right to left text direction. */\n    TEXT_DIRECTION[\"RTL\"] = \"rtl\";\n})(TEXT_DIRECTION || (TEXT_DIRECTION = {}));\n/**\n * Bitwise mask for all directions.\n */\nexport const DIRECTION_MASK = {\n    /** No direction. */\n    NONE: 0,\n    WEST: 1,\n    NORTH: 2,\n    SOUTH: 4,\n    EAST: 8,\n    /** All directions. */\n    ALL: 15,\n};\n/**\n * Default is horizontal.\n */\nexport var ELBOW;\n(function (ELBOW) {\n    ELBOW[\"VERTICAL\"] = \"vertical\";\n    ELBOW[\"HORIZONTAL\"] = \"horizontal\";\n})(ELBOW || (ELBOW = {}));\n/**\n * Names used to register the edge styles (a.k.a. connectors) provided out-of-the-box by maxGraph with {@link StyleRegistry.putValue}.\n * Can be used as a value for {@link CellStateStyle.edgeStyle}.\n */\nexport var EDGESTYLE;\n(function (EDGESTYLE) {\n    EDGESTYLE[\"ELBOW\"] = \"elbowEdgeStyle\";\n    EDGESTYLE[\"ENTITY_RELATION\"] = \"entityRelationEdgeStyle\";\n    EDGESTYLE[\"LOOP\"] = \"loopEdgeStyle\";\n    EDGESTYLE[\"SIDETOSIDE\"] = \"sideToSideEdgeStyle\";\n    EDGESTYLE[\"TOPTOBOTTOM\"] = \"topToBottomEdgeStyle\";\n    EDGESTYLE[\"ORTHOGONAL\"] = \"orthogonalEdgeStyle\";\n    EDGESTYLE[\"SEGMENT\"] = \"segmentEdgeStyle\";\n    EDGESTYLE[\"MANHATTAN\"] = \"manhattanEdgeStyle\";\n})(EDGESTYLE || (EDGESTYLE = {}));\n/**\n * Names used to register the perimeters provided out-of-the-box by maxGraph with {@link StyleRegistry.putValue}.\n * Can be used as a value for {@link CellStateStyle.perimeter}.\n */\nexport var PERIMETER;\n(function (PERIMETER) {\n    PERIMETER[\"ELLIPSE\"] = \"ellipsePerimeter\";\n    PERIMETER[\"RECTANGLE\"] = \"rectanglePerimeter\";\n    PERIMETER[\"RHOMBUS\"] = \"rhombusPerimeter\";\n    PERIMETER[\"HEXAGON\"] = \"hexagonPerimeter\";\n    PERIMETER[\"TRIANGLE\"] = \"trianglePerimeter\";\n})(PERIMETER || (PERIMETER = {}));\n/**\n * Names used to register the shapes provided out-of-the-box by maxGraph with {@link CellRenderer.registerShape}.\n * Can be used as a value for {@link CellStateStyle.shape}.\n */\nexport var SHAPE;\n(function (SHAPE) {\n    /**\n     * Name under which {@link RectangleShape} is registered.\n     */\n    SHAPE[\"RECTANGLE\"] = \"rectangle\";\n    /**\n     * Name under which {@link Ellipse} is registered.\n     */\n    SHAPE[\"ELLIPSE\"] = \"ellipse\";\n    /**\n     * Name under which {@link DoubleEllipse} is registered.\n     */\n    SHAPE[\"DOUBLE_ELLIPSE\"] = \"doubleEllipse\";\n    /**\n     * Name under which {@link Rhombus} is registered.\n     */\n    SHAPE[\"RHOMBUS\"] = \"rhombus\";\n    /**\n     * Name under which {@link LineShape} is registered.\n     */\n    SHAPE[\"LINE\"] = \"line\";\n    /**\n     * Name under which {@link ImageShape} is registered.\n     */\n    SHAPE[\"IMAGE\"] = \"image\";\n    /**\n     * Name under which {@link ArrowShape} is registered.\n     */\n    SHAPE[\"ARROW\"] = \"arrow\";\n    /**\n     * Name under which {@link ArrowConnectorShape} is registered.\n     */\n    SHAPE[\"ARROW_CONNECTOR\"] = \"arrowConnector\";\n    /**\n     * Name under which {@link Label} is registered.\n     */\n    SHAPE[\"LABEL\"] = \"label\";\n    /**\n     * Name under which {@link Cylinder} is registered.\n     */\n    SHAPE[\"CYLINDER\"] = \"cylinder\";\n    /**\n     * Name under which {@link Swimlane} is registered.\n     */\n    SHAPE[\"SWIMLANE\"] = \"swimlane\";\n    /**\n     * Name under which {@link ConnectorShape} is registered.\n     */\n    SHAPE[\"CONNECTOR\"] = \"connector\";\n    /**\n     * Name under which {@link Actor} is registered.\n     */\n    SHAPE[\"ACTOR\"] = \"actor\";\n    /**\n     * Name under which {@link Cloud} is registered.\n     */\n    SHAPE[\"CLOUD\"] = \"cloud\";\n    /**\n     * Name under which {@link Triangle} is registered.\n     */\n    SHAPE[\"TRIANGLE\"] = \"triangle\";\n    /**\n     * Name under which {@link Hexagon} is registered.\n     */\n    SHAPE[\"HEXAGON\"] = \"hexagon\";\n})(SHAPE || (SHAPE = {}));\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/EventUtils.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Client from '../Client';\n/**\n * Returns the touch or mouse event that contains the mouse coordinates.\n */\nexport const getMainEvent = (evt) => {\n    let t = evt;\n    if ((t.type === 'touchstart' || t.type === 'touchmove') && t.touches && t.touches[0]) {\n        t = t.touches[0];\n    }\n    else if (t.type === 'touchend' && t.changedTouches && t.changedTouches[0]) {\n        t = t.changedTouches[0];\n    }\n    return t;\n};\n/**\n * Returns true if the meta key is pressed for the given event.\n */\nexport const getClientX = (evt) => {\n    return getMainEvent(evt).clientX;\n};\n/**\n * Returns true if the meta key is pressed for the given event.\n */\n// static getClientY(e: TouchEvent | MouseEvent): number;\nexport const getClientY = (evt) => {\n    return getMainEvent(evt).clientY;\n};\n/**\n * Returns the event's target or srcElement depending on the browser.\n */\nexport const getSource = (evt) => {\n    return evt.target;\n};\n/**\n * Returns true if the event has been consumed using {@link consume}.\n */\nexport const isConsumed = (evt) => {\n    const t = evt;\n    return t.isConsumed !== undefined && t.isConsumed;\n};\n/**\n * Returns true if the event was generated using a touch device (not a pen or mouse).\n */\nexport const isTouchEvent = (evt) => {\n    const t = evt;\n    return t.pointerType\n        ? t.pointerType === 'touch' || t.pointerType === t.MSPOINTER_TYPE_TOUCH\n        : t.mozInputSource !== undefined\n            ? t.mozInputSource === 5\n            : t.type.indexOf('touch') === 0;\n};\n/**\n * Returns true if the event was generated using a pen (not a touch device or mouse).\n */\nexport const isPenEvent = (evt) => {\n    const t = evt;\n    return t.pointerType\n        ? t.pointerType == 'pen' || t.pointerType === t.MSPOINTER_TYPE_PEN\n        : t.mozInputSource !== undefined\n            ? t.mozInputSource === 2\n            : t.type.indexOf('pen') === 0;\n};\n/**\n * Returns true if the event was generated using a touch device (not a pen or mouse).\n */\nexport const isMultiTouchEvent = (evt) => {\n    const t = evt;\n    return (t.type &&\n        t.type.indexOf('touch') == 0 &&\n        t.touches !== undefined &&\n        t.touches.length > 1);\n};\n/**\n * Returns true if the event was generated using a mouse (not a pen or touch device).\n */\nexport const isMouseEvent = (evt) => {\n    const t = evt;\n    return t.pointerType\n        ? t.pointerType == 'mouse' || t.pointerType === t.MSPOINTER_TYPE_MOUSE\n        : t.mozInputSource !== undefined\n            ? t.mozInputSource === 1\n            : t.type.indexOf('mouse') === 0;\n};\n/**\n * Returns true if the left mouse button is pressed for the given event.\n * To check if a button is pressed during a mouseMove you should use the\n * {@link mxGraph.isMouseDown} property. Note that this returns true in Firefox\n * for control+left-click on the Mac.\n */\n// static isLeftMouseButton(evt: MouseEvent): boolean;\nexport const isLeftMouseButton = (evt) => {\n    // Special case for mousemove and mousedown we check the buttons\n    // if it exists because which is 0 even if no button is pressed\n    if ('buttons' in evt && (evt.type === 'mousedown' || evt.type === 'mousemove')) {\n        return evt.buttons === 1;\n    }\n    if (evt.which !== undefined) {\n        return evt.which === 1;\n    }\n    return evt.button === 1;\n};\n/**\n * Returns true if the middle mouse button is pressed for the given event.\n * To check if a button is pressed during a mouseMove you should use the\n * {@link mxGraph.isMouseDown} property.\n */\nexport const isMiddleMouseButton = (evt) => {\n    return evt.button === 4;\n};\n/**\n * Returns true if the right mouse button was pressed. Note that this\n * button might not be available on some systems. For handling a popup\n * trigger {@link isPopupTrigger} should be used.\n */\nexport const isRightMouseButton = (evt) => {\n    return evt.button === 2;\n};\n/**\n * Returns true if the event is a popup trigger. This implementation\n * returns true if the right button or the left button and control was\n * pressed on a Mac.\n */\nexport const isPopupTrigger = (evt) => {\n    return (isRightMouseButton(evt) ||\n        (Client.IS_MAC &&\n            isControlDown(evt) &&\n            !isShiftDown(evt) &&\n            !isMetaDown(evt) &&\n            !isAltDown(evt)));\n};\n/**\n * Returns true if the shift key is pressed for the given event.\n */\nexport const isShiftDown = (evt) => {\n    return evt.shiftKey;\n};\n/**\n * Returns true if the alt key is pressed for the given event.\n */\nexport const isAltDown = (evt) => {\n    return evt.altKey;\n};\n/**\n * Returns true if the control key is pressed for the given event.\n */\nexport const isControlDown = (evt) => {\n    return evt.ctrlKey;\n};\n/**\n * Returns true if the meta key is pressed for the given event.\n */\nexport const isMetaDown = (evt) => {\n    return evt.metaKey;\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcA;;;;;;;;;;;;;;;;;;;AACA;;AAIO,MAAM,eAAe,CAAC;IACzB,IAAI,IAAI;IACR,IAAI,CAAC,EAAE,IAAI,KAAK,gBAAgB,EAAE,IAAI,KAAK,WAAW,KAAK,EAAE,OAAO,IAAI,EAAE,OAAO,CAAC,EAAE,EAAE;QAClF,IAAI,EAAE,OAAO,CAAC,EAAE;IACpB,OACK,IAAI,EAAE,IAAI,KAAK,cAAc,EAAE,cAAc,IAAI,EAAE,cAAc,CAAC,EAAE,EAAE;QACvE,IAAI,EAAE,cAAc,CAAC,EAAE;IAC3B;IACA,OAAO;AACX;AAIO,MAAM,aAAa,CAAC;IACvB,OAAO,aAAa,KAAK,OAAO;AACpC;AAKO,MAAM,aAAa,CAAC;IACvB,OAAO,aAAa,KAAK,OAAO;AACpC;AAIO,MAAM,YAAY,CAAC;IACtB,OAAO,IAAI,MAAM;AACrB;AAIO,MAAM,aAAa,CAAC;IACvB,MAAM,IAAI;IACV,OAAO,EAAE,UAAU,KAAK,aAAa,EAAE,UAAU;AACrD;AAIO,MAAM,eAAe,CAAC;IACzB,MAAM,IAAI;IACV,OAAO,EAAE,WAAW,GACd,EAAE,WAAW,KAAK,WAAW,EAAE,WAAW,KAAK,EAAE,oBAAoB,GACrE,EAAE,cAAc,KAAK,YACjB,EAAE,cAAc,KAAK,IACrB,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;AAC1C;AAIO,MAAM,aAAa,CAAC;IACvB,MAAM,IAAI;IACV,OAAO,EAAE,WAAW,GACd,EAAE,WAAW,IAAI,SAAS,EAAE,WAAW,KAAK,EAAE,kBAAkB,GAChE,EAAE,cAAc,KAAK,YACjB,EAAE,cAAc,KAAK,IACrB,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;AACxC;AAIO,MAAM,oBAAoB,CAAC;IAC9B,MAAM,IAAI;IACV,OAAQ,EAAE,IAAI,IACV,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,KAC3B,EAAE,OAAO,KAAK,aACd,EAAE,OAAO,CAAC,MAAM,GAAG;AAC3B;AAIO,MAAM,eAAe,CAAC;IACzB,MAAM,IAAI;IACV,OAAO,EAAE,WAAW,GACd,EAAE,WAAW,IAAI,WAAW,EAAE,WAAW,KAAK,EAAE,oBAAoB,GACpE,EAAE,cAAc,KAAK,YACjB,EAAE,cAAc,KAAK,IACrB,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;AAC1C;AAQO,MAAM,oBAAoB,CAAC;IAC9B,gEAAgE;IAChE,+DAA+D;IAC/D,IAAI,aAAa,OAAO,CAAC,IAAI,IAAI,KAAK,eAAe,IAAI,IAAI,KAAK,WAAW,GAAG;QAC5E,OAAO,IAAI,OAAO,KAAK;IAC3B;IACA,IAAI,IAAI,KAAK,KAAK,WAAW;QACzB,OAAO,IAAI,KAAK,KAAK;IACzB;IACA,OAAO,IAAI,MAAM,KAAK;AAC1B;AAMO,MAAM,sBAAsB,CAAC;IAChC,OAAO,IAAI,MAAM,KAAK;AAC1B;AAMO,MAAM,qBAAqB,CAAC;IAC/B,OAAO,IAAI,MAAM,KAAK;AAC1B;AAMO,MAAM,iBAAiB,CAAC;IAC3B,OAAQ,mBAAmB,QACtB,mJAAA,CAAA,UAAM,CAAC,MAAM,IACV,cAAc,QACd,CAAC,YAAY,QACb,CAAC,WAAW,QACZ,CAAC,UAAU;AACvB;AAIO,MAAM,cAAc,CAAC;IACxB,OAAO,IAAI,QAAQ;AACvB;AAIO,MAAM,YAAY,CAAC;IACtB,OAAO,IAAI,MAAM;AACrB;AAIO,MAAM,gBAAgB,CAAC;IAC1B,OAAO,IAAI,OAAO;AACtB;AAIO,MAAM,aAAa,CAAC;IACvB,OAAO,IAAI,OAAO;AACtB","ignoreList":[0]}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 471, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/domUtils.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { NODETYPE } from './Constants';\n/**\n * Returns the text content of the specified node.\n *\n * @param elems DOM nodes to return the text for.\n */\nexport const extractTextWithWhitespace = (elems) => {\n    // Known block elements for handling linefeeds (list is not complete)\n    const blocks = [\n        'BLOCKQUOTE',\n        'DIV',\n        'H1',\n        'H2',\n        'H3',\n        'H4',\n        'H5',\n        'H6',\n        'OL',\n        'P',\n        'PRE',\n        'TABLE',\n        'UL',\n    ];\n    const ret = [];\n    function doExtract(elts) {\n        // Single break should be ignored\n        if (elts.length == 1 && (elts[0].nodeName == 'BR' || elts[0].innerHTML == '\\n')) {\n            return;\n        }\n        for (let i = 0; i < elts.length; i += 1) {\n            const elem = elts[i];\n            // DIV with a br or linefeed forces a linefeed\n            if (elem.nodeName == 'BR' ||\n                elem.innerHTML == '\\n' ||\n                ((elts.length == 1 || i == 0) &&\n                    elem.nodeName == 'DIV' &&\n                    elem.innerHTML.toLowerCase() == '<br>')) {\n                ret.push('\\n');\n            }\n            else {\n                if (elem.nodeType === 3 || elem.nodeType === 4) {\n                    if (elem.nodeValue && elem.nodeValue.length > 0) {\n                        ret.push(elem.nodeValue);\n                    }\n                }\n                else if (elem.nodeType !== 8 && elem.childNodes.length > 0) {\n                    doExtract(Array.from(elem.childNodes));\n                }\n                if (i < elts.length - 1 && blocks.indexOf(elts[i + 1].nodeName) >= 0) {\n                    ret.push('\\n');\n                }\n            }\n        }\n    }\n    doExtract(elems);\n    return ret.join('');\n};\n/**\n * Returns the text content of the specified node.\n *\n * @param node DOM node to return the text content for.\n */\nexport const getTextContent = (node) => {\n    return node != null && node.textContent ? node.textContent : '';\n};\n/**\n * Sets the text content of the specified node.\n *\n * @param node DOM node to set the text content for.\n * @param text String that represents the text content.\n */\nexport const setTextContent = (node, text) => {\n    if ('innerText' in node) {\n        node.innerText = text;\n    }\n    else {\n        node.textContent = text;\n    }\n};\n/**\n * Returns the inner HTML for the given node as a string or an empty string\n * if no node was specified. The inner HTML is the text representing all\n * children of the node, but not the node itself.\n *\n * @param node DOM node to return the inner HTML for.\n */\nexport const getInnerHtml = (node) => {\n    if (node != null) {\n        const serializer = new XMLSerializer();\n        return serializer.serializeToString(node);\n    }\n    return '';\n};\n/**\n * Returns the outer HTML for the given node as a string or an empty\n * string if no node was specified. The outer HTML is the text representing\n * all children of the node including the node itself.\n *\n * @param node DOM node to return the outer HTML for.\n */\nexport const getOuterHtml = (node) => {\n    if (node != null) {\n        const serializer = new XMLSerializer();\n        return serializer.serializeToString(node);\n    }\n    return '';\n};\n/**\n * Creates a text node for the given string and appends it to the given\n * parent. Returns the text node.\n *\n * @param parent DOM node to append the text node to.\n * @param text String representing the text to be added.\n */\nexport const write = (parent, text) => {\n    const doc = parent.ownerDocument;\n    const node = doc.createTextNode(text);\n    if (parent != null) {\n        parent.appendChild(node);\n    }\n    return node;\n};\n/**\n * Creates a text node for the given string and appends it to the given\n * parent with an additional linefeed. Returns the text node.\n *\n * @param parent DOM node to append the text node to.\n * @param text String representing the text to be added.\n */\nexport const writeln = (parent, text) => {\n    const doc = parent.ownerDocument;\n    const node = doc.createTextNode(text);\n    if (parent != null) {\n        parent.appendChild(node);\n        parent.appendChild(document.createElement('br'));\n    }\n    return node;\n};\n/**\n * Appends a linebreak to the given parent and returns the linebreak.\n *\n * @param parent DOM node to append the linebreak to.\n */\nexport const br = (parent, count = 1) => {\n    let br = null;\n    for (let i = 0; i < count; i += 1) {\n        if (parent != null) {\n            br = parent.ownerDocument.createElement('br');\n            parent.appendChild(br);\n        }\n    }\n    return br;\n};\n/**\n * Appends a new paragraph with the given text to the specified parent and\n * returns the paragraph.\n *\n * @param parent DOM node to append the text node to.\n * @param text String representing the text for the new paragraph.\n */\nexport const para = (parent, text) => {\n    const p = document.createElement('p');\n    write(p, text);\n    if (parent != null) {\n        parent.appendChild(p);\n    }\n    return p;\n};\n/**\n * Returns true if the given value is an XML node with the node name\n * and if the optional attribute has the specified value.\n *\n * This implementation assumes that the given value is a DOM node if the\n * nodeType property is numeric, that is, if isNaN returns false for\n * value.nodeType.\n *\n * @param value Object that should be examined as a node.\n * @param nodeName String that specifies the node name.\n * @param attributeName Optional attribute name to check.\n * @param attributeValue Optional attribute value to check.\n */\nexport const isNode = (value, nodeName = null, attributeName, attributeValue) => {\n    if (value != null &&\n        !isNaN(value.nodeType) &&\n        (nodeName == null || value.nodeName.toLowerCase() == nodeName.toLowerCase())) {\n        return attributeName == null || value.getAttribute(attributeName) == attributeValue;\n    }\n    return false;\n};\n/**\n * Returns true if the given ancestor is an ancestor of the\n * given DOM node in the DOM. This also returns true if the\n * child is the ancestor.\n *\n * @param ancestor DOM node that represents the ancestor.\n * @param child DOM node that represents the child.\n */\nexport const isAncestorNode = (ancestor, child) => {\n    let parent = child;\n    while (parent != null) {\n        if (parent === ancestor) {\n            return true;\n        }\n        parent = parent.parentNode;\n    }\n    return false;\n};\n/**\n * Returns an array of child nodes that are of the given node type.\n *\n * @param node Parent DOM node to return the children from.\n * @param nodeType Optional node type to return. Default is\n * {@link Constants#NODETYPE_ELEMENT}.\n */\nexport const getChildNodes = (node, nodeType = NODETYPE.ELEMENT) => {\n    nodeType = nodeType || NODETYPE.ELEMENT;\n    const children = [];\n    let tmp = node.firstChild;\n    while (tmp != null) {\n        if (tmp.nodeType === nodeType) {\n            children.push(tmp);\n        }\n        tmp = tmp.nextSibling;\n    }\n    return children;\n};\n/**\n * Cross browser implementation for document.importNode. Uses document.importNode\n * in all browsers but IE, where the node is cloned by creating a new node and\n * copying all attributes and children into it using importNode, recursively.\n *\n * @param doc Document to import the node into.\n * @param node Node to be imported.\n * @param allChildren If all children should be imported.\n */\nexport const importNode = (doc, node, allChildren) => {\n    return doc.importNode(node, allChildren);\n};\n/**\n * Full DOM API implementation for importNode without using importNode API call.\n *\n * @param doc Document to import the node into.\n * @param node Node to be imported.\n * @param allChildren If all children should be imported.\n */\nexport const importNodeImplementation = (doc, node, allChildren) => {\n    switch (node.nodeType) {\n        case 1 /* element */: {\n            const newNode = doc.createElement(node.nodeName);\n            if (node.attributes && node.attributes.length > 0) {\n                for (let i = 0; i < node.attributes.length; i += 1) {\n                    newNode.setAttribute(node.attributes[i].nodeName, node.getAttribute(node.attributes[i].nodeName));\n                }\n            }\n            if (allChildren && node.childNodes && node.childNodes.length > 0) {\n                for (let i = 0; i < node.childNodes.length; i += 1) {\n                    newNode.appendChild(importNodeImplementation(doc, node.childNodes[i], allChildren));\n                }\n            }\n            return newNode;\n            break;\n        }\n        case 3: /* text */\n        case 4: /* cdata-section */\n        case 8 /* comment */: {\n            return doc.createTextNode(node.nodeValue || '');\n            break;\n        }\n    }\n};\n/**\n * Clears the current selection in the page.\n */\nexport const clearSelection = () => {\n    // @ts-ignore\n    const sel = window.getSelection ? window.getSelection() : document.selection;\n    if (sel) {\n        if (sel.removeAllRanges) {\n            sel.removeAllRanges();\n        }\n        else if (sel.empty) {\n            sel.empty();\n        }\n    }\n};\n/**\n * Creates and returns an image (IMG node) or VML image (v:image) in IE6 in\n * quirks mode.\n *\n * @param src URL that points to the image to be displayed.\n */\nexport const createImage = (src) => {\n    let imageNode = null;\n    imageNode = document.createElement('img');\n    imageNode.setAttribute('src', src);\n    imageNode.setAttribute('border', '0');\n    return imageNode;\n};\n/**\n * Adds a link node to the head of the document.\n *\n * The charset is hardcoded to `UTF-8` and the type is `text/css`.\n *\n * @param rel String that represents the rel attribute of the link node.\n * @param href String that represents the href attribute of the link node.\n * @param doc Optional parent document of the link node.\n * @param id unique id for the link element to check if it already exists\n */\nexport const addLinkToHead = (rel, href, doc = null, id = null) => {\n    doc = doc || document;\n    // Workaround for Operation Aborted in IE6 if base tag is used in head\n    const link = doc.createElement('link');\n    link.setAttribute('rel', rel);\n    link.setAttribute('href', href);\n    link.setAttribute('charset', 'UTF-8');\n    link.setAttribute('type', 'text/css');\n    if (id) {\n        link.setAttribute('id', id);\n    }\n    const head = doc.getElementsByTagName('head')[0];\n    head.appendChild(link);\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 700, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 706, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/logger.js"],"sourcesContent":["/*\nCopyright 2024-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { getElapseMillisecondsMessage } from './Utils';\n/**\n * A {@link Logger} that does nothing.\n *\n * @experimental subject to change or removal. The logging system may be modified in the future without prior notice.\n * @since 0.11.0\n * @category Logging\n */\nexport class NoOpLogger {\n    debug(_message) { }\n    enter(_message) {\n        return undefined;\n    }\n    error(_message, ..._optionalParams) { }\n    info(_message) { }\n    leave(_message, _baseTimestamp) { }\n    show() { }\n    trace(_message) { }\n    warn(_message) { }\n}\n/**\n * A {@link Logger} that directs logs to the browser console.\n *\n * @experimental subject to change or removal. The logging system may be modified in the future without prior notice.\n * @since 0.11.0\n * @category Logging\n */\nexport class ConsoleLogger {\n    constructor() {\n        this.debugEnabled = false;\n        this.infoEnabled = false;\n        this.traceEnabled = false;\n    }\n    /* eslint-disable no-console -- we must use \"console\" to direct logs to the browser console */\n    enter(message) {\n        if (this.traceEnabled) {\n            console.trace(`Entering ${message}`);\n            return new Date().getTime();\n        }\n    }\n    leave(message, baseTimestamp) {\n        if (this.traceEnabled) {\n            const dt = getElapseMillisecondsMessage(baseTimestamp);\n            console.trace(`Leaving ${message}${dt}`);\n        }\n    }\n    show() { }\n    trace(message) {\n        if (this.traceEnabled) {\n            console.trace(message);\n        }\n    }\n    debug(message) {\n        if (this.debugEnabled) {\n            console.debug(message);\n        }\n    }\n    info(message) {\n        if (this.infoEnabled) {\n            console.info(message);\n        }\n    }\n    warn(message) {\n        console.warn(message);\n    }\n    error(message, ...optionalParams) {\n        console.error(message, ...optionalParams);\n    }\n}\n/* eslint-enable no-console */\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcA;;;;AACA;;AAQO,MAAM;IACT,MAAM,QAAQ,EAAE,CAAE;IAClB,MAAM,QAAQ,EAAE;QACZ,OAAO;IACX;IACA,MAAM,QAAQ,EAAE,GAAG,eAAe,EAAE,CAAE;IACtC,KAAK,QAAQ,EAAE,CAAE;IACjB,MAAM,QAAQ,EAAE,cAAc,EAAE,CAAE;IAClC,OAAO,CAAE;IACT,MAAM,QAAQ,EAAE,CAAE;IAClB,KAAK,QAAQ,EAAE,CAAE;AACrB;AAQO,MAAM;IACT,aAAc;QACV,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,YAAY,GAAG;IACxB;IACA,4FAA4F,GAC5F,MAAM,OAAO,EAAE;QACX,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,QAAQ,KAAK,CAAC,CAAC,SAAS,EAAE,SAAS;YACnC,OAAO,IAAI,OAAO,OAAO;QAC7B;IACJ;IACA,MAAM,OAAO,EAAE,aAAa,EAAE;QAC1B,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,MAAM,KAAK,CAAA,GAAA,0JAAA,CAAA,+BAA4B,AAAD,EAAE;YACxC,QAAQ,KAAK,CAAC,CAAC,QAAQ,EAAE,UAAU,IAAI;QAC3C;IACJ;IACA,OAAO,CAAE;IACT,MAAM,OAAO,EAAE;QACX,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,QAAQ,KAAK,CAAC;QAClB;IACJ;IACA,MAAM,OAAO,EAAE;QACX,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,QAAQ,KAAK,CAAC;QAClB;IACJ;IACA,KAAK,OAAO,EAAE;QACV,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,QAAQ,IAAI,CAAC;QACjB;IACJ;IACA,KAAK,OAAO,EAAE;QACV,QAAQ,IAAI,CAAC;IACjB;IACA,MAAM,OAAO,EAAE,GAAG,cAAc,EAAE;QAC9B,QAAQ,KAAK,CAAC,YAAY;IAC9B;AACJ,EACA,4BAA4B","ignoreList":[0]}},
    {"offset": {"line": 779, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 785, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/StringUtils.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { NODETYPE, NONE } from './Constants';\nimport { getTextContent } from './domUtils';\n/**\n * Strips all whitespaces from the beginning of the string. Without the\n * second parameter, this will trim these characters:\n *\n * - \" \" (ASCII 32 (0x20)), an ordinary space\n * - \"\\t\" (ASCII 9 (0x09)), a tab\n * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n */\nexport const ltrim = (str, chars = '\\\\s') => str != null ? str.replace(new RegExp(`^[${chars}]+`, 'g'), '') : null;\n/**\n * Strips all whitespaces from the end of the string. Without the second\n * parameter, this will trim these characters:\n *\n * - \" \" (ASCII 32 (0x20)), an ordinary space\n * - \"\\t\" (ASCII 9 (0x09)), a tab\n * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n */\nexport const rtrim = (str, chars = '\\\\s') => str != null ? str.replace(new RegExp(`[${chars}]+$`, 'g'), '') : null;\n/**\n * Strips all whitespaces from both end of the string.\n * Without the second parameter, Javascript function will trim these\n * characters:\n *\n * - \" \" (ASCII 32 (0x20)), an ordinary space\n * - \"\\t\" (ASCII 9 (0x09)), a tab\n * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n */\nexport const trim = (str, chars) => ltrim(rtrim(str, chars), chars);\n/**\n * Returns the name for the given function.\n *\n * @param f JavaScript object that represents a function.\n */\nexport const getFunctionName = (f) => {\n    let str = null;\n    if (f != null) {\n        if (f.name != null) {\n            str = f.name;\n        }\n        else {\n            str = trim(f.toString());\n            if (str !== null && /^function\\s/.test(str)) {\n                str = ltrim(str.substring(9));\n                if (str !== null) {\n                    const idx2 = str.indexOf('(');\n                    if (idx2 > 0) {\n                        str = str.substring(0, idx2);\n                    }\n                }\n            }\n        }\n    }\n    return str;\n};\n/**\n * Replaces each trailing newline with the given pattern.\n */\nexport const replaceTrailingNewlines = (str, pattern) => {\n    // LATER: Check is this can be done with a regular expression\n    let postfix = '';\n    while (str.length > 0 && str.charAt(str.length - 1) == '\\n') {\n        str = str.substring(0, str.length - 1);\n        postfix += pattern;\n    }\n    return str + postfix;\n};\n/**\n * Removes the sibling text nodes for the given node that only consists\n * of tabs, newlines and spaces.\n *\n * @param node DOM node whose siblings should be removed.\n * @param before Optional boolean that specifies the direction of the traversal.\n */\nexport const removeWhitespace = (node, before) => {\n    let tmp = before ? node.previousSibling : node.nextSibling;\n    while (tmp != null && tmp.nodeType === NODETYPE.TEXT) {\n        const next = before ? tmp.previousSibling : tmp.nextSibling;\n        const text = getTextContent(tmp);\n        if (trim(text)?.length === 0) {\n            tmp.parentNode?.removeChild(tmp);\n        }\n        tmp = next;\n    }\n};\n/**\n * Replaces characters (less than, greater than, newlines and quotes) with\n * their HTML entities in the given string and returns the result.\n *\n * @param s String that contains the characters to be converted.\n * @param newline If newlines should be replaced. Default is `true`.\n */\nexport const htmlEntities = (s, newline = true) => {\n    s = String(s || '');\n    s = s.replace(/&/g, '&amp;'); // 38 26\n    s = s.replace(/\"/g, '&quot;'); // 34 22\n    s = s.replace(/'/g, '&#39;'); // 39 27\n    s = s.replace(/</g, '&lt;'); // 60 3C\n    s = s.replace(/>/g, '&gt;'); // 62 3E\n    if (newline) {\n        s = s.replace(/\\n/g, '&#xa;');\n    }\n    return s;\n};\nexport const getStringValue = (array, key, defaultValue) => {\n    let value = array != null ? array[key] : null;\n    if (value == null) {\n        value = defaultValue;\n    }\n    return value == null ? null : String(value);\n};\n/**\n * Returns the numeric value for the given key in the given associative\n * array or the given default value (or 0) if the value is null. The value\n * is converted to a numeric value using the Number function.\n *\n * @param array Associative array that contains the value for the key.\n * @param key Key whose value should be returned.\n * @param defaultValue Value to be returned if the value for the given\n * key is null. Default is 0.\n */\nexport const getNumber = (array, key, defaultValue) => {\n    let value = array != null ? array[key] : null;\n    if (value == null) {\n        value = defaultValue || 0;\n    }\n    return Number(value);\n};\n/**\n * Returns the color value for the given key in the given associative\n * array or the given default value if the value is null. If the value\n * is {@link Constants#NONE} then null is returned.\n *\n * @param array Associative array that contains the value for the key.\n * @param key Key whose value should be returned.\n * @param defaultValue Value to be returned if the value for the given\n * key is null. Default is null.\n */\nexport const getColor = (array, key, defaultValue) => {\n    let value = array != null ? array[key] : null;\n    if (value == null) {\n        value = defaultValue;\n    }\n    else if (value === NONE) {\n        value = null;\n    }\n    return value;\n};\n/**\n * Returns a textual representation of the specified object.\n *\n * @param obj Object to return the string representation for.\n */\nexport const toString = (obj) => {\n    let output = '';\n    for (const i in obj) {\n        try {\n            if (obj[i] == null) {\n                output += `${i} = [null]\\n`;\n            }\n            else if (typeof obj[i] === 'function') {\n                output += `${i} => [Function]\\n`;\n            }\n            else if (typeof obj[i] === 'object') {\n                const ctor = getFunctionName(obj[i].constructor);\n                output += `${i} => [${ctor}]\\n`;\n            }\n            else {\n                output += `${i} = ${obj[i]}\\n`;\n            }\n        }\n        catch (e) {\n            output += `${i}=${e.message}`;\n        }\n    }\n    return output;\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcA;;;;;;;;;;;;;AACA;AACA;;;AAYO,MAAM,QAAQ,CAAC,KAAK,QAAQ,KAAK,GAAK,OAAO,OAAO,IAAI,OAAO,CAAC,IAAI,OAAO,CAAC,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,MAAM;AAYvG,MAAM,QAAQ,CAAC,KAAK,QAAQ,KAAK,GAAK,OAAO,OAAO,IAAI,OAAO,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,MAAM,MAAM;AAavG,MAAM,OAAO,CAAC,KAAK,QAAU,MAAM,MAAM,KAAK,QAAQ;AAMtD,MAAM,kBAAkB,CAAC;IAC5B,IAAI,MAAM;IACV,IAAI,KAAK,MAAM;QACX,IAAI,EAAE,IAAI,IAAI,MAAM;YAChB,MAAM,EAAE,IAAI;QAChB,OACK;YACD,MAAM,KAAK,EAAE,QAAQ;YACrB,IAAI,QAAQ,QAAQ,cAAc,IAAI,CAAC,MAAM;gBACzC,MAAM,MAAM,IAAI,SAAS,CAAC;gBAC1B,IAAI,QAAQ,MAAM;oBACd,MAAM,OAAO,IAAI,OAAO,CAAC;oBACzB,IAAI,OAAO,GAAG;wBACV,MAAM,IAAI,SAAS,CAAC,GAAG;oBAC3B;gBACJ;YACJ;QACJ;IACJ;IACA,OAAO;AACX;AAIO,MAAM,0BAA0B,CAAC,KAAK;IACzC,6DAA6D;IAC7D,IAAI,UAAU;IACd,MAAO,IAAI,MAAM,GAAG,KAAK,IAAI,MAAM,CAAC,IAAI,MAAM,GAAG,MAAM,KAAM;QACzD,MAAM,IAAI,SAAS,CAAC,GAAG,IAAI,MAAM,GAAG;QACpC,WAAW;IACf;IACA,OAAO,MAAM;AACjB;AAQO,MAAM,mBAAmB,CAAC,MAAM;IACnC,IAAI,MAAM,SAAS,KAAK,eAAe,GAAG,KAAK,WAAW;IAC1D,MAAO,OAAO,QAAQ,IAAI,QAAQ,KAAK,8JAAA,CAAA,WAAQ,CAAC,IAAI,CAAE;QAClD,MAAM,OAAO,SAAS,IAAI,eAAe,GAAG,IAAI,WAAW;QAC3D,MAAM,OAAO,CAAA,GAAA,6JAAA,CAAA,iBAAc,AAAD,EAAE;QAC5B,IAAI,KAAK,OAAO,WAAW,GAAG;YAC1B,IAAI,UAAU,EAAE,YAAY;QAChC;QACA,MAAM;IACV;AACJ;AAQO,MAAM,eAAe,CAAC,GAAG,UAAU,IAAI;IAC1C,IAAI,OAAO,KAAK;IAChB,IAAI,EAAE,OAAO,CAAC,MAAM,UAAU,QAAQ;IACtC,IAAI,EAAE,OAAO,CAAC,MAAM,WAAW,QAAQ;IACvC,IAAI,EAAE,OAAO,CAAC,MAAM,UAAU,QAAQ;IACtC,IAAI,EAAE,OAAO,CAAC,MAAM,SAAS,QAAQ;IACrC,IAAI,EAAE,OAAO,CAAC,MAAM,SAAS,QAAQ;IACrC,IAAI,SAAS;QACT,IAAI,EAAE,OAAO,CAAC,OAAO;IACzB;IACA,OAAO;AACX;AACO,MAAM,iBAAiB,CAAC,OAAO,KAAK;IACvC,IAAI,QAAQ,SAAS,OAAO,KAAK,CAAC,IAAI,GAAG;IACzC,IAAI,SAAS,MAAM;QACf,QAAQ;IACZ;IACA,OAAO,SAAS,OAAO,OAAO,OAAO;AACzC;AAWO,MAAM,YAAY,CAAC,OAAO,KAAK;IAClC,IAAI,QAAQ,SAAS,OAAO,KAAK,CAAC,IAAI,GAAG;IACzC,IAAI,SAAS,MAAM;QACf,QAAQ,gBAAgB;IAC5B;IACA,OAAO,OAAO;AAClB;AAWO,MAAM,WAAW,CAAC,OAAO,KAAK;IACjC,IAAI,QAAQ,SAAS,OAAO,KAAK,CAAC,IAAI,GAAG;IACzC,IAAI,SAAS,MAAM;QACf,QAAQ;IACZ,OACK,IAAI,UAAU,8JAAA,CAAA,OAAI,EAAE;QACrB,QAAQ;IACZ;IACA,OAAO;AACX;AAMO,MAAM,WAAW,CAAC;IACrB,IAAI,SAAS;IACb,IAAK,MAAM,KAAK,IAAK;QACjB,IAAI;YACA,IAAI,GAAG,CAAC,EAAE,IAAI,MAAM;gBAChB,UAAU,GAAG,EAAE,WAAW,CAAC;YAC/B,OACK,IAAI,OAAO,GAAG,CAAC,EAAE,KAAK,YAAY;gBACnC,UAAU,GAAG,EAAE,gBAAgB,CAAC;YACpC,OACK,IAAI,OAAO,GAAG,CAAC,EAAE,KAAK,UAAU;gBACjC,MAAM,OAAO,gBAAgB,GAAG,CAAC,EAAE,CAAC,WAAW;gBAC/C,UAAU,GAAG,EAAE,KAAK,EAAE,KAAK,GAAG,CAAC;YACnC,OACK;gBACD,UAAU,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;YAClC;QACJ,EACA,OAAO,GAAG;YACN,UAAU,GAAG,EAAE,CAAC,EAAE,EAAE,OAAO,EAAE;QACjC;IACJ;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 914, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 920, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/ObjectIdentity.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { IDENTITY_FIELD_NAME } from './Constants';\nimport { getFunctionName } from './StringUtils';\n/**\n * @class\n *\n * Identity for JavaScript objects and functions. This is implemented using\n * a simple incrementing counter which is stored in each object under\n * {@link FIELD_NAME}.\n *\n * The identity for an object does not change during its lifecycle.\n */\nclass ObjectIdentity {\n    /**\n     * Returns the ID for the given object or function.\n     */\n    static get(obj) {\n        if (obj) {\n            if (obj[IDENTITY_FIELD_NAME] === null || obj[IDENTITY_FIELD_NAME] === undefined) {\n                if (typeof obj === 'object') {\n                    const ctor = getFunctionName(obj.constructor);\n                    obj[IDENTITY_FIELD_NAME] = `${ctor}#${ObjectIdentity.counter++}`;\n                }\n                else if (typeof obj === 'function') {\n                    obj[IDENTITY_FIELD_NAME] = `Function#${ObjectIdentity.counter++}`;\n                }\n            }\n            return obj[IDENTITY_FIELD_NAME];\n        }\n        return null;\n    }\n    /**\n     * Deletes the ID from the given object or function.\n     */\n    static clear(obj) {\n        delete obj[IDENTITY_FIELD_NAME];\n    }\n}\n/**\n * Name of the field to be used to store the object ID. Default is\n * <code>mxObjectId</code>.\n */\nObjectIdentity.FIELD_NAME = IDENTITY_FIELD_NAME;\n/**\n * Current counter.\n */\nObjectIdentity.counter = 0;\nexport default ObjectIdentity;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;;AACA;AACA;;;AACA;;;;;;;;CAQC,GACD,MAAM;IACF;;KAEC,GACD,OAAO,IAAI,GAAG,EAAE;QACZ,IAAI,KAAK;YACL,IAAI,GAAG,CAAC,8JAAA,CAAA,sBAAmB,CAAC,KAAK,QAAQ,GAAG,CAAC,8JAAA,CAAA,sBAAmB,CAAC,KAAK,WAAW;gBAC7E,IAAI,OAAO,QAAQ,UAAU;oBACzB,MAAM,OAAO,CAAA,GAAA,gKAAA,CAAA,kBAAe,AAAD,EAAE,IAAI,WAAW;oBAC5C,GAAG,CAAC,8JAAA,CAAA,sBAAmB,CAAC,GAAG,GAAG,KAAK,CAAC,EAAE,eAAe,OAAO,IAAI;gBACpE,OACK,IAAI,OAAO,QAAQ,YAAY;oBAChC,GAAG,CAAC,8JAAA,CAAA,sBAAmB,CAAC,GAAG,CAAC,SAAS,EAAE,eAAe,OAAO,IAAI;gBACrE;YACJ;YACA,OAAO,GAAG,CAAC,8JAAA,CAAA,sBAAmB,CAAC;QACnC;QACA,OAAO;IACX;IACA;;KAEC,GACD,OAAO,MAAM,GAAG,EAAE;QACd,OAAO,GAAG,CAAC,8JAAA,CAAA,sBAAmB,CAAC;IACnC;AACJ;AACA;;;CAGC,GACD,eAAe,UAAU,GAAG,8JAAA,CAAA,sBAAmB;AAC/C;;CAEC,GACD,eAAe,OAAO,GAAG;uCACV","ignoreList":[0]}},
    {"offset": {"line": 982, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 988, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/cloneUtils.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport ObjectIdentity from './ObjectIdentity';\n/**\n * Recursively clones the specified object ignoring all field names in the\n * given array of transient fields. {@link ObjectIdentity#FIELD_NAME} is always\n * ignored by this function.\n *\n * @param obj Object to be cloned.\n * @param transients Optional array of strings representing the fieldname to be\n * ignored.\n * @param shallow Optional boolean argument to specify if a shallow clone should\n * be created, that is, one where all object references are not cloned or,\n * in other words, one where only atomic (strings, numbers) values are\n * cloned. Default is false.\n */\nexport const clone = function _clone(obj, transients = null, shallow = false) {\n    shallow = shallow != null ? shallow : false;\n    let clone = null;\n    if (obj != null && typeof obj.constructor === 'function') {\n        clone = new obj.constructor();\n        for (const i in obj) {\n            if (i != ObjectIdentity.FIELD_NAME &&\n                (transients == null || transients.indexOf(i) < 0)) {\n                if (!shallow && typeof obj[i] === 'object') {\n                    clone[i] = _clone(obj[i]);\n                }\n                else {\n                    clone[i] = obj[i];\n                }\n            }\n        }\n    }\n    return clone;\n};\n/**\n * Shallow copies properties from the source object to the target object.\n *\n * **WARNING**: This function performs only a **shallow** copy i.e. there is no deep copy of the properties that are objects.\n *\n * @template T The type of the objects.\n *\n * @param source The source object from which properties will be copied.\n * @param target The target object to which properties will be copied.\n *\n * @private not part of the public API, can be removed or changed without prior notice\n * @since 0.14.0\n */\nexport const shallowCopy = (source, target) => {\n    for (const key in source) {\n        // attempt to prevent prototype pollution\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n        }\n    }\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcA;;;;AACA;;AAcO,MAAM,QAAQ,SAAS,OAAO,GAAG,EAAE,aAAa,IAAI,EAAE,UAAU,KAAK;IACxE,UAAU,WAAW,OAAO,UAAU;IACtC,IAAI,QAAQ;IACZ,IAAI,OAAO,QAAQ,OAAO,IAAI,WAAW,KAAK,YAAY;QACtD,QAAQ,IAAI,IAAI,WAAW;QAC3B,IAAK,MAAM,KAAK,IAAK;YACjB,IAAI,KAAK,mKAAA,CAAA,UAAc,CAAC,UAAU,IAC9B,CAAC,cAAc,QAAQ,WAAW,OAAO,CAAC,KAAK,CAAC,GAAG;gBACnD,IAAI,CAAC,WAAW,OAAO,GAAG,CAAC,EAAE,KAAK,UAAU;oBACxC,KAAK,CAAC,EAAE,GAAG,OAAO,GAAG,CAAC,EAAE;gBAC5B,OACK;oBACD,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE;gBACrB;YACJ;QACJ;IACJ;IACA,OAAO;AACX;AAcO,MAAM,cAAc,CAAC,QAAQ;IAChC,IAAK,MAAM,OAAO,OAAQ;QACtB,yCAAyC;QACzC,IAAI,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,MAAM;YACnD,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI;QAC7B;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1033, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1039, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/config.js"],"sourcesContent":["/*\nCopyright 2024-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { NoOpLogger } from './logger';\nimport { SHADOW_OFFSET_X, SHADOW_OFFSET_Y, SHADOW_OPACITY, SHADOWCOLOR, } from './Constants';\nimport { shallowCopy } from './cloneUtils';\n/**\n * Global configuration for maxGraph.\n *\n * @experimental subject to change or removal. maxGraph's global configuration may be modified in the future without prior notice.\n * @since 0.11.0\n * @category Configuration\n */\nexport const GlobalConfig = {\n    /**\n     * Configure the logger to use for all log messages.\n     *\n     * Available implementations provided by maxGraph are:\n     * * {@link ConsoleLogger} - Directs logs to the browser console.\n     * * {@link NoOpLogger} - Default implementation that does nothing.\n     * * {@link MaxLogAsLogger} - Directs logs to {@link MaxLog}.\n     *\n     * To change the logger, set this property to an instance of the desired logger:\n     * ```js\n     * // To direct logs to the browser console\n     * GlobalConfig.logger = new ConsoleLogger();\n     * // To direct logs to MaxLog\n     * GlobalConfig.logger = new MaxLogAsLogger();\n     * ```\n     *\n     * @default {@link NoOpLogger}\n     */\n    logger: new NoOpLogger(),\n};\n/**\n * Configure style defaults for maxGraph.\n *\n * @experimental subject to change or removal. maxGraph's global configuration may be modified in the future without prior notice.\n * @since 0.14.0\n * @category Configuration\n */\nexport const StyleDefaultsConfig = {\n    /**\n     * Defines the color to be used to draw shadows in shapes and windows.\n     * @default {@link SHADOWCOLOR}\n     */\n    shadowColor: SHADOWCOLOR,\n    /**\n     * Specifies the x-offset of the shadow.\n     * @default {@link SHADOW_OFFSET_X}\n     */\n    shadowOffsetX: SHADOW_OFFSET_X,\n    /**\n     * Specifies the y-offset of the shadow.\n     * @default {@link SHADOW_OFFSET_Y}\n     */\n    shadowOffsetY: SHADOW_OFFSET_Y,\n    /**\n     * Defines the opacity for shadow. Possible values are between 1 (opaque) and 0 (transparent).\n     * @default {@link SHADOW_OPACITY}\n     */\n    shadowOpacity: SHADOW_OPACITY,\n};\nconst defaultStyleDefaultsConfig = { ...StyleDefaultsConfig };\n/**\n * Resets {@link StyleDefaultsConfig} to default values.\n *\n * @experimental Subject to change or removal. maxGraph's global configuration may be modified in the future without prior notice.\n * @since 0.14.0\n * @category Configuration\n */\nexport const resetStyleDefaultsConfig = () => {\n    shallowCopy(defaultStyleDefaultsConfig, StyleDefaultsConfig);\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcA;;;;;AACA;AACA;AACA;;;;AAQO,MAAM,eAAe;IACxB;;;;;;;;;;;;;;;;;KAiBC,GACD,QAAQ,IAAI,2JAAA,CAAA,aAAU;AAC1B;AAQO,MAAM,sBAAsB;IAC/B;;;KAGC,GACD,aAAa,8JAAA,CAAA,cAAW;IACxB;;;KAGC,GACD,eAAe,8JAAA,CAAA,kBAAe;IAC9B;;;KAGC,GACD,eAAe,8JAAA,CAAA,kBAAe;IAC9B;;;KAGC,GACD,eAAe,8JAAA,CAAA,iBAAc;AACjC;AACA,MAAM,6BAA6B;IAAE,GAAG,mBAAmB;AAAC;AAQrD,MAAM,2BAA2B;IACpC,CAAA,GAAA,+JAAA,CAAA,cAAW,AAAD,EAAE,4BAA4B;AAC5C","ignoreList":[0]}},
    {"offset": {"line": 1108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1114, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/Utils.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Client from '../Client';\nimport { GlobalConfig } from './config';\n/**\n * A singleton class that provides cross-browser helper methods.\n * This is a global functionality. To access the functions in this\n * class, use the global classname appended by the functionname.\n * You may have to load chrome://global/content/contentAreaUtils.js\n * to disable certain security restrictions in Mozilla for the <open>,\n * <save>, <saveAs> and <copy> function.\n *\n * For example, the following code displays an error message:\n *\n * ```javascript\n * mxUtils.error('Browser is not supported!', 200, false);\n * ```\n */\nexport const utils = {\n    /*\n     * Specifies the resource key for the title of the error window. If the\n     * resource for this key does not exist then the value is used as\n     * the title. Default is 'error'.\n     */\n    errorResource: 'error',\n    /**\n     * Specifies the resource key for the label of the close button. If the\n     * resource for this key does not exist then the value is used as\n     * the label. Default is 'close'.\n     */\n    closeResource: 'close',\n    /**\n     * Defines the image used for error dialogs.\n     */\n    errorImage: `${Client.imageBasePath}/error.gif`,\n};\nexport const isNullish = (v) => v === null || v === undefined;\nexport const isNotNullish = (v) => !isNullish(v);\n/**\n * Merge a mixin into the destination\n * @param dest the destination class\n *\n * @private not part of the public API, can be removed or changed without prior notice\n */\nexport const mixInto = (dest) => (mixin) => {\n    const keys = Reflect.ownKeys(mixin);\n    try {\n        for (const key of keys) {\n            Object.defineProperty(dest.prototype, key, {\n                value: mixin[key],\n                writable: true,\n            });\n        }\n    }\n    catch (e) {\n        GlobalConfig.logger.error('Error while mixing', e);\n    }\n};\n/**\n * Returns the value for the given key in the given associative array or\n * the given default value if the value is null.\n *\n * @param array Associative array that contains the value for the key.\n * @param key Key whose value should be returned.\n * @param defaultValue Value to be returned if the value for the given\n * key is null.\n */\nexport const getValue = (array, key, defaultValue) => {\n    let value = array != null ? array[key] : null;\n    if (value == null) {\n        value = defaultValue;\n    }\n    return value;\n};\nexport const copyTextToClipboard = (text) => {\n    // Credit: https://stackoverflow.com/questions/400212/how-do-i-copy-to-the-clipboard-in-javascript\n    if (!navigator.clipboard) {\n        fallbackCopyTextToClipboard(text);\n        return;\n    }\n    navigator.clipboard.writeText(text).then(function () {\n        GlobalConfig.logger.info('Async: Copying to clipboard was successful!');\n    }, function (err) {\n        GlobalConfig.logger.error('Async: Could not copy text: ', err);\n    });\n};\nconst fallbackCopyTextToClipboard = (text) => {\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    // Avoid scrolling to bottom\n    textArea.style.top = '0';\n    textArea.style.left = '0';\n    textArea.style.position = 'fixed';\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n    try {\n        const successful = document.execCommand('copy');\n        const msg = successful ? 'successful' : 'unsuccessful';\n        GlobalConfig.logger.info(`Fallback: Copying text command was ${msg}`);\n    }\n    catch (err) {\n        GlobalConfig.logger.error('Fallback: Oops, unable to copy', err);\n    }\n    document.body.removeChild(textArea);\n};\n/**\n * If `baseTimestamp` is provided and not zero, returns a message describing the elapsed milliseconds since this value.\n * Otherwise, returns an empty string.\n * @param baseTimestamp the base timestamp to compute the elapsed milliseconds from\n *\n * @private not part of the public API, can be removed or changed without prior notice\n */\nexport const getElapseMillisecondsMessage = (baseTimestamp) => baseTimestamp ? ` (${new Date().getTime() - baseTimestamp} ms)` : '';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;AACA;AACA;;;AAeO,MAAM,QAAQ;IACjB;;;;KAIC,GACD,eAAe;IACf;;;;KAIC,GACD,eAAe;IACf;;KAEC,GACD,YAAY,GAAG,mJAAA,CAAA,UAAM,CAAC,aAAa,CAAC,UAAU,CAAC;AACnD;AACO,MAAM,YAAY,CAAC,IAAM,MAAM,QAAQ,MAAM;AAC7C,MAAM,eAAe,CAAC,IAAM,CAAC,UAAU;AAOvC,MAAM,UAAU,CAAC,OAAS,CAAC;QAC9B,MAAM,OAAO,QAAQ,OAAO,CAAC;QAC7B,IAAI;YACA,KAAK,MAAM,OAAO,KAAM;gBACpB,OAAO,cAAc,CAAC,KAAK,SAAS,EAAE,KAAK;oBACvC,OAAO,KAAK,CAAC,IAAI;oBACjB,UAAU;gBACd;YACJ;QACJ,EACA,OAAO,GAAG;YACN,2JAAA,CAAA,eAAY,CAAC,MAAM,CAAC,KAAK,CAAC,sBAAsB;QACpD;IACJ;AAUO,MAAM,WAAW,CAAC,OAAO,KAAK;IACjC,IAAI,QAAQ,SAAS,OAAO,KAAK,CAAC,IAAI,GAAG;IACzC,IAAI,SAAS,MAAM;QACf,QAAQ;IACZ;IACA,OAAO;AACX;AACO,MAAM,sBAAsB,CAAC;IAChC,kGAAkG;IAClG,IAAI,CAAC,UAAU,SAAS,EAAE;QACtB,4BAA4B;QAC5B;IACJ;IACA,UAAU,SAAS,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC;QACrC,2JAAA,CAAA,eAAY,CAAC,MAAM,CAAC,IAAI,CAAC;IAC7B,GAAG,SAAU,GAAG;QACZ,2JAAA,CAAA,eAAY,CAAC,MAAM,CAAC,KAAK,CAAC,gCAAgC;IAC9D;AACJ;AACA,MAAM,8BAA8B,CAAC;IACjC,MAAM,WAAW,SAAS,aAAa,CAAC;IACxC,SAAS,KAAK,GAAG;IACjB,4BAA4B;IAC5B,SAAS,KAAK,CAAC,GAAG,GAAG;IACrB,SAAS,KAAK,CAAC,IAAI,GAAG;IACtB,SAAS,KAAK,CAAC,QAAQ,GAAG;IAC1B,SAAS,IAAI,CAAC,WAAW,CAAC;IAC1B,SAAS,KAAK;IACd,SAAS,MAAM;IACf,IAAI;QACA,MAAM,aAAa,SAAS,WAAW,CAAC;QACxC,MAAM,MAAM,aAAa,eAAe;QACxC,2JAAA,CAAA,eAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,mCAAmC,EAAE,KAAK;IACxE,EACA,OAAO,KAAK;QACR,2JAAA,CAAA,eAAY,CAAC,MAAM,CAAC,KAAK,CAAC,kCAAkC;IAChE;IACA,SAAS,IAAI,CAAC,WAAW,CAAC;AAC9B;AAQO,MAAM,+BAA+B,CAAC,gBAAkB,gBAAgB,CAAC,EAAE,EAAE,IAAI,OAAO,OAAO,KAAK,cAAc,IAAI,CAAC,GAAG","ignoreList":[0]}},
    {"offset": {"line": 1212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1218, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/mathUtils.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { DIRECTION, DIRECTION_MASK } from './Constants';\nimport Point from '../view/geometry/Point';\nimport Rectangle from '../view/geometry/Rectangle';\nimport { getValue, isNullish } from './Utils';\n/**\n * Converts the given degree to radians.\n */\nexport const toRadians = (deg) => {\n    return (Math.PI * deg) / 180;\n};\n/**\n * Converts the given radians to degree.\n */\nexport const toDegree = (rad) => {\n    return (rad * 180) / Math.PI;\n};\n/**\n * Converts the given arc to a series of curves.\n */\nexport const arcToCurves = (x0, y0, r1, r2, angle, largeArcFlag, sweepFlag, x, y) => {\n    x -= x0;\n    y -= y0;\n    if (r1 === 0 || r2 === 0) {\n        return [];\n    }\n    const fS = sweepFlag;\n    const psai = angle;\n    r1 = Math.abs(r1);\n    r2 = Math.abs(r2);\n    const ctx = -x / 2;\n    const cty = -y / 2;\n    const cpsi = Math.cos((psai * Math.PI) / 180);\n    const spsi = Math.sin((psai * Math.PI) / 180);\n    const rxd = cpsi * ctx + spsi * cty;\n    const ryd = -1 * spsi * ctx + cpsi * cty;\n    const rxdd = rxd * rxd;\n    const rydd = ryd * ryd;\n    const r1x = r1 * r1;\n    const r2y = r2 * r2;\n    const lamda = rxdd / r1x + rydd / r2y;\n    let sds;\n    if (lamda > 1) {\n        r1 = Math.sqrt(lamda) * r1;\n        r2 = Math.sqrt(lamda) * r2;\n        sds = 0;\n    }\n    else {\n        let seif = 1;\n        if (largeArcFlag === fS) {\n            seif = -1;\n        }\n        sds =\n            seif * Math.sqrt((r1x * r2y - r1x * rydd - r2y * rxdd) / (r1x * rydd + r2y * rxdd));\n    }\n    const txd = (sds * r1 * ryd) / r2;\n    const tyd = (-1 * sds * r2 * rxd) / r1;\n    const tx = cpsi * txd - spsi * tyd + x / 2;\n    const ty = spsi * txd + cpsi * tyd + y / 2;\n    let rad = Math.atan2((ryd - tyd) / r2, (rxd - txd) / r1) - Math.atan2(0, 1);\n    let s1 = rad >= 0 ? rad : 2 * Math.PI + rad;\n    rad =\n        Math.atan2((-ryd - tyd) / r2, (-rxd - txd) / r1) -\n            Math.atan2((ryd - tyd) / r2, (rxd - txd) / r1);\n    let dr = rad >= 0 ? rad : 2 * Math.PI + rad;\n    if (!fS && dr > 0) {\n        dr -= 2 * Math.PI;\n    }\n    else if (fS && dr < 0) {\n        dr += 2 * Math.PI;\n    }\n    const sse = (dr * 2) / Math.PI;\n    const seg = Math.ceil(sse < 0 ? -1 * sse : sse);\n    const segr = dr / seg;\n    const t = ((8 / 3) * Math.sin(segr / 4) * Math.sin(segr / 4)) / Math.sin(segr / 2);\n    const cpsir1 = cpsi * r1;\n    const cpsir2 = cpsi * r2;\n    const spsir1 = spsi * r1;\n    const spsir2 = spsi * r2;\n    let mc = Math.cos(s1);\n    let ms = Math.sin(s1);\n    let x2 = -t * (cpsir1 * ms + spsir2 * mc);\n    let y2 = -t * (spsir1 * ms - cpsir2 * mc);\n    let x3 = 0;\n    let y3 = 0;\n    const result = [];\n    for (let n = 0; n < seg; ++n) {\n        s1 += segr;\n        mc = Math.cos(s1);\n        ms = Math.sin(s1);\n        x3 = cpsir1 * mc - spsir2 * ms + tx;\n        y3 = spsir1 * mc + cpsir2 * ms + ty;\n        const dx = -t * (cpsir1 * ms + spsir2 * mc);\n        const dy = -t * (spsir1 * ms - cpsir2 * mc);\n        // CurveTo updates x0, y0 so need to restore it\n        const index = n * 6;\n        result[index] = Number(x2 + x0);\n        result[index + 1] = Number(y2 + y0);\n        result[index + 2] = Number(x3 - dx + x0);\n        result[index + 3] = Number(y3 - dy + y0);\n        result[index + 4] = Number(x3 + x0);\n        result[index + 5] = Number(y3 + y0);\n        x2 = x3 + dx;\n        y2 = y3 + dy;\n    }\n    return result;\n};\n/**\n * Returns the bounding box for the rotated rectangle.\n *\n * @param rect {@link Rectangle} to be rotated.\n * @param angle Number that represents the angle (in degrees).\n * @param cx Optional {@link Point} that represents the rotation center. If no\n * rotation center is given then the center of rect is used.\n */\nexport const getBoundingBox = (rect, rotation, cx = null) => {\n    let result = null;\n    if (rect && rotation !== 0) {\n        const rad = toRadians(rotation);\n        const cos = Math.cos(rad);\n        const sin = Math.sin(rad);\n        cx = cx != null ? cx : new Point(rect.x + rect.width / 2, rect.y + rect.height / 2);\n        let p1 = new Point(rect.x, rect.y);\n        let p2 = new Point(rect.x + rect.width, rect.y);\n        let p3 = new Point(p2.x, rect.y + rect.height);\n        let p4 = new Point(rect.x, p3.y);\n        p1 = getRotatedPoint(p1, cos, sin, cx);\n        p2 = getRotatedPoint(p2, cos, sin, cx);\n        p3 = getRotatedPoint(p3, cos, sin, cx);\n        p4 = getRotatedPoint(p4, cos, sin, cx);\n        result = new Rectangle(p1.x, p1.y, 0, 0);\n        result.add(new Rectangle(p2.x, p2.y, 0, 0));\n        result.add(new Rectangle(p3.x, p3.y, 0, 0));\n        result.add(new Rectangle(p4.x, p4.y, 0, 0));\n    }\n    return result;\n};\n/**\n * Rotates the given point by the given cos and sin.\n */\nexport const getRotatedPoint = (pt, cos, sin, c = new Point()) => {\n    const x = pt.x - c.x;\n    const y = pt.y - c.y;\n    const x1 = x * cos - y * sin;\n    const y1 = y * cos + x * sin;\n    return new Point(x1 + c.x, y1 + c.y);\n};\n/**\n * Returns an integer mask of the port constraints of the given map\n *\n * @param terminal {@link CelState} that represents the terminal.\n * @param edge {@link CelState} that represents the edge.\n * @param source Boolean that specifies if the terminal is the source terminal.\n * @param defaultValue Default value to be returned if no port constraint is defined in the terminal.\n * @return the mask of port constraint directions\n */\nexport const getPortConstraints = (terminal, edge, source, defaultValue) => {\n    const value = getValue(terminal.style, 'portConstraint', getValue(edge.style, source ? 'sourcePortConstraint' : 'targetPortConstraint', null));\n    if (isNullish(value)) {\n        return defaultValue;\n    }\n    const directions = value.toString();\n    let returnValue = DIRECTION_MASK.NONE;\n    const constraintRotationEnabled = terminal.style.portConstraintRotation ?? false;\n    let rotation = 0;\n    if (constraintRotationEnabled) {\n        rotation = terminal.style.rotation ?? 0;\n    }\n    let quad = 0;\n    if (rotation > 45) {\n        quad = 1;\n        if (rotation >= 135) {\n            quad = 2;\n        }\n    }\n    else if (rotation < -45) {\n        quad = 3;\n        if (rotation <= -135) {\n            quad = 2;\n        }\n    }\n    if (directions.indexOf(DIRECTION.NORTH) >= 0) {\n        switch (quad) {\n            case 0:\n                returnValue |= DIRECTION_MASK.NORTH;\n                break;\n            case 1:\n                returnValue |= DIRECTION_MASK.EAST;\n                break;\n            case 2:\n                returnValue |= DIRECTION_MASK.SOUTH;\n                break;\n            case 3:\n                returnValue |= DIRECTION_MASK.WEST;\n                break;\n        }\n    }\n    if (directions.indexOf(DIRECTION.WEST) >= 0) {\n        switch (quad) {\n            case 0:\n                returnValue |= DIRECTION_MASK.WEST;\n                break;\n            case 1:\n                returnValue |= DIRECTION_MASK.NORTH;\n                break;\n            case 2:\n                returnValue |= DIRECTION_MASK.EAST;\n                break;\n            case 3:\n                returnValue |= DIRECTION_MASK.SOUTH;\n                break;\n        }\n    }\n    if (directions.indexOf(DIRECTION.SOUTH) >= 0) {\n        switch (quad) {\n            case 0:\n                returnValue |= DIRECTION_MASK.SOUTH;\n                break;\n            case 1:\n                returnValue |= DIRECTION_MASK.WEST;\n                break;\n            case 2:\n                returnValue |= DIRECTION_MASK.NORTH;\n                break;\n            case 3:\n                returnValue |= DIRECTION_MASK.EAST;\n                break;\n        }\n    }\n    if (directions.indexOf(DIRECTION.EAST) >= 0) {\n        switch (quad) {\n            case 0:\n                returnValue |= DIRECTION_MASK.EAST;\n                break;\n            case 1:\n                returnValue |= DIRECTION_MASK.SOUTH;\n                break;\n            case 2:\n                returnValue |= DIRECTION_MASK.WEST;\n                break;\n            case 3:\n                returnValue |= DIRECTION_MASK.NORTH;\n                break;\n        }\n    }\n    return returnValue;\n};\n/**\n * Reverse the port constraint bitmask. For example, north | east\n * becomes south | west\n */\nexport const reversePortConstraints = (constraint) => {\n    let result = 0;\n    result = (constraint & DIRECTION_MASK.WEST) << 3;\n    result |= (constraint & DIRECTION_MASK.NORTH) << 1;\n    result |= (constraint & DIRECTION_MASK.SOUTH) >> 1;\n    result |= (constraint & DIRECTION_MASK.EAST) >> 3;\n    return result;\n};\n/**\n * Finds the index of the nearest segment on the given cell state for\n * the specified coordinate pair.\n */\nexport const findNearestSegment = (state, x, y) => {\n    let index = -1;\n    if (state.absolutePoints.length > 0) {\n        let last = state.absolutePoints[0];\n        let min = null;\n        for (let i = 1; i < state.absolutePoints.length; i += 1) {\n            const current = state.absolutePoints[i];\n            if (!last || !current)\n                continue;\n            const dist = ptSegDistSq(last.x, last.y, current.x, current.y, x, y);\n            if (min == null || dist < min) {\n                min = dist;\n                index = i - 1;\n            }\n            last = current;\n        }\n    }\n    return index;\n};\n/**\n * Adds the given margins to the given rectangle and rotates and flips the\n * rectangle according to the respective styles in style.\n */\nexport const getDirectedBounds = (rect, m, style, flipH, flipV) => {\n    const d = getValue(style, 'direction', DIRECTION.EAST);\n    flipH = flipH != null ? flipH : getValue(style, 'flipH', false);\n    flipV = flipV != null ? flipV : getValue(style, 'flipV', false);\n    m.x = Math.round(Math.max(0, Math.min(rect.width, m.x)));\n    m.y = Math.round(Math.max(0, Math.min(rect.height, m.y)));\n    m.width = Math.round(Math.max(0, Math.min(rect.width, m.width)));\n    m.height = Math.round(Math.max(0, Math.min(rect.height, m.height)));\n    if ((flipV && (d === DIRECTION.SOUTH || d === DIRECTION.NORTH)) ||\n        (flipH && (d === DIRECTION.EAST || d === DIRECTION.WEST))) {\n        const tmp = m.x;\n        m.x = m.width;\n        m.width = tmp;\n    }\n    if ((flipH && (d === DIRECTION.SOUTH || d === DIRECTION.NORTH)) ||\n        (flipV && (d === DIRECTION.EAST || d === DIRECTION.WEST))) {\n        const tmp = m.y;\n        m.y = m.height;\n        m.height = tmp;\n    }\n    const m2 = Rectangle.fromRectangle(m);\n    if (d === DIRECTION.SOUTH) {\n        m2.y = m.x;\n        m2.x = m.height;\n        m2.width = m.y;\n        m2.height = m.width;\n    }\n    else if (d === DIRECTION.WEST) {\n        m2.y = m.height;\n        m2.x = m.width;\n        m2.width = m.x;\n        m2.height = m.y;\n    }\n    else if (d === DIRECTION.NORTH) {\n        m2.y = m.width;\n        m2.x = m.y;\n        m2.width = m.height;\n        m2.height = m.x;\n    }\n    return new Rectangle(rect.x + m2.x, rect.y + m2.y, rect.width - m2.width - m2.x, rect.height - m2.height - m2.y);\n};\n/**\n * Returns the intersection between the polygon defined by the array of\n * points and the line between center and point.\n */\nexport const getPerimeterPoint = (pts, center, point) => {\n    let min = null;\n    for (let i = 0; i < pts.length - 1; i += 1) {\n        const pt = intersection(pts[i].x, pts[i].y, pts[i + 1].x, pts[i + 1].y, center.x, center.y, point.x, point.y);\n        if (pt != null) {\n            const dx = point.x - pt.x;\n            const dy = point.y - pt.y;\n            const ip = { p: pt, distSq: dy * dy + dx * dx };\n            if (ip != null && (min == null || min.distSq > ip.distSq)) {\n                min = ip;\n            }\n        }\n    }\n    return min != null ? min.p : null;\n};\n/**\n * Returns true if the given rectangle intersects the given segment.\n *\n * @param bounds {@link Rectangle} that represents the rectangle.\n * @param p1 {@link Point} that represents the first point of the segment.\n * @param p2 {@link Point} that represents the second point of the segment.\n */\nexport const rectangleIntersectsSegment = (bounds, p1, p2) => {\n    const top = bounds.y;\n    const left = bounds.x;\n    const bottom = top + bounds.height;\n    const right = left + bounds.width;\n    // Find min and max X for the segment\n    let minX = p1.x;\n    let maxX = p2.x;\n    if (p1.x > p2.x) {\n        minX = p2.x;\n        maxX = p1.x;\n    }\n    // Find the intersection of the segment's and rectangle's x-projections\n    if (maxX > right) {\n        maxX = right;\n    }\n    if (minX < left) {\n        minX = left;\n    }\n    if (minX > maxX) {\n        // If their projections do not intersect return false\n        return false;\n    }\n    // Find corresponding min and max Y for min and max X we found before\n    let minY = p1.y;\n    let maxY = p2.y;\n    const dx = p2.x - p1.x;\n    if (Math.abs(dx) > 0.0000001) {\n        const a = (p2.y - p1.y) / dx;\n        const b = p1.y - a * p1.x;\n        minY = a * minX + b;\n        maxY = a * maxX + b;\n    }\n    if (minY > maxY) {\n        const tmp = maxY;\n        maxY = minY;\n        minY = tmp;\n    }\n    // Find the intersection of the segment's and rectangle's y-projections\n    if (maxY > bottom) {\n        maxY = bottom;\n    }\n    if (minY < top) {\n        minY = top;\n    }\n    if (minY > maxY) {\n        // If Y-projections do not intersect return false\n        return false;\n    }\n    return true;\n};\n/**\n * Returns true if the specified point (x, y) is contained in the given rectangle.\n *\n * @param bounds {@link Rectangle} that represents the area.\n * @param x X-coordinate of the point.\n * @param y Y-coordinate of the point.\n */\nexport const contains = (bounds, x, y) => {\n    return (bounds.x <= x &&\n        bounds.x + bounds.width >= x &&\n        bounds.y <= y &&\n        bounds.y + bounds.height >= y);\n};\n/**\n * Returns true if the two rectangles intersect.\n *\n * @param a {@link Rectangle} to be checked for intersection.\n * @param b {@link Rectangle} to be checked for intersection.\n */\nexport const intersects = (a, b) => {\n    let tw = a.width;\n    let th = a.height;\n    let rw = b.width;\n    let rh = b.height;\n    if (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0) {\n        return false;\n    }\n    const tx = a.x;\n    const ty = a.y;\n    const rx = b.x;\n    const ry = b.y;\n    rw += rx;\n    rh += ry;\n    tw += tx;\n    th += ty;\n    return ((rw < rx || rw > tx) &&\n        (rh < ry || rh > ty) &&\n        (tw < tx || tw > rx) &&\n        (th < ty || th > ry));\n};\n/**\n * Returns true if the state and the hotspot intersect.\n *\n * @param state <CellState>\n * @param x X-coordinate.\n * @param y Y-coordinate.\n * @param hotspot Optional size of the hostpot.\n * @param min Optional min size of the hostpot.\n * @param max Optional max size of the hostpot.\n */\nexport const intersectsHotspot = (state, x, y, hotspot, min, max) => {\n    hotspot = hotspot != null ? hotspot : 1;\n    min = min != null ? min : 0;\n    max = max != null ? max : 0;\n    if (hotspot > 0) {\n        let cx = state.getCenterX();\n        let cy = state.getCenterY();\n        let w = state.width;\n        let h = state.height;\n        const start = getValue(state.style, 'startSize') * state.view.scale;\n        if (start > 0) {\n            if (getValue(state.style, 'horizontal', true)) {\n                cy = state.y + start / 2;\n                h = start;\n            }\n            else {\n                cx = state.x + start / 2;\n                w = start;\n            }\n        }\n        w = Math.max(min, w * hotspot);\n        h = Math.max(min, h * hotspot);\n        if (max > 0) {\n            w = Math.min(w, max);\n            h = Math.min(h, max);\n        }\n        const rect = new Rectangle(cx - w / 2, cy - h / 2, w, h);\n        const alpha = toRadians(getValue(state.style, 'rotation') || 0);\n        if (alpha != 0) {\n            const cos = Math.cos(-alpha);\n            const sin = Math.sin(-alpha);\n            const cx = new Point(state.getCenterX(), state.getCenterY());\n            const pt = getRotatedPoint(new Point(x, y), cos, sin, cx);\n            x = pt.x;\n            y = pt.y;\n        }\n        return contains(rect, x, y);\n    }\n    return true;\n};\n/**\n * Returns true if the specified value is numeric, that is, if it is not\n * null, not an empty string, not a HEX number and isNaN returns false.\n *\n * @param n String representing the possibly numeric value.\n */\nexport const isNumeric = (n) => {\n    return (!Number.isNaN(parseFloat(n)) &&\n        isFinite(+n) &&\n        (typeof n !== 'string' || n.toLowerCase().indexOf('0x') < 0));\n};\n/**\n * Returns true if the given value is an valid integer number.\n *\n * @param n String representing the possibly numeric value.\n */\nexport const isInteger = (n) => {\n    return String(parseInt(n)) === String(n);\n};\n/**\n * Returns the remainder of division of n by m. You should use this instead\n * of the built-in operation as the built-in operation does not properly\n * handle negative numbers.\n */\nexport const mod = (n, m) => {\n    return ((n % m) + m) % m;\n};\n/**\n * Returns the intersection of two lines as an {@link Point}.\n *\n * @param x0 X-coordinate of the first line's startpoint.\n * @param y0 X-coordinate of the first line's startpoint.\n * @param x1 X-coordinate of the first line's endpoint.\n * @param y1 Y-coordinate of the first line's endpoint.\n * @param x2 X-coordinate of the second line's startpoint.\n * @param y2 Y-coordinate of the second line's startpoint.\n * @param x3 X-coordinate of the second line's endpoint.\n * @param y3 Y-coordinate of the second line's endpoint.\n */\nexport const intersection = (x0, y0, x1, y1, x2, y2, x3, y3) => {\n    const denom = (y3 - y2) * (x1 - x0) - (x3 - x2) * (y1 - y0);\n    const nume_a = (x3 - x2) * (y0 - y2) - (y3 - y2) * (x0 - x2);\n    const nume_b = (x1 - x0) * (y0 - y2) - (y1 - y0) * (x0 - x2);\n    const ua = nume_a / denom;\n    const ub = nume_b / denom;\n    if (ua >= 0.0 && ua <= 1.0 && ub >= 0.0 && ub <= 1.0) {\n        // Get the intersection point\n        const x = x0 + ua * (x1 - x0);\n        const y = y0 + ua * (y1 - y0);\n        return new Point(x, y);\n    }\n    // No intersection\n    return null;\n};\n/**\n * Returns the square distance between a segment and a point. To get the\n * distance between a point and a line (with infinite length) use\n * {@link Utils#ptLineDist}.\n *\n * @param x1 X-coordinate of the startpoint of the segment.\n * @param y1 Y-coordinate of the startpoint of the segment.\n * @param x2 X-coordinate of the endpoint of the segment.\n * @param y2 Y-coordinate of the endpoint of the segment.\n * @param px X-coordinate of the point.\n * @param py Y-coordinate of the point.\n */\nexport const ptSegDistSq = (x1, y1, x2, y2, px, py) => {\n    x2 -= x1;\n    y2 -= y1;\n    px -= x1;\n    py -= y1;\n    let dotprod = px * x2 + py * y2;\n    let projlenSq;\n    if (dotprod <= 0.0) {\n        projlenSq = 0.0;\n    }\n    else {\n        px = x2 - px;\n        py = y2 - py;\n        dotprod = px * x2 + py * y2;\n        if (dotprod <= 0.0) {\n            projlenSq = 0.0;\n        }\n        else {\n            projlenSq = (dotprod * dotprod) / (x2 * x2 + y2 * y2);\n        }\n    }\n    let lenSq = px * px + py * py - projlenSq;\n    if (lenSq < 0) {\n        lenSq = 0;\n    }\n    return lenSq;\n};\n/**\n * Returns the distance between a line defined by two points and a point.\n * To get the distance between a point and a segment (with a specific\n * length) use {@link Utils#ptSeqDistSq}.\n *\n * @param x1 X-coordinate of point 1 of the line.\n * @param y1 Y-coordinate of point 1 of the line.\n * @param x2 X-coordinate of point 1 of the line.\n * @param y2 Y-coordinate of point 1 of the line.\n * @param px X-coordinate of the point.\n * @param py Y-coordinate of the point.\n */\nexport const ptLineDist = (x1, y1, x2, y2, px, py) => {\n    return (Math.abs((y2 - y1) * px - (x2 - x1) * py + x2 * y1 - y2 * x1) /\n        Math.sqrt((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1)));\n};\n/**\n * Returns 1 if the given point on the right side of the segment, 0 if its\n * on the segment, and -1 if the point is on the left side of the segment.\n *\n * @param x1 X-coordinate of the startpoint of the segment.\n * @param y1 Y-coordinate of the startpoint of the segment.\n * @param x2 X-coordinate of the endpoint of the segment.\n * @param y2 Y-coordinate of the endpoint of the segment.\n * @param px X-coordinate of the point.\n * @param py Y-coordinate of the point.\n */\nexport const relativeCcw = (x1, y1, x2, y2, px, py) => {\n    x2 -= x1;\n    y2 -= y1;\n    px -= x1;\n    py -= y1;\n    let ccw = px * y2 - py * x2;\n    if (ccw == 0.0) {\n        ccw = px * x2 + py * y2;\n        if (ccw > 0.0) {\n            px -= x2;\n            py -= y2;\n            ccw = px * x2 + py * y2;\n            if (ccw < 0.0) {\n                ccw = 0.0;\n            }\n        }\n    }\n    return ccw < 0.0 ? -1 : ccw > 0.0 ? 1 : 0;\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1735, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1741, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/Dictionary.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport ObjectIdentity from './ObjectIdentity';\n/**\n * A wrapper class for an associative array with object keys.\n *\n * Note: This implementation uses {@link ObjectIdentity} to turn object keys into strings.\n *\n */\nclass Dictionary {\n    constructor() {\n        /**\n         * Stores the (key, value) pairs in this dictionary.\n         */\n        this.map = {};\n        this.clear();\n    }\n    /**\n     * Clears the dictionary.\n     */\n    clear() {\n        this.map = {};\n    }\n    /**\n     * Returns the value for the given key.\n     */\n    get(key) {\n        const id = ObjectIdentity.get(key);\n        return this.map[id] ?? null;\n    }\n    /**\n     * Stores the value under the given key and returns the previous\n     * value for that key.\n     */\n    put(key, value) {\n        const id = ObjectIdentity.get(key);\n        const previous = this.map[id];\n        this.map[id] = value;\n        return previous ?? null;\n    }\n    /**\n     * Removes the value for the given key and returns the value that\n     * has been removed.\n     */\n    remove(key) {\n        const id = ObjectIdentity.get(key);\n        const previous = this.map[id];\n        delete this.map[id];\n        return previous ?? null;\n    }\n    /**\n     * Returns all keys as an array.\n     */\n    getKeys() {\n        const result = [];\n        for (const key in this.map) {\n            result.push(key);\n        }\n        return result;\n    }\n    /**\n     * Returns all values as an array.\n     */\n    getValues() {\n        const result = [];\n        for (const key in this.map) {\n            result.push(this.map[key]);\n        }\n        return result;\n    }\n    /**\n     * Visits all entries in the dictionary using the given function with the\n     * following signature: (key, value)=> where key is a string and\n     * value is an object.\n     *\n     * @param visitor A function that takes the key and value as arguments.\n     */\n    visit(visitor) {\n        for (const key in this.map) {\n            visitor(key, this.map[key]);\n        }\n    }\n}\nexport default Dictionary;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;;AACA;;AACA;;;;;CAKC,GACD,MAAM;IACF,aAAc;QACV;;SAEC,GACD,IAAI,CAAC,GAAG,GAAG,CAAC;QACZ,IAAI,CAAC,KAAK;IACd;IACA;;KAEC,GACD,QAAQ;QACJ,IAAI,CAAC,GAAG,GAAG,CAAC;IAChB;IACA;;KAEC,GACD,IAAI,GAAG,EAAE;QACL,MAAM,KAAK,mKAAA,CAAA,UAAc,CAAC,GAAG,CAAC;QAC9B,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI;IAC3B;IACA;;;KAGC,GACD,IAAI,GAAG,EAAE,KAAK,EAAE;QACZ,MAAM,KAAK,mKAAA,CAAA,UAAc,CAAC,GAAG,CAAC;QAC9B,MAAM,WAAW,IAAI,CAAC,GAAG,CAAC,GAAG;QAC7B,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;QACf,OAAO,YAAY;IACvB;IACA;;;KAGC,GACD,OAAO,GAAG,EAAE;QACR,MAAM,KAAK,mKAAA,CAAA,UAAc,CAAC,GAAG,CAAC;QAC9B,MAAM,WAAW,IAAI,CAAC,GAAG,CAAC,GAAG;QAC7B,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG;QACnB,OAAO,YAAY;IACvB;IACA;;KAEC,GACD,UAAU;QACN,MAAM,SAAS,EAAE;QACjB,IAAK,MAAM,OAAO,IAAI,CAAC,GAAG,CAAE;YACxB,OAAO,IAAI,CAAC;QAChB;QACA,OAAO;IACX;IACA;;KAEC,GACD,YAAY;QACR,MAAM,SAAS,EAAE;QACjB,IAAK,MAAM,OAAO,IAAI,CAAC,GAAG,CAAE;YACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI;QAC7B;QACA,OAAO;IACX;IACA;;;;;;KAMC,GACD,MAAM,OAAO,EAAE;QACX,IAAK,MAAM,OAAO,IAAI,CAAC,GAAG,CAAE;YACxB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI;QAC9B;IACJ;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 1834, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1840, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/styleUtils.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Client from '../Client';\nimport { ALIGN, DEFAULT_FONTFAMILY, DEFAULT_FONTSIZE, FONT, LINE_HEIGHT, } from './Constants';\nimport Point from '../view/geometry/Point';\nimport Dictionary from './Dictionary';\nimport CellPath from '../view/cell/CellPath';\nimport Rectangle from '../view/geometry/Rectangle';\n/**\n * Removes the cursors from the style of the given DOM node and its\n * descendants.\n *\n * @param element DOM node to remove the cursor style from.\n */\nexport const removeCursors = (element) => {\n    if (element.style) {\n        element.style.cursor = '';\n    }\n    const children = element.children;\n    if (children) {\n        const childCount = children.length;\n        for (let i = 0; i < childCount; i += 1) {\n            removeCursors(children[i]);\n        }\n    }\n};\n/**\n * Returns the current style of the specified element.\n *\n * @param element DOM node whose current style should be returned.\n */\nexport const getCurrentStyle = (element) => {\n    return !element || element.toString() === '[object ShadowRoot]'\n        ? null\n        : window.getComputedStyle(element, '');\n};\n/**\n * Function: parseCssNumber\n *\n * Parses the given CSS numeric value adding handling for the values thin,\n * medium and thick (2, 4 and 6).\n */\nexport const parseCssNumber = (value) => {\n    if (value === 'thin') {\n        value = '2';\n    }\n    else if (value === 'medium') {\n        value = '4';\n    }\n    else if (value === 'thick') {\n        value = '6';\n    }\n    let n = parseFloat(value);\n    if (Number.isNaN(n)) {\n        n = 0;\n    }\n    return n;\n};\n/**\n * Function: setPrefixedStyle\n *\n * Adds the given style with the standard name and an optional vendor prefix for the current\n * browser.\n *\n * ```javascript\n * mxUtils.setPrefixedStyle(node.style, 'transformOrigin', '0% 0%');\n * ```\n */\nexport const setPrefixedStyle = (style, name, value) => {\n    let prefix = null;\n    if (Client.IS_SF || Client.IS_GC) {\n        prefix = 'Webkit';\n    }\n    else if (Client.IS_MT) {\n        prefix = 'Moz';\n    }\n    style.setProperty(name, value);\n    if (prefix !== null && name.length > 0) {\n        name = prefix + name.substring(0, 1).toUpperCase() + name.substring(1);\n        style.setProperty(name, value);\n    }\n};\n/**\n * Function: hasScrollbars\n *\n * Returns true if the overflow CSS property of the given node is either\n * scroll or auto.\n *\n * @param node DOM node whose style should be checked for scrollbars.\n */\nexport const hasScrollbars = (node) => {\n    const style = getCurrentStyle(node);\n    return !!style && (style.overflow === 'scroll' || style.overflow === 'auto');\n};\n/**\n * Returns the client size for the current document as an {@link Rectangle}.\n */\nexport const getDocumentSize = () => {\n    const b = document.body;\n    const d = document.documentElement;\n    try {\n        return new Rectangle(0, 0, b.clientWidth ?? d.clientWidth, Math.max(b.clientHeight ?? 0, d.clientHeight));\n    }\n    catch (e) {\n        return new Rectangle();\n    }\n};\n/**\n * Makes sure the given node is inside the visible area of the window. This\n * is done by setting the left and top in the style.\n */\nexport const fit = (node) => {\n    const ds = getDocumentSize();\n    const left = node.offsetLeft;\n    const width = node.offsetWidth;\n    const offset = getDocumentScrollOrigin(node.ownerDocument);\n    const sl = offset.x;\n    const st = offset.y;\n    const right = sl + ds.width;\n    if (left + width > right) {\n        node.style.left = `${Math.max(sl, right - width)}px`;\n    }\n    const top = node.offsetTop;\n    const height = node.offsetHeight;\n    const bottom = st + ds.height;\n    if (top + height > bottom) {\n        node.style.top = `${Math.max(st, bottom - height)}px`;\n    }\n};\n/**\n * Returns the offset for the specified container as an {@link Point}. The\n * offset is the distance from the top left corner of the container to the\n * top left corner of the document.\n *\n * @param container DOM node to return the offset for.\n * @param scollOffset Optional boolean to add the scroll offset of the document.\n * Default is false.\n */\nexport const getOffset = (container, scrollOffset = false) => {\n    let offsetLeft = 0;\n    let offsetTop = 0;\n    // Ignores document scroll origin for fixed elements\n    let fixed = false;\n    let node = container;\n    const b = document.body;\n    const d = document.documentElement;\n    while (node != null && node != b && node != d && !fixed) {\n        const style = getCurrentStyle(node);\n        if (style != null) {\n            fixed = fixed || style.position == 'fixed';\n        }\n        node = node.parentNode;\n    }\n    if (!scrollOffset && !fixed) {\n        const offset = getDocumentScrollOrigin(container.ownerDocument);\n        offsetLeft += offset.x;\n        offsetTop += offset.y;\n    }\n    const r = container.getBoundingClientRect();\n    if (r != null) {\n        offsetLeft += r.left;\n        offsetTop += r.top;\n    }\n    return new Point(offsetLeft, offsetTop);\n};\n/**\n * Returns the scroll origin of the given document or the current document\n * if no document is given.\n */\nexport const getDocumentScrollOrigin = (doc) => {\n    // @ts-ignore 'parentWindow' is an unknown property.\n    const wnd = doc.defaultView || doc.parentWindow;\n    const x = wnd != null && window.pageXOffset !== undefined\n        ? window.pageXOffset\n        : (document.documentElement || document.body.parentNode || document.body)\n            .scrollLeft;\n    const y = wnd != null && window.pageYOffset !== undefined\n        ? window.pageYOffset\n        : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n    return new Point(x, y);\n};\n/**\n * Returns the top, left corner of the viewrect as an {@link Point}.\n *\n * @param node DOM node whose scroll origin should be returned.\n * @param includeAncestors Whether the scroll origin of the ancestors should be\n * included. Default is false.\n * @param includeDocument Whether the scroll origin of the document should be\n * included. Default is true.\n */\nexport const getScrollOrigin = (node = null, includeAncestors = false, includeDocument = true) => {\n    const doc = node != null ? node.ownerDocument : document;\n    const b = doc.body;\n    const d = doc.documentElement;\n    const result = new Point();\n    let fixed = false;\n    while (node != null && node != b && node != d) {\n        if (!Number.isNaN(node.scrollLeft) && !Number.isNaN(node.scrollTop)) {\n            result.x += node.scrollLeft;\n            result.y += node.scrollTop;\n        }\n        const style = getCurrentStyle(node);\n        if (style != null) {\n            fixed = fixed || style.position == 'fixed';\n        }\n        node = includeAncestors ? node.parentNode : null;\n    }\n    if (!fixed && includeDocument) {\n        const origin = getDocumentScrollOrigin(doc);\n        result.x += origin.x;\n        result.y += origin.y;\n    }\n    return result;\n};\n/**\n * Converts the specified point (x, y) using the offset of the specified\n * container and returns a new {@link Point} with the result.\n *\n * ```javascript\n * let pt = mxUtils.convertPoint(graph.container,\n *   mxEvent.getClientX(evt), mxEvent.getClientY(evt));\n * ```\n *\n * @param container DOM node to use for the offset.\n * @param x X-coordinate of the point to be converted.\n * @param y Y-coordinate of the point to be converted.\n */\nexport const convertPoint = (container, x, y) => {\n    const origin = getScrollOrigin(container, false);\n    const offset = getOffset(container);\n    offset.x -= origin.x;\n    offset.y -= origin.y;\n    return new Point(x - offset.x, y - offset.y);\n};\n/**\n * Assigns the value for the given key in the styles of the given cells, or\n * removes the key from the styles if the value is null.\n *\n * @param model <Transactions> to execute the transaction in.\n * @param cells Array of {@link Cell}s to be updated.\n * @param key Key of the style to be changed.\n * @param value New value for the given key.\n */\nexport const setCellStyles = (model, cells, key, value) => {\n    if (cells.length > 0) {\n        model.batchUpdate(() => {\n            for (let i = 0; i < cells.length; i += 1) {\n                const cell = cells[i];\n                if (cell) {\n                    // Currently, the style object must be cloned, otherwise model.setStyle does not trigger the change event and the cell state in the view is not updated\n                    const style = cell.getClonedStyle();\n                    style[key] = value;\n                    model.setStyle(cell, style);\n                }\n            }\n        });\n    }\n};\n/**\n * Sets or toggles the flag bit for the given key in the cell's styles.\n * If the `value` parameter is not set, then the flag is toggled.\n *\n * Example that toggles the bold font style:\n *\n * ```javascript\n * const cells = graph.getSelectionCells();\n * setCellStyleFlags(graph.model,\n *       cells,\n *       'fontStyle',\n *       constants.FONT.BOLD);\n * ```\n *\n * @param model <Transactions> that contains the cells.\n * @param cells Array of {@link Cell}s to change the style for.\n * @param key Key of the style to be changed.\n * @param flag Integer for the bit to be changed.\n * @param value Optional boolean value for the flag.\n */\nexport const setCellStyleFlags = (model, cells, key, flag, value) => {\n    if (cells.length > 0) {\n        model.batchUpdate(() => {\n            for (let i = 0; i < cells.length; i += 1) {\n                const cell = cells[i];\n                if (cell) {\n                    // Currently, the style object must be cloned, otherwise model.setStyle does not trigger the change event and the cell state in the view is not updated\n                    const style = setStyleFlag(cell.getClonedStyle(), key, flag, value);\n                    model.setStyle(cell, style);\n                }\n            }\n        });\n    }\n};\n/**\n * Sets or toggles the flag bit for the given key in the cell's style.\n * If the `value` parameter is not set, then the flag is toggled.\n *\n * @param style The style of the Cell.\n * @param key Key of the style to be changed.\n * @param flag Integer for the bit to be changed.\n * @param value Optional boolean value for the given flag.\n */\nexport const setStyleFlag = (style, key, flag, value) => {\n    const v = style[key];\n    if (v === undefined) {\n        style[key] = value === undefined || value ? flag : 0;\n    }\n    else {\n        if (value === undefined) {\n            style[key] = v ^ flag;\n        }\n        else if (value) {\n            style[key] = v | flag;\n        }\n        else {\n            style[key] = v & ~flag;\n        }\n    }\n    return style;\n};\n/**\n * Sets the opacity of the specified DOM node to the given value in %.\n *\n * @param node DOM node to set the opacity for.\n * @param value Opacity in %. Possible values are between 0 and 100.\n */\nexport const setOpacity = (node, value) => {\n    node.style.opacity = String(value / 100);\n};\n/**\n * @param value the value to check.\n * @param mask the binary mask to apply.\n * @returns `true` if the value matches the binary mask.\n * @private Subject to change prior being part of the public API.\n */\nexport const matchBinaryMask = (value, mask) => {\n    return (value & mask) === mask;\n};\n/**\n * Returns an {@link Rectangle} with the size (width and height in pixels) of\n * the given string. The string may contain HTML markup. Newlines should be\n * converted to <br> before calling this method. The caller is responsible\n * for sanitizing the HTML markup.\n *\n * Example:\n *\n * ```javascript\n * let label = graph.getLabel(cell).replace(/\\n/g, \"<br>\");\n * let size = graph.getSizeForString(label);\n * ```\n *\n * @param text String whose size should be returned.\n * @param fontSize Integer that specifies the font size in pixels. Default is\n * {@link Constants#DEFAULT_FONTSIZE}.\n * @param fontFamily String that specifies the name of the font family. Default\n * is {@link Constants#DEFAULT_FONTFAMILY}.\n * @param textWidth Optional width for text wrapping.\n * @param fontStyle Optional font style.\n */\nexport const getSizeForString = (text, fontSize = DEFAULT_FONTSIZE, fontFamily = DEFAULT_FONTFAMILY, textWidth = null, fontStyle = null) => {\n    const div = document.createElement('div');\n    // Sets the font size and family\n    div.style.fontFamily = fontFamily;\n    div.style.fontSize = `${Math.round(fontSize)}px`;\n    div.style.lineHeight = `${Math.round(fontSize * LINE_HEIGHT)}px`;\n    // Sets the font style\n    if (fontStyle !== null) {\n        matchBinaryMask(fontStyle, FONT.BOLD) && (div.style.fontWeight = 'bold');\n        matchBinaryMask(fontStyle, FONT.ITALIC) && (div.style.fontWeight = 'italic');\n        const txtDecor = [];\n        matchBinaryMask(fontStyle, FONT.UNDERLINE) && txtDecor.push('underline');\n        matchBinaryMask(fontStyle, FONT.STRIKETHROUGH) && txtDecor.push('line-through');\n        txtDecor.length > 0 && (div.style.textDecoration = txtDecor.join(' '));\n    }\n    // Disables block layout and outside wrapping and hides the div\n    div.style.position = 'absolute';\n    div.style.visibility = 'hidden';\n    div.style.display = 'inline-block';\n    if (textWidth !== null) {\n        div.style.width = `${textWidth}px`;\n        div.style.whiteSpace = 'normal';\n    }\n    else {\n        div.style.whiteSpace = 'nowrap';\n    }\n    // Adds the text and inserts into DOM for updating of size\n    div.innerHTML = text;\n    document.body.appendChild(div);\n    // Gets the size and removes from DOM\n    const size = new Rectangle(0, 0, div.offsetWidth, div.offsetHeight);\n    document.body.removeChild(div);\n    return size;\n};\n/**\n * Sorts the given cells according to the order in the cell hierarchy.\n * Ascending is optional and defaults to true.\n */\nexport const sortCells = (cells, ascending = true) => {\n    const lookup = new Dictionary();\n    cells.sort((o1, o2) => {\n        let p1 = lookup.get(o1);\n        if (p1 == null) {\n            p1 = CellPath.create(o1).split(CellPath.PATH_SEPARATOR);\n            lookup.put(o1, p1);\n        }\n        let p2 = lookup.get(o2);\n        if (p2 == null) {\n            p2 = CellPath.create(o2).split(CellPath.PATH_SEPARATOR);\n            lookup.put(o2, p2);\n        }\n        const comp = CellPath.compare(p1, p2);\n        return comp == 0 ? 0 : comp > 0 == ascending ? 1 : -1;\n    });\n    return cells;\n};\n/**\n * Returns an {@link Point} that represents the horizontal and vertical alignment\n * for numeric computations. X is -0.5 for center, -1 for right and 0 for\n * left alignment. Y is -0.5 for middle, -1 for bottom and 0 for top\n * alignment. Default values for missing arguments is top, left.\n */\nexport const getAlignmentAsPoint = (align, valign) => {\n    let dx = -0.5;\n    let dy = -0.5;\n    // Horizontal alignment\n    if (align === ALIGN.LEFT) {\n        dx = 0;\n    }\n    else if (align === ALIGN.RIGHT) {\n        dx = -1;\n    }\n    // Vertical alignment\n    if (valign === ALIGN.TOP) {\n        dy = 0;\n    }\n    else if (valign === ALIGN.BOTTOM) {\n        dy = -1;\n    }\n    return new Point(dx, dy);\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2151, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/arrayUtils.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Dictionary from './Dictionary';\n/**\n * Removes all occurrences of the given object in the given array or\n * object. If there are multiple occurrences of the object, be they\n * associative or as an array entry, all occurrences are removed from\n * the array or deleted from the object. By removing the object from\n * the array, all elements following the removed element are shifted\n * by one step towards the beginning of the array.\n *\n * The length of arrays is not modified inside this function.\n *\n * @param obj Object to find in the given array.\n * @param array Array to check for the given obj.\n */\nexport const remove = (obj, array) => {\n    let result = null;\n    if (typeof array === 'object') {\n        let index = array.indexOf(obj);\n        while (index >= 0) {\n            array.splice(index, 1);\n            result = obj;\n            index = array.indexOf(obj);\n        }\n    }\n    for (const key in array) {\n        if (array[key] == obj) {\n            delete array[key];\n            result = obj;\n        }\n    }\n    return result;\n};\n/**\n * Compares all Point in the given lists.\n *\n * @param a Array of <Point> to be compared.\n * @param b Array of <Point> to be compared.\n */\nexport const equalPoints = (a, b) => {\n    if ((!a && b) || (a && !b) || (a && b && a.length != b.length)) {\n        return false;\n    }\n    if (a && b) {\n        for (let i = 0; i < a.length; i += 1) {\n            const p = a[i];\n            if (!p || (p && !p.equals(b[i])))\n                return false;\n        }\n    }\n    return true;\n};\n/**\n * Returns true if all properties of the given objects are equal. Values\n * with NaN are equal to NaN and unequal to any other value.\n *\n * @param a First object to be compared.\n * @param b Second object to be compared.\n */\nexport const equalEntries = (a, b) => {\n    // Counts keys in b to check if all values have been compared\n    let count = 0;\n    if ((!a && b) || (a && !b) || (a && b && a.length != b.length)) {\n        return false;\n    }\n    if (a && b) {\n        for (const key in b) {\n            count++;\n        }\n        for (const key in a) {\n            count--;\n            if ((!Number.isNaN(a[key]) || !Number.isNaN(b[key])) && a[key] !== b[key]) {\n                return false;\n            }\n        }\n    }\n    return count === 0;\n};\n/**\n * Removes all duplicates from the given array.\n */\nexport const removeDuplicates = (arr) => {\n    const dict = new Dictionary();\n    const result = [];\n    for (let i = 0; i < arr.length; i += 1) {\n        if (!dict.get(arr[i])) {\n            result.push(arr[i]);\n            dict.put(arr[i], true);\n        }\n    }\n    return result;\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;;;;;AACA;;AAcO,MAAM,SAAS,CAAC,KAAK;IACxB,IAAI,SAAS;IACb,IAAI,OAAO,UAAU,UAAU;QAC3B,IAAI,QAAQ,MAAM,OAAO,CAAC;QAC1B,MAAO,SAAS,EAAG;YACf,MAAM,MAAM,CAAC,OAAO;YACpB,SAAS;YACT,QAAQ,MAAM,OAAO,CAAC;QAC1B;IACJ;IACA,IAAK,MAAM,OAAO,MAAO;QACrB,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK;YACnB,OAAO,KAAK,CAAC,IAAI;YACjB,SAAS;QACb;IACJ;IACA,OAAO;AACX;AAOO,MAAM,cAAc,CAAC,GAAG;IAC3B,IAAI,AAAC,CAAC,KAAK,KAAO,KAAK,CAAC,KAAO,KAAK,KAAK,EAAE,MAAM,IAAI,EAAE,MAAM,EAAG;QAC5D,OAAO;IACX;IACA,IAAI,KAAK,GAAG;QACR,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,KAAK,EAAG;YAClC,MAAM,IAAI,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,KAAM,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAC1B,OAAO;QACf;IACJ;IACA,OAAO;AACX;AAQO,MAAM,eAAe,CAAC,GAAG;IAC5B,6DAA6D;IAC7D,IAAI,QAAQ;IACZ,IAAI,AAAC,CAAC,KAAK,KAAO,KAAK,CAAC,KAAO,KAAK,KAAK,EAAE,MAAM,IAAI,EAAE,MAAM,EAAG;QAC5D,OAAO;IACX;IACA,IAAI,KAAK,GAAG;QACR,IAAK,MAAM,OAAO,EAAG;YACjB;QACJ;QACA,IAAK,MAAM,OAAO,EAAG;YACjB;YACA,IAAI,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE;gBACvE,OAAO;YACX;QACJ;IACJ;IACA,OAAO,UAAU;AACrB;AAIO,MAAM,mBAAmB,CAAC;IAC7B,MAAM,OAAO,IAAI,+JAAA,CAAA,UAAU;IAC3B,MAAM,SAAS,EAAE;IACjB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,KAAK,EAAG;QACpC,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG;YACnB,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE;YAClB,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE;QACrB;IACJ;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 2235, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2241, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/MaxXmlRequest.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2020, JGraph Ltd\nCopyright (c) 2006-2020, draw.io AG\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { write } from './domUtils';\n/**\n * XML HTTP request wrapper. See also: {@link mxUtils.get}, {@link mxUtils.post} and\n * {@link mxUtils.load}. This class provides a cross-browser abstraction for Ajax\n * requests.\n *\n * ### Encoding:\n *\n * For encoding parameter values, the built-in encodeURIComponent JavaScript\n * method must be used. For automatic encoding of post data in {@link Editor} the\n * {@link Editor.escapePostData} switch can be set to true (default). The encoding\n * will be carried out using the conte type of the page. That is, the page\n * containting the editor should contain a meta tag in the header, eg.\n * <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n *\n * @example\n * ```JavaScript\n * var onload = function(req)\n * {\n *   mxUtils.alert(req.getDocumentElement());\n * }\n *\n * var onerror = function(req)\n * {\n *   mxUtils.alert('Error');\n * }\n * new MaxXmlRequest(url, 'key=value').send(onload, onerror);\n * ```\n *\n * Sends an asynchronous POST request to the specified URL.\n *\n * @example\n * ```JavaScript\n * var req = new MaxXmlRequest(url, 'key=value', 'POST', false);\n * req.send();\n * mxUtils.alert(req.getDocumentElement());\n * ```\n *\n * Sends a synchronous POST request to the specified URL.\n *\n * @example\n * ```JavaScript\n * var encoder = new Codec();\n * var result = encoder.encode(graph.getDataModel());\n * var xml = encodeURIComponent(mxUtils.getXml(result));\n * new MaxXmlRequest(url, 'xml='+xml).send();\n * ```\n *\n * Sends an encoded graph model to the specified URL using xml as the\n * parameter name. The parameter can then be retrieved in C# as follows:\n *\n * ```javascript\n * string xml = HttpUtility.UrlDecode(context.Request.Params[\"xml\"]);\n * ```\n *\n * Or in Java as follows:\n *\n * ```javascript\n * String xml = URLDecoder.decode(request.getParameter(\"xml\"), \"UTF-8\").replace(\"\n\", \"&#xa;\");\n * ```\n *\n * Note that the linefeeds should only be replaced if the XML is\n * processed in Java, for example when creating an image.\n */\nclass MaxXmlRequest {\n    constructor(url, params = null, method = 'POST', async = true, username = null, password = null) {\n        /**\n         * Boolean indicating if the request is binary. This option is ignored in IE.\n         * In all other browsers the requested mime type is set to\n         * text/plain; charset=x-user-defined. Default is false.\n         *\n         * @default false\n         */\n        this.binary = false;\n        /**\n         * Specifies if withCredentials should be used in HTML5-compliant browsers. Default is false.\n         *\n         * @default false\n         */\n        this.withCredentials = false;\n        /**\n         * Holds the inner, browser-specific request object.\n         */\n        this.request = null;\n        /**\n         * Specifies if request values should be decoded as URIs before setting the\n         * textarea value in {@link simulate}. Defaults to false for backwards compatibility,\n         * to avoid another decode on the server this should be set to true.\n         */\n        this.decodeSimulateValues = false;\n        this.url = url;\n        this.params = params;\n        this.method = method || 'POST';\n        this.async = async;\n        this.username = username;\n        this.password = password;\n    }\n    /**\n     * Returns {@link binary}.\n     */\n    isBinary() {\n        return this.binary;\n    }\n    /**\n     * Sets {@link binary}.\n     *\n     * @param value\n     */\n    setBinary(value) {\n        this.binary = value;\n    }\n    /**\n     * Returns the response as a string.\n     */\n    getText() {\n        return this.request.responseText;\n    }\n    /**\n     * Returns true if the response is ready.\n     */\n    isReady() {\n        return this.request.readyState === 4;\n    }\n    /**\n     * Returns the document element of the response XML document.\n     */\n    getDocumentElement() {\n        const doc = this.getXml();\n        if (doc != null) {\n            return doc.documentElement;\n        }\n        return null;\n    }\n    /**\n     * Returns the response as an XML document. Use {@link getDocumentElement} to get\n     * the document element of the XML document.\n     */\n    getXml() {\n        let xml = this.request.responseXML;\n        // Handles missing response headers in IE, the first condition handles\n        // the case where responseXML is there, but using its nodes leads to\n        // type errors in the CellCodec when putting the nodes into a new\n        // document. This happens in IE9 standards mode and with XML user\n        // objects only, as they are used directly as values in cells.\n        if (xml == null || xml.documentElement == null) {\n            xml = new DOMParser().parseFromString(this.request.responseText, 'text/xml');\n        }\n        return xml;\n    }\n    /**\n     * Returns the status as a number, eg. 404 for \"Not found\" or 200 for \"OK\".\n     * Note: The NS_ERROR_NOT_AVAILABLE for invalid responses cannot be cought.\n     */\n    getStatus() {\n        return this.request != null ? this.request.status : null;\n    }\n    /**\n     * Creates and returns the inner {@link request} object.\n     */\n    create() {\n        const req = new XMLHttpRequest();\n        // TODO: Check for overrideMimeType required here?\n        if (this.isBinary() && req.overrideMimeType) {\n            req.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n        return req;\n    }\n    /**\n     * Send the <request> to the target URL using the specified functions to\n     * process the response asychronously.\n     *\n     * Note: Due to technical limitations, onerror is currently ignored.\n     *\n     * @param onload Function to be invoked if a successful response was received.\n     * @param onerror Function to be called on any error. Unused in this implementation, intended for overriden function.\n     * @param timeout Optional timeout in ms before calling ontimeout.\n     * @param ontimeout Optional function to execute on timeout.\n     */\n    send(onload = null, onerror = null, timeout = null, ontimeout = null) {\n        this.request = this.create();\n        if (this.request != null) {\n            if (onload != null) {\n                this.request.onreadystatechange = () => {\n                    if (this.isReady()) {\n                        onload(this);\n                        this.request.onreadystatechange = null;\n                    }\n                };\n            }\n            this.request.open(this.method, this.url, this.async, this.username, this.password);\n            this.setRequestHeaders(this.request, this.params);\n            if (window.XMLHttpRequest && this.withCredentials) {\n                this.request.withCredentials = 'true';\n            }\n            if (window.XMLHttpRequest && timeout != null && ontimeout != null) {\n                this.request.timeout = timeout;\n                this.request.ontimeout = ontimeout;\n            }\n            this.request.send(this.params);\n        }\n    }\n    /**\n     * Sets the headers for the given request and parameters. This sets the\n     * content-type to application/x-www-form-urlencoded if any params exist.\n     *\n     * @example\n     * ```JavaScript\n     * request.setRequestHeaders = function(request, params)\n     * {\n     *   if (params != null)\n     *   {\n     *     request.setRequestHeader('Content-Type',\n     *             'multipart/form-data');\n     *     request.setRequestHeader('Content-Length',\n     *             params.length);\n     *   }\n     * };\n     * ```\n     *\n     * Use the code above before calling {@link send} if you require a\n     * multipart/form-data request.\n     *\n     * @param request\n     * @param params\n     */\n    setRequestHeaders(request, params) {\n        if (params != null) {\n            request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n        }\n    }\n    /**\n     * Creates and posts a request to the given target URL using a dynamically\n     * created form inside the given document.\n     *\n     * @param doc Document that contains the form element.\n     * @param target Target to send the form result to.\n     */\n    simulate(doc, target = null) {\n        doc = doc || document;\n        let old = null;\n        if (doc === document) {\n            old = window.onbeforeunload;\n            window.onbeforeunload = null;\n        }\n        const form = doc.createElement('form');\n        form.setAttribute('method', this.method);\n        form.setAttribute('action', this.url);\n        if (target != null) {\n            form.setAttribute('target', target);\n        }\n        form.style.display = 'none';\n        form.style.visibility = 'hidden';\n        const params = this.params;\n        const pars = params.indexOf('&') > 0 ? params.split('&') : params.split(' ');\n        // Adds the parameters as textareas to the form\n        for (let i = 0; i < pars.length; i += 1) {\n            const pos = pars[i].indexOf('=');\n            if (pos > 0) {\n                const name = pars[i].substring(0, pos);\n                let value = pars[i].substring(pos + 1);\n                if (this.decodeSimulateValues) {\n                    value = decodeURIComponent(value);\n                }\n                const textarea = doc.createElement('textarea');\n                textarea.setAttribute('wrap', 'off');\n                textarea.setAttribute('name', name);\n                write(textarea, value);\n                form.appendChild(textarea);\n            }\n        }\n        doc.body.appendChild(form);\n        form.submit();\n        if (form.parentNode != null) {\n            form.parentNode.removeChild(form);\n        }\n        if (old != null) {\n            window.onbeforeunload = old;\n        }\n    }\n}\n/**\n * Loads the specified URL *synchronously* and returns the <MaxXmlRequest>.\n * Throws an exception if the file cannot be loaded. See {@link Utils#get} for\n * an asynchronous implementation.\n *\n * Example:\n *\n * ```javascript\n * try\n * {\n *   let req = mxUtils.load(filename);\n *   let root = req.getDocumentElement();\n *   // Process XML DOM...\n * }\n * catch (ex)\n * {\n *   mxUtils.alert('Cannot load '+filename+': '+ex);\n * }\n * ```\n *\n * @param url URL to get the data from.\n */\nexport const load = (url) => {\n    const req = new MaxXmlRequest(url, null, 'GET', false);\n    req.send();\n    return req;\n};\n/**\n * Loads the specified URL *asynchronously* and invokes the given functions\n * depending on the request status. Returns the <MaxXmlRequest> in use. Both\n * functions take the <MaxXmlRequest> as the only parameter. See\n * {@link Utils#load} for a synchronous implementation.\n *\n * Example:\n *\n * ```javascript\n * mxUtils.get(url, (req)=>\n * {\n *    let node = req.getDocumentElement();\n *    // Process XML DOM...\n * });\n * ```\n *\n * So for example, to load a diagram into an existing graph model, the\n * following code is used.\n *\n * ```javascript\n * mxUtils.get(url, (req)=>\n * {\n *   let node = req.getDocumentElement();\n *   let dec = new Codec(node.ownerDocument);\n *   dec.decode(node, graph.getDataModel());\n * });\n * ```\n *\n * @param url URL to get the data from.\n * @param onload Optional function to execute for a successful response.\n * @param onerror Optional function to execute on error.\n * @param binary Optional boolean parameter that specifies if the request is\n * binary.\n * @param timeout Optional timeout in ms before calling ontimeout.\n * @param ontimeout Optional function to execute on timeout.\n * @param headers Optional with headers, eg. {'Authorization': 'token xyz'}\n */\nexport const get = (url, onload = null, onerror = null, binary = false, timeout = null, ontimeout = null, headers = null) => {\n    const req = new MaxXmlRequest(url, null, 'GET');\n    const { setRequestHeaders } = req;\n    if (headers) {\n        req.setRequestHeaders = (request, params) => {\n            setRequestHeaders.apply(this, [request, params]);\n            for (const key in headers) {\n                request.setRequestHeader(key, headers[key]);\n            }\n        };\n    }\n    if (binary != null) {\n        req.setBinary(binary);\n    }\n    req.send(onload, onerror, timeout, ontimeout);\n    return req;\n};\n/**\n * Loads the URLs in the given array *asynchronously* and invokes the given function\n * if all requests returned with a valid 2xx status. The error handler is invoked\n * once on the first error or invalid response.\n *\n * @param urls Array of URLs to be loaded.\n * @param onload Callback with array of {@link XmlRequests}.\n * @param onerror Optional function to execute on error.\n */\nexport const getAll = (urls, onload, onerror) => {\n    let remain = urls.length;\n    const result = [];\n    let errors = 0;\n    const err = () => {\n        if (errors == 0 && onerror != null) {\n            onerror();\n        }\n        errors++;\n    };\n    for (let i = 0; i < urls.length; i += 1) {\n        ((url, index) => {\n            get(url, (req) => {\n                const status = req.getStatus();\n                if (status < 200 || status > 299) {\n                    err();\n                }\n                else {\n                    result[index] = req;\n                    remain--;\n                    if (remain == 0) {\n                        onload(result);\n                    }\n                }\n            }, err);\n        })(urls[i], i);\n    }\n    if (remain == 0) {\n        onload(result);\n    }\n};\n/**\n * Posts the specified params to the given URL *asynchronously* and invokes\n * the given functions depending on the request status. Returns the\n * <MaxXmlRequest> in use. Both functions take the <MaxXmlRequest> as the\n * only parameter. Make sure to use encodeURIComponent for the parameter\n * values.\n *\n * Example:\n *\n * ```javascript\n * mxUtils.post(url, 'key=value', (req)=>\n * {\n *   mxUtils.alert('Ready: '+req.isReady()+' Status: '+req.getStatus());\n *  // Process req.getDocumentElement() using DOM API if OK...\n * });\n * ```\n *\n * @param url URL to get the data from.\n * @param params Parameters for the post request.\n * @param onload Optional function to execute for a successful response.\n * @param onerror Optional function to execute on error.\n */\nexport const post = (url, params = null, onload, onerror = null) => {\n    return new MaxXmlRequest(url, params).send(onload, onerror);\n};\n/**\n * Submits the given parameters to the specified URL using\n * <MaxXmlRequest.simulate> and returns the <MaxXmlRequest>.\n * Make sure to use encodeURIComponent for the parameter\n * values.\n *\n * @param url URL to get the data from.\n * @param params Parameters for the form.\n * @param doc Document to create the form in.\n * @param target Target to send the form result to.\n */\nexport const submit = (url, params, doc, target) => {\n    return new MaxXmlRequest(url, params).simulate(doc, target);\n};\nexport default MaxXmlRequest;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2593, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2599, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/xmlUtils.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { DIALECT, NODETYPE, NS_SVG } from './Constants';\nimport Point from '../view/geometry/Point';\nimport { htmlEntities, trim } from './StringUtils';\nimport TemporaryCellStates from '../view/cell/TemporaryCellStates';\nimport { getTextContent } from './domUtils';\nimport Codec from '../serialization/Codec';\n/**\n * Returns a new, empty XML document.\n */\nexport const createXmlDocument = () => {\n    return document.implementation.createDocument('', '', null);\n};\nexport const parseXml = (xmlString) => {\n    return new DOMParser().parseFromString(xmlString, 'text/xml');\n};\nexport const getViewXml = (graph, scale = 1, cells = null, x0 = 0, y0 = 0) => {\n    if (cells == null) {\n        const model = graph.getDataModel();\n        cells = [model.getRoot()];\n    }\n    const view = graph.getView();\n    let result = null;\n    // Disables events on the view\n    const eventsEnabled = view.isEventsEnabled();\n    view.setEventsEnabled(false);\n    // Workaround for label bounds not taken into account for image export.\n    // Creates a temporary draw pane which is used for rendering the text.\n    // Text rendering is required for finding the bounds of the labels.\n    const { drawPane } = view;\n    const { overlayPane } = view;\n    if (graph.dialect === DIALECT.SVG) {\n        view.drawPane = document.createElementNS(NS_SVG, 'g');\n        view.canvas.appendChild(view.drawPane);\n        // Redirects cell overlays into temporary container\n        view.overlayPane = document.createElementNS(NS_SVG, 'g');\n        view.canvas.appendChild(view.overlayPane);\n    }\n    else {\n        view.drawPane = view.drawPane.cloneNode(false);\n        view.canvas.appendChild(view.drawPane);\n        // Redirects cell overlays into temporary container\n        view.overlayPane = view.overlayPane.cloneNode(false);\n        view.canvas.appendChild(view.overlayPane);\n    }\n    // Resets the translation\n    const translate = view.getTranslate();\n    view.translate = new Point(x0, y0);\n    // Creates the temporary cell states in the view\n    const temp = new TemporaryCellStates(graph.getView(), scale, cells);\n    try {\n        const enc = new Codec();\n        result = enc.encode(graph.getView());\n    }\n    finally {\n        temp.destroy();\n        view.translate = translate;\n        view.canvas.removeChild(view.drawPane);\n        view.canvas.removeChild(view.overlayPane);\n        view.drawPane = drawPane;\n        view.overlayPane = overlayPane;\n        view.setEventsEnabled(eventsEnabled);\n    }\n    return result;\n};\n/**\n * Returns the XML content of the specified node.\n *\n * All `\\n` are then replaced with the linefeed parameter value.\n *\n * @param node DOM node to return the XML for.\n * @param linefeed Optional string that linefeed are converted into. Default is `&#xa;`.\n */\nexport const getXml = (node, linefeed = '&#xa;') => {\n    const xmlSerializer = new XMLSerializer();\n    let xml = xmlSerializer.serializeToString(node);\n    // Replaces linefeed with HTML Entities.\n    xml = xml.replace(/\\n/g, linefeed);\n    return xml;\n};\n/**\n * Returns a pretty printed string that represents the XML tree for the\n * given node. This method should only be used to print XML for reading,\n * use <getXml> instead to obtain a string for processing.\n *\n * @param node DOM node to return the XML for.\n * @param tab Optional string that specifies the indentation for one level.\n * @param indent Optional string that represents the current indentation.\n * @param newline Optional string that represents a linefeed.\n * @param ns Optional string that represents the target namespace URI.\n */\nexport const getPrettyXml = (node, tab = '  ', indent = '', newline = '\\n', ns = null) => {\n    const result = [];\n    if (node != null) {\n        if (node.namespaceURI != null && node.namespaceURI !== ns) {\n            ns = node.namespaceURI;\n            if (node.getAttribute('xmlns') == null) {\n                node.setAttribute('xmlns', node.namespaceURI);\n            }\n        }\n        if (node.nodeType === NODETYPE.DOCUMENT) {\n            result.push(getPrettyXml(node.documentElement, tab, indent, newline, ns));\n        }\n        else if (node.nodeType === NODETYPE.DOCUMENT_FRAGMENT) {\n            let tmp = node.firstChild;\n            if (tmp != null) {\n                while (tmp != null) {\n                    result.push(getPrettyXml(tmp, tab, indent, newline, ns));\n                    tmp = tmp.nextSibling;\n                }\n            }\n        }\n        else if (node.nodeType === NODETYPE.COMMENT) {\n            const value = getTextContent(node);\n            if (value.length > 0) {\n                result.push(`${indent}<!--${value}-->${newline}`);\n            }\n        }\n        else if (node.nodeType === NODETYPE.TEXT) {\n            const value = trim(getTextContent(node));\n            if (value && value.length > 0) {\n                result.push(indent + htmlEntities(value, false) + newline);\n            }\n        }\n        else if (node.nodeType === NODETYPE.CDATA) {\n            const value = getTextContent(node);\n            if (value.length > 0) {\n                result.push(`${indent}<![CDATA[${value}]]${newline}`);\n            }\n        }\n        else {\n            result.push(`${indent}<${node.nodeName}`);\n            // Creates the string with the node attributes\n            // and converts all HTML entities in the values\n            const attrs = node.attributes;\n            if (attrs != null) {\n                for (let i = 0; i < attrs.length; i += 1) {\n                    const val = htmlEntities(attrs[i].value);\n                    result.push(` ${attrs[i].nodeName}=\"${val}\"`);\n                }\n            }\n            // Recursively creates the XML string for each child\n            // node and appends it here with an indentation\n            let tmp = node.firstChild;\n            if (tmp != null) {\n                result.push(`>${newline}`);\n                while (tmp != null) {\n                    result.push(getPrettyXml(tmp, tab, indent + tab, newline, ns));\n                    tmp = tmp.nextSibling;\n                }\n                result.push(`${indent}</${node.nodeName}>${newline}`);\n            }\n            else {\n                result.push(` />${newline}`);\n            }\n        }\n    }\n    return result.join('');\n};\n/**\n * Returns the first node where attr equals value.\n * This implementation does not use XPath.\n */\nexport const findNode = (node, attr, value) => {\n    if (node.nodeType === NODETYPE.ELEMENT) {\n        const tmp = node.getAttribute(attr);\n        if (tmp && tmp === value) {\n            return node;\n        }\n    }\n    node = node.firstChild;\n    while (node) {\n        const result = findNode(node, attr, value);\n        if (result) {\n            return result;\n        }\n        node = node.nextSibling;\n    }\n    return null;\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2776, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2782, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/UrlConverter.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Converts relative and absolute URLs to absolute URLs with protocol and domain.\n */\nclass UrlConverter {\n    constructor() {\n        /**\n         * Specifies if the converter is enabled. Default is true.\n         */\n        this.enabled = true;\n        /**\n         * Specifies the base URL to be used as a prefix for relative URLs.\n         */\n        this.baseUrl = null;\n        /**\n         * Specifies the base domain to be used as a prefix for absolute URLs.\n         */\n        this.baseDomain = null;\n        // Empty constructor\n    }\n    /**\n     * Private helper function to update the base URL.\n     */\n    updateBaseUrl() {\n        this.baseDomain = `${location.protocol}//${location.host}`;\n        this.baseUrl = this.baseDomain + location.pathname;\n        const tmp = this.baseUrl.lastIndexOf('/');\n        // Strips filename etc\n        if (tmp > 0) {\n            this.baseUrl = this.baseUrl.substring(0, tmp + 1);\n        }\n    }\n    /**\n     * Returns <enabled>.\n     */\n    isEnabled() {\n        return this.enabled;\n    }\n    /**\n     * Sets <enabled>.\n     */\n    setEnabled(value) {\n        this.enabled = value;\n    }\n    /**\n     * Returns <baseUrl>.\n     */\n    getBaseUrl() {\n        return this.baseUrl;\n    }\n    /**\n     * Sets <baseUrl>.\n     */\n    setBaseUrl(value) {\n        this.baseUrl = value;\n    }\n    /**\n     * Returns <baseDomain>.\n     */\n    getBaseDomain() {\n        return this.baseDomain;\n    }\n    /**\n     * Sets <baseDomain>.\n     */\n    setBaseDomain(value) {\n        this.baseDomain = value;\n    }\n    /**\n     * Returns true if the given URL is relative.\n     */\n    isRelativeUrl(url) {\n        return (url &&\n            url.substring(0, 2) !== '//' &&\n            url.substring(0, 7) !== 'http://' &&\n            url.substring(0, 8) !== 'https://' &&\n            url.substring(0, 10) !== 'data:image' &&\n            url.substring(0, 7) !== 'file://');\n    }\n    /**\n     * Converts the given URL to an absolute URL with protol and domain.\n     * Relative URLs are first converted to absolute URLs.\n     */\n    convert(url) {\n        if (this.isEnabled() && this.isRelativeUrl(url)) {\n            if (!this.getBaseUrl()) {\n                this.updateBaseUrl();\n            }\n            if (url.charAt(0) === '/') {\n                url = this.getBaseDomain() + url;\n            }\n            else {\n                url = this.getBaseUrl() + url;\n            }\n        }\n        return url;\n    }\n}\nexport default UrlConverter;\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,GACA;;CAEC;;;AACD,MAAM;IACF,aAAc;QACV;;SAEC,GACD,IAAI,CAAC,OAAO,GAAG;QACf;;SAEC,GACD,IAAI,CAAC,OAAO,GAAG;QACf;;SAEC,GACD,IAAI,CAAC,UAAU,GAAG;IAClB,oBAAoB;IACxB;IACA;;KAEC,GACD,gBAAgB;QACZ,IAAI,CAAC,UAAU,GAAG,GAAG,SAAS,QAAQ,CAAC,EAAE,EAAE,SAAS,IAAI,EAAE;QAC1D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,GAAG,SAAS,QAAQ;QAClD,MAAM,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QACrC,sBAAsB;QACtB,IAAI,MAAM,GAAG;YACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,MAAM;QACnD;IACJ;IACA;;KAEC,GACD,YAAY;QACR,OAAO,IAAI,CAAC,OAAO;IACvB;IACA;;KAEC,GACD,WAAW,KAAK,EAAE;QACd,IAAI,CAAC,OAAO,GAAG;IACnB;IACA;;KAEC,GACD,aAAa;QACT,OAAO,IAAI,CAAC,OAAO;IACvB;IACA;;KAEC,GACD,WAAW,KAAK,EAAE;QACd,IAAI,CAAC,OAAO,GAAG;IACnB;IACA;;KAEC,GACD,gBAAgB;QACZ,OAAO,IAAI,CAAC,UAAU;IAC1B;IACA;;KAEC,GACD,cAAc,KAAK,EAAE;QACjB,IAAI,CAAC,UAAU,GAAG;IACtB;IACA;;KAEC,GACD,cAAc,GAAG,EAAE;QACf,OAAQ,OACJ,IAAI,SAAS,CAAC,GAAG,OAAO,QACxB,IAAI,SAAS,CAAC,GAAG,OAAO,aACxB,IAAI,SAAS,CAAC,GAAG,OAAO,cACxB,IAAI,SAAS,CAAC,GAAG,QAAQ,gBACzB,IAAI,SAAS,CAAC,GAAG,OAAO;IAChC;IACA;;;KAGC,GACD,QAAQ,GAAG,EAAE;QACT,IAAI,IAAI,CAAC,SAAS,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM;YAC7C,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI;gBACpB,IAAI,CAAC,aAAa;YACtB;YACA,IAAI,IAAI,MAAM,CAAC,OAAO,KAAK;gBACvB,MAAM,IAAI,CAAC,aAAa,KAAK;YACjC,OACK;gBACD,MAAM,IAAI,CAAC,UAAU,KAAK;YAC9B;QACJ;QACA,OAAO;IACX;AACJ;uCACe","ignoreList":[0]}},
    {"offset": {"line": 2880, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2886, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/Translations.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2016, JGraph Ltd\nCopyright (c) 2006-2016, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Client from '../Client';\nimport { NONE } from './Constants';\nimport { get, load } from './MaxXmlRequest';\n/**\n * Implements internationalization. You can provide any number of\n * resource files on the server using the following format for the\n * filename: name[-en].properties. The en stands for any lowercase\n * 2-character language shortcut (eg. de for german, fr for french).\n *\n * If the optional language extension is omitted, then the file is used as a\n * default resource which is loaded in all cases. If a properties file for a\n * specific language exists, then it is used to override the settings in the\n * default resource. All entries in the file are of the form key=value. The\n * values may then be accessed in code via {@link get}. Lines without\n * equal signs in the properties files are ignored.\n *\n * Resource files may either be added programmatically using\n * {@link add} or via a resource tag in the UI section of the\n * editor configuration file, eg:\n *\n * ```javascript\n * <Editor>\n *   <ui>\n *     <resource basename=\"examples/resources/mxWorkflow\"/>\n * ```\n *\n * The above element will load examples/resources/mxWorkflow.properties as well\n * as the language specific file for the current language, if it exists.\n *\n * Values may contain placeholders of the form {1}...{n} where each placeholder\n * is replaced with the value of the corresponding array element in the params\n * argument passed to {@link get}. The placeholder {1} maps to the first\n * element in the array (at index 0).\n *\n * See {@link Client.language} for more information on specifying the default\n * language or disabling all loading of resources.\n *\n * Lines that start with a # sign will be ignored.\n *\n * ## Special characters\n *\n * To use unicode characters, use the standard notation (eg. \\u8fd1) or %u as a\n * prefix (eg. %u20AC will display a Euro sign). For normal hex encoded strings,\n * use % as a prefix, eg. %F6 will display a \"o umlaut\" (&ouml;).\n *\n * See {@link resourcesEncoded} to disable this. If you disable this, make sure that\n * your files are UTF-8 encoded.\n *\n * ## Asynchronous loading\n *\n * TODO the following is taken from mxGraph and is probably no longer accurate\n *\n * By default, the core adds two resource files synchronously at load time.\n * To load these files asynchronously, set {@link LoadResources} to false\n * before loading Client and use {@link loadResources} instead.\n */\nclass Translations {\n}\n/*\n * Object that maps from keys to values.\n */\nTranslations.resources = {};\n/**\n * Specifies the extension used for language files.\n * @default '.txt'\n */\nTranslations.extension = '.txt';\n/**\n * Specifies whether values in resource files are encoded with \\u or\n * percentage. Default is false.\n */\nTranslations.resourcesEncoded = false;\n/**\n * Specifies if the default file for a given basename should be loaded.\n * Default is true.\n */\nTranslations.loadDefaultBundle = true;\n/**\n * Specifies if the specific language file file for a given basename should\n * be loaded. Default is true.\n */\nTranslations.loadSpecialBundle = true;\n/**\n * Hook for subclassers to disable support for a given language. This\n * implementation returns true if lan is in <Client.languages>.\n *\n * @param lan The current language.\n */\nTranslations.isLanguageSupported = (lan) => {\n    if (Client.languages != null) {\n        return Client.languages.indexOf(lan) >= 0;\n    }\n    return true;\n};\n/**\n * Hook for subclassers to return the URL for the special bundle. This\n * implementation returns basename + <extension> or null if\n * <loadDefaultBundle> is false.\n *\n * @param basename The basename for which the file should be loaded.\n * @param lan The current language.\n */\nTranslations.getDefaultBundle = (basename, lan) => {\n    if (Translations.loadDefaultBundle || !Translations.isLanguageSupported(lan)) {\n        return basename + Translations.extension;\n    }\n    return null;\n};\n/**\n * Hook for subclassers to return the URL for the special bundle. This\n * implementation returns `basename + '_' + lan + <extension>` or `null` if\n * {@link Translations.loadSpecialBundle} is `false` or `lan` equals {@link Client.defaultLanguage}.\n *\n * If {@link Translations#languages} is not null and {@link Client.language} contains\n * a dash, then this method checks if {@link Translations.isLanguageSupported} returns `true`\n * for the full language (including the dash). If that returns false the\n * first part of the language (up to the dash) will be tried as an extension.\n *\n * If {@link Translations#language} is null then the first part of the language is\n * used to maintain backwards compatibility.\n *\n * @param basename The basename for which the file should be loaded.\n * @param lan The language for which the file should be loaded.\n */\nTranslations.getSpecialBundle = (basename, lan) => {\n    if (Client.languages == null || !Translations.isLanguageSupported(lan)) {\n        const dash = lan.indexOf('-');\n        if (dash > 0) {\n            lan = lan.substring(0, dash);\n        }\n    }\n    if (Translations.loadSpecialBundle &&\n        Translations.isLanguageSupported(lan) &&\n        lan != Client.defaultLanguage) {\n        return `${basename}_${lan}${Translations.extension}`;\n    }\n    return null;\n};\n/**\n * Adds the default and current language properties file for the specified\n * basename. Existing keys are overridden as new files are added. If no\n * callback is used then the request is synchronous.\n *\n * Example:\n *\n * At application startup, additional resources may be\n * added using the following code:\n *\n * ```javascript\n * Translations.add('resources/editor');\n * ```\n *\n * @param basename The basename for which the file should be loaded.\n * @param lan The language for which the file should be loaded.\n * @param callback Optional callback for asynchronous loading.\n */\nTranslations.add = (basename, lan = null, callback = null) => {\n    lan =\n        lan != null ? lan : Client.language != null ? Client.language.toLowerCase() : NONE;\n    if (lan !== NONE) {\n        const defaultBundle = Translations.getDefaultBundle(basename, lan);\n        const specialBundle = Translations.getSpecialBundle(basename, lan);\n        const loadSpecialBundle = () => {\n            if (specialBundle != null) {\n                if (callback) {\n                    get(specialBundle, (req) => {\n                        Translations.parse(req.getText());\n                        callback();\n                    }, () => {\n                        callback();\n                    });\n                }\n                else {\n                    try {\n                        const req = load(specialBundle);\n                        if (req.isReady()) {\n                            Translations.parse(req.getText());\n                        }\n                    }\n                    catch (e) {\n                        // ignore\n                    }\n                }\n            }\n            else if (callback != null) {\n                callback();\n            }\n        };\n        if (defaultBundle != null) {\n            if (callback) {\n                get(defaultBundle, (req) => {\n                    Translations.parse(req.getText());\n                    loadSpecialBundle();\n                }, () => {\n                    loadSpecialBundle();\n                });\n            }\n            else {\n                try {\n                    const req = load(defaultBundle);\n                    if (req.isReady()) {\n                        Translations.parse(req.getText());\n                    }\n                    loadSpecialBundle();\n                }\n                catch (e) {\n                    // ignore\n                }\n            }\n        }\n        else {\n            // Overlays the language specific file (_lan-extension)\n            loadSpecialBundle();\n        }\n    }\n};\n/**\n * Parses the key, value pairs in the specified\n * text and stores them as local resources.\n */\nTranslations.parse = (text) => {\n    if (text != null) {\n        const lines = text.split('\\n');\n        for (let i = 0; i < lines.length; i += 1) {\n            if (lines[i].charAt(0) !== '#') {\n                const index = lines[i].indexOf('=');\n                if (index > 0) {\n                    const key = lines[i].substring(0, index);\n                    let idx = lines[i].length;\n                    if (lines[i].charCodeAt(idx - 1) === 13) {\n                        idx--;\n                    }\n                    let value = lines[i].substring(index + 1, idx);\n                    if (Translations.resourcesEncoded) {\n                        value = value.replace(/\\\\(?=u[a-fA-F\\d]{4})/g, '%');\n                        Translations.resources[key] = unescape(value);\n                    }\n                    else {\n                        Translations.resources[key] = value;\n                    }\n                }\n            }\n        }\n    }\n};\n/**\n * Returns the value for the specified resource key.\n *\n * Example:\n * To read the value for 'welcomeMessage', use the following:\n * ```javascript\n * let result = Translations.get('welcomeMessage') || '';\n * ```\n *\n * This would require an entry of the following form in\n * one of the English language resource files:\n * ```javascript\n * welcomeMessage=Welcome to mxGraph!\n * ```\n *\n * The part behind the || is the string value to be used if the given\n * resource is not available.\n *\n * @param key String that represents the key of the resource to be returned.\n * @param params Array of the values for the placeholders of the form {1}...{n}\n * to be replaced with in the resulting string.\n * @param defaultValue Optional string that specifies the default return value.\n */\nTranslations.get = (key, params = null, defaultValue = null) => {\n    let value = Translations.resources[key];\n    // Applies the default value if no resource was found\n    if (value == null) {\n        value = defaultValue;\n    }\n    // Replaces the placeholders with the values in the array\n    if (value != null && params != null) {\n        value = Translations.replacePlaceholders(value, params);\n    }\n    return value;\n};\n/**\n * Replaces the given placeholders with the given parameters.\n *\n * @param value String that contains the placeholders.\n * @param params Array of the values for the placeholders of the form {1}...{n}\n * to be replaced with in the resulting string.\n */\nTranslations.replacePlaceholders = (value, params) => {\n    const result = [];\n    let index = null;\n    for (let i = 0; i < value.length; i += 1) {\n        const c = value.charAt(i);\n        if (c === '{') {\n            index = '';\n        }\n        else if (index != null && c === '}') {\n            index = parseInt(index) - 1;\n            if (index >= 0 && index < params.length) {\n                result.push(params[index]);\n            }\n            index = null;\n        }\n        else if (index != null) {\n            index += c;\n        }\n        else {\n            result.push(c);\n        }\n    }\n    return result.join('');\n};\n/**\n * Loads all required resources asynchronously. Use this to load the graph and editor resources.\n *\n * @param callback Callback function for asynchronous loading.\n */\nTranslations.loadResources = (callback) => {\n    Translations.add(`${Client.basePath}/resources/editor`, null, () => {\n        Translations.add(`${Client.basePath}/resources/graph`, null, callback);\n    });\n};\nexport default Translations;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3209, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40maxgraph/core/lib/util/cellArrayUtils.js"],"sourcesContent":["import Dictionary from './Dictionary';\nimport ObjectIdentity from './ObjectIdentity';\n/**\n * Returns the cells from the given array where the given filter function\n * returns true.\n */\nexport const filterCells = (filter) => (cells) => {\n    const result = [];\n    for (let i = 0; i < cells.length; i += 1) {\n        if (filter(cells[i])) {\n            result.push(cells[i]);\n        }\n    }\n    return result;\n};\n/**\n * Returns all opposite vertices terminal for the given edges, only returning sources and/or targets as specified.\n * The result is returned as an array of {@link Cell}.\n *\n * @param edges Array of {Cell} that contain the edges to be examined.\n * @param {Cell} terminal  that specifies the known end of the edges.\n * @param includeSources  Boolean that specifies if source terminals should be included in the result. Default is `true`.\n * @param includeTargets  Boolean that specifies if target terminals should be included in the result. Default is `true`.\n */\nexport const getOpposites = (edges, terminal, includeSources = true, includeTargets = true) => {\n    return edges.reduce((terminals, edge) => {\n        const source = edge.getTerminal(true);\n        const target = edge.getTerminal(false);\n        // Checks if the terminal is the source of the edge and if the target should be stored in the result\n        if (source === terminal && target != null && target !== terminal && includeTargets) {\n            terminals.push(target);\n        }\n        // Checks if the terminal is the target of the edge and if the source should be stored in the result\n        else if (target === terminal &&\n            source != null &&\n            source !== terminal &&\n            includeSources) {\n            terminals.push(source);\n        }\n        return terminals;\n    }, []);\n};\n/**\n * Returns the topmost cells of the hierarchy in an array that contains no\n * descendants for each {@link Cell} that it contains. Duplicates should be\n * removed in the cells array to improve performance.\n */\nexport const getTopmostCells = (cells) => {\n    const dict = new Dictionary();\n    const tmp = [];\n    for (let i = 0; i < cells.length; i += 1) {\n        dict.put(cells[i], true);\n    }\n    for (let i = 0; i < cells.length; i += 1) {\n        const cell = cells[i];\n        let topmost = true;\n        let parent = cell.getParent();\n        while (parent != null) {\n            if (dict.get(parent)) {\n                topmost = false;\n                break;\n            }\n            parent = parent.getParent();\n        }\n        if (topmost) {\n            tmp.push(cell);\n        }\n    }\n    return tmp;\n};\n/**\n * Returns an array that represents the set (no duplicates) of all parents\n * for the given array of cells.\n */\nexport const getParents = (cells) => {\n    const parents = [];\n    const dict = new Dictionary();\n    for (const cell of cells) {\n        const parent = cell.getParent();\n        if (parent != null && !dict.get(parent)) {\n            dict.put(parent, true);\n            parents.push(parent);\n        }\n    }\n    return parents;\n};\n/**\n * Returns a deep clone of the given {@link Cell}` (including the children) which is created using {@link cloneCells}`.\n *\n * @param cell {@link Cell} to be cloned. Default is `null`.\n * @param includeChildren Boolean indicating if the cells should be cloned with all descendants. Default is `true`.\n */\nexport const cloneCell = (cell = null, includeChildren = true) => {\n    if (!cell) {\n        return null;\n    }\n    return cloneCells([cell], includeChildren)[0];\n};\n/**\n * Returns an array of clones for the given array of {@link Cell}`.\n * Depending on the value of includeChildren, a deep clone is created for\n * each cell. Connections are restored based if the corresponding\n * cell is contained in the provided in array.\n *\n * @param cells The cells to clone\n * @param includeChildren  Boolean indicating if the cells should be cloned with all descendants.\n * @param mapping  Optional mapping for existing clones.\n */\nexport const cloneCells = (cells, includeChildren = true, mapping = {}) => {\n    const clones = [];\n    for (const cell of cells) {\n        clones.push(cloneCellImpl(cell, mapping, includeChildren));\n    }\n    for (let i = 0; i < clones.length; i += 1) {\n        if (clones[i] != null) {\n            restoreClone(clones[i], cells[i], mapping);\n        }\n    }\n    return clones;\n};\n/**\n * Inner helper method for cloning cells recursively.\n *\n * @private\n */\nconst cloneCellImpl = (cell, mapping = {}, includeChildren = false) => {\n    const identity = ObjectIdentity.get(cell);\n    let clone = mapping ? mapping[identity] : null;\n    if (clone == null) {\n        clone = cell.clone();\n        mapping[identity] = clone;\n        if (includeChildren) {\n            const childCount = cell.getChildCount();\n            for (let i = 0; i < childCount; i += 1) {\n                const cloneChild = cloneCellImpl(cell.getChildAt(i), mapping, true);\n                clone.insert(cloneChild);\n            }\n        }\n    }\n    return clone;\n};\n/**\n * Inner helper method for restoring the connections in a network of cloned cells.\n *\n * @private\n */\nconst restoreClone = (clone, cell, mapping) => {\n    const source = cell.getTerminal(true);\n    if (source != null) {\n        const tmp = mapping[ObjectIdentity.get(source)];\n        if (tmp != null) {\n            tmp.insertEdge(clone, true);\n        }\n    }\n    const target = cell.getTerminal(false);\n    if (target != null) {\n        const tmp = mapping[ObjectIdentity.get(target)];\n        if (tmp != null) {\n            tmp.insertEdge(clone, false);\n        }\n    }\n    const childCount = clone.getChildCount();\n    for (let i = 0; i < childCount; i += 1) {\n        restoreClone(clone.getChildAt(i), cell.getChildAt(i), mapping);\n    }\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3342, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}