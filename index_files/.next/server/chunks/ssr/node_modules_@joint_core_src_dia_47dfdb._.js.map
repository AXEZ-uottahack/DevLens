{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/attributes/props.mjs"],"sourcesContent":["import { isPlainObject } from '../../util/util.mjs';\n\nconst validPropertiesList = ['checked', 'selected', 'disabled', 'readOnly', 'contentEditable', 'value', 'indeterminate'];\n\nconst validProperties = validPropertiesList.reduce((acc, key) => {\n    acc[key] = true;\n    return acc;\n}, {});\n\nconst props = {\n    qualify: function(properties) {\n        return isPlainObject(properties);\n    },\n    set: function(properties, _, node) {\n        Object.keys(properties).forEach(function(key) {\n            if (validProperties[key] && key in node) {\n                const value = properties[key];\n                if (node.tagName === 'SELECT' && Array.isArray(value)) {\n                    Array.from(node.options).forEach(function(option, index) {\n                        option.selected = value.includes(option.value);\n                    });\n                } else {\n                    node[key] = value;\n                }\n            }\n        });\n    }\n};\n\nexport default props;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,sBAAsB;IAAC;IAAW;IAAY;IAAY;IAAY;IAAmB;IAAS;CAAgB;AAExH,MAAM,kBAAkB,oBAAoB,MAAM,CAAC,CAAC,KAAK;IACrD,GAAG,CAAC,IAAI,GAAG;IACX,OAAO;AACX,GAAG,CAAC;AAEJ,MAAM,QAAQ;IACV,SAAS,SAAS,UAAU;QACxB,OAAO,CAAA,GAAA,8JAAA,CAAA,gBAAa,AAAD,EAAE;IACzB;IACA,KAAK,SAAS,UAAU,EAAE,CAAC,EAAE,IAAI;QAC7B,OAAO,IAAI,CAAC,YAAY,OAAO,CAAC,SAAS,GAAG;YACxC,IAAI,eAAe,CAAC,IAAI,IAAI,OAAO,MAAM;gBACrC,MAAM,QAAQ,UAAU,CAAC,IAAI;gBAC7B,IAAI,KAAK,OAAO,KAAK,YAAY,MAAM,OAAO,CAAC,QAAQ;oBACnD,MAAM,IAAI,CAAC,KAAK,OAAO,EAAE,OAAO,CAAC,SAAS,MAAM,EAAE,KAAK;wBACnD,OAAO,QAAQ,GAAG,MAAM,QAAQ,CAAC,OAAO,KAAK;oBACjD;gBACJ,OAAO;oBACH,IAAI,CAAC,IAAI,GAAG;gBAChB;YACJ;QACJ;IACJ;AACJ;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/attributes/legacy.mjs"],"sourcesContent":["import { Point } from '../../g/index.mjs';\nimport { isPercentage } from '../../util/util.mjs';\n\nfunction positionWrapper(axis, dimension, origin) {\n    return function(value, refBBox) {\n        var valuePercentage = isPercentage(value);\n        value = parseFloat(value);\n        if (valuePercentage) {\n            value /= 100;\n        }\n\n        var delta;\n        if (isFinite(value)) {\n            var refOrigin = refBBox[origin]();\n            if (valuePercentage || value > 0 && value < 1) {\n                delta = refOrigin[axis] + refBBox[dimension] * value;\n            } else {\n                delta = refOrigin[axis] + value;\n            }\n        }\n\n        var point = Point();\n        point[axis] = delta || 0;\n        return point;\n    };\n}\n\nfunction setWrapper(attrName, dimension) {\n    return function(value, refBBox) {\n        var isValuePercentage = isPercentage(value);\n        value = parseFloat(value);\n        if (isValuePercentage) {\n            value /= 100;\n        }\n\n        var attrs = {};\n        if (isFinite(value)) {\n            var attrValue = (isValuePercentage || value >= 0 && value <= 1)\n                ? value * refBBox[dimension]\n                : Math.max(value + refBBox[dimension], 0);\n            attrs[attrName] = attrValue;\n        }\n\n        return attrs;\n    };\n}\n\nconst legacyAttributesNS = {\n\n    // if `refX` is in [0, 1] then `refX` is a fraction of bounding box width\n    // if `refX` is < 0 then `refX`'s absolute values is the right coordinate of the bounding box\n    // otherwise, `refX` is the left coordinate of the bounding box\n    'ref-x': {\n        position: positionWrapper('x', 'width', 'origin')\n    },\n\n    'ref-y': {\n        position: positionWrapper('y', 'height', 'origin')\n    },\n\n    // `ref-dx` and `ref-dy` define the offset of the sub-element relative to the right and/or bottom\n    // coordinate of the reference element.\n\n    'ref-dx': {\n        position: positionWrapper('x', 'width', 'corner')\n    },\n\n    'ref-dy': {\n        position: positionWrapper('y', 'height', 'corner')\n    },\n\n    // 'ref-width'/'ref-height' defines the width/height of the sub-element relatively to\n    // the reference element size\n    // val in 0..1         ref-width = 0.75 sets the width to 75% of the ref. el. width\n    // val < 0 || val > 1  ref-height = -20 sets the height to the ref. el. height shorter by 20\n\n    'ref-width': {\n        set: setWrapper('width', 'width')\n    },\n\n    'ref-height': {\n        set: setWrapper('height', 'height')\n    },\n\n    'ref-rx': {\n        set: setWrapper('rx', 'width')\n    },\n\n    'ref-ry': {\n        set: setWrapper('ry', 'height')\n    },\n\n    'ref-cx': {\n        set: setWrapper('cx', 'width')\n    },\n\n    'ref-cy': {\n        set: setWrapper('cy', 'height')\n    },\n\n    'ref-r-inscribed': {\n        set: (function(attrName) {\n            var widthFn = setWrapper(attrName, 'width');\n            var heightFn = setWrapper(attrName, 'height');\n            return function(value, refBBox) {\n                var fn = (refBBox.height > refBBox.width) ? widthFn : heightFn;\n                return fn(value, refBBox);\n            };\n        })('r')\n    },\n\n    'ref-r-circumscribed': {\n        set: function(value, refBBox) {\n            var isValuePercentage = isPercentage(value);\n            value = parseFloat(value);\n            if (isValuePercentage) {\n                value /= 100;\n            }\n\n            var diagonalLength = Math.sqrt((refBBox.height * refBBox.height) + (refBBox.width * refBBox.width));\n\n            var rValue;\n            if (isFinite(value)) {\n                if (isValuePercentage || value >= 0 && value <= 1) rValue = value * diagonalLength;\n                else rValue = Math.max(value + diagonalLength, 0);\n            }\n\n            return { r: rValue };\n        }\n    },\n};\n\n// NOTE: refX & refY are SVG attributes that define the reference point of the marker.\n// That's why we need to define both variants: `refX` and `ref-x` (and `refY` and `ref-y`).\nlegacyAttributesNS['refX'] = legacyAttributesNS['ref-x'];\nlegacyAttributesNS['refY'] = legacyAttributesNS['ref-y'];\n\n// This allows to combine both absolute and relative positioning\n// refX: 50%, refX2: 20\nlegacyAttributesNS['ref-x2'] = legacyAttributesNS['ref-x'];\nlegacyAttributesNS['ref-y2'] = legacyAttributesNS['ref-y'];\nlegacyAttributesNS['ref-width2'] = legacyAttributesNS['ref-width'];\nlegacyAttributesNS['ref-height2'] = legacyAttributesNS['ref-height'];\n\n// Aliases\nlegacyAttributesNS['ref-r'] = legacyAttributesNS['ref-r-inscribed'];\n\nexport default legacyAttributesNS;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/attributes/text.mjs"],"sourcesContent":["import { assign, isPlainObject, isObject, isPercentage, breakText } from '../../util/util.mjs';\nimport { isCalcExpression, evalCalcExpression } from '../../util/calc.mjs';\nimport $ from '../../mvc/Dom/index.mjs';\nimport V from '../../V/index.mjs';\n\nfunction isTextInUse(_value, _node, attrs) {\n    return (attrs.text !== undefined);\n}\n\nconst FONT_ATTRIBUTES = ['font-weight', 'font-family', 'font-size', 'letter-spacing', 'text-transform'];\n\nconst textAttributesNS = {\n\n    'line-height': {\n        qualify: isTextInUse\n    },\n\n    'text-vertical-anchor': {\n        qualify: isTextInUse\n    },\n\n    'text-path': {\n        qualify: isTextInUse\n    },\n\n    'annotations': {\n        qualify: isTextInUse\n    },\n\n    'eol': {\n        qualify: isTextInUse\n    },\n\n    'display-empty': {\n        qualify: isTextInUse\n    },\n\n    'text': {\n        qualify: function(_text, _node, attrs) {\n            const textWrap = attrs['text-wrap'];\n            return !textWrap || !isPlainObject(textWrap);\n        },\n        unset: function(node) {\n            node.textContent = '';\n        },\n        set: function(text, refBBox, node, attrs) {\n            const cacheName = 'joint-text';\n            const cache = $.data.get(node, cacheName);\n            const lineHeight = attrs['line-height'];\n            const textVerticalAnchor = attrs['text-vertical-anchor'];\n            const displayEmpty = attrs['display-empty'];\n            const fontSize = attrs['font-size'];\n            const annotations = attrs.annotations;\n            const eol = attrs.eol;\n            const x = attrs.x;\n            let textPath = attrs['text-path'];\n            // Update the text only if there was a change in the string\n            // or any of its attributes.\n            const textHash = JSON.stringify([text, lineHeight, annotations, textVerticalAnchor, eol, displayEmpty, textPath, x, fontSize]);\n            if (cache === undefined || cache !== textHash) {\n                // Chrome bug:\n                // <tspan> positions defined as `em` are not updated\n                // when container `font-size` change.\n                if (fontSize) node.setAttribute('font-size', fontSize);\n                // Text Along Path Selector\n                if (isObject(textPath)) {\n                    const pathSelector = textPath.selector;\n                    if (typeof pathSelector === 'string') {\n                        const pathNode = this.findNode(pathSelector);\n                        if (pathNode instanceof SVGPathElement) {\n                            textPath = assign({ 'xlink:href': '#' + pathNode.id }, textPath);\n                        }\n                    }\n                }\n                V(node).text('' + text, {\n                    lineHeight,\n                    annotations,\n                    textPath,\n                    x,\n                    textVerticalAnchor,\n                    eol,\n                    displayEmpty\n                });\n                $.data.set(node, cacheName, textHash);\n            }\n        }\n    },\n\n    'text-wrap': {\n        qualify: isPlainObject,\n        set: function(value, refBBox, node, attrs) {\n            var size = {};\n            // option `width`\n            var width = value.width || 0;\n            if (isPercentage(width)) {\n                size.width = refBBox.width * parseFloat(width) / 100;\n            } else if (isCalcExpression(width)) {\n                size.width = Number(evalCalcExpression(width, refBBox));\n            } else {\n                if (value.width === null) {\n                    // breakText() requires width to be specified.\n                    size.width = Infinity;\n                } else if (width <= 0) {\n                    size.width = refBBox.width + width;\n                } else {\n                    size.width = width;\n                }\n            }\n            // option `height`\n            var height = value.height || 0;\n            if (isPercentage(height)) {\n                size.height = refBBox.height * parseFloat(height) / 100;\n            } else if (isCalcExpression(height)) {\n                size.height = Number(evalCalcExpression(height, refBBox));\n            } else {\n                if (value.height === null) {\n                    // if height is not specified breakText() does not\n                    // restrict the height of the text.\n                } else if (height <= 0) {\n                    size.height = refBBox.height + height;\n                } else {\n                    size.height = height;\n                }\n            }\n            // option `text`\n            var wrappedText;\n            var text = value.text;\n            if (text === undefined) text = attrs.text;\n            if (text !== undefined) {\n\n                const breakTextFn = value.breakText || breakText;\n                const computedStyles = getComputedStyle(node);\n                const wrapFontAttributes = {};\n                // The font size attributes must be set on the node\n                // to get the correct text wrapping.\n                // TODO: set the native SVG attributes before special attributes\n                for (let i = 0; i < FONT_ATTRIBUTES.length; i++) {\n                    const name = FONT_ATTRIBUTES[i];\n                    if (name in attrs) {\n                        node.setAttribute(name, attrs[name]);\n                    }\n                    // Note: computedStyles is a live object\n                    // i.e. the properties are evaluated when accessed.\n                    wrapFontAttributes[name] = computedStyles[name];\n                }\n\n                // The `line-height` attribute in SVG is JoinJS specific.\n                // TODO: change the `lineHeight` to breakText option.\n                wrapFontAttributes.lineHeight = attrs['line-height'];\n\n                wrappedText = breakTextFn('' + text, size, wrapFontAttributes, {\n                    // Provide an existing SVG Document here\n                    // instead of creating a temporary one over again.\n                    svgDocument: this.paper.svg,\n                    ellipsis: value.ellipsis,\n                    hyphen: value.hyphen,\n                    separator: value.separator,\n                    maxLineCount: value.maxLineCount,\n                    preserveSpaces: value.preserveSpaces\n                });\n            } else {\n                wrappedText = '';\n            }\n            textAttributesNS.text.set.call(this, wrappedText, refBBox, node, attrs);\n        },\n        // We expose the font attributes list to allow\n        // the user to take other custom font attributes into account\n        // when wrapping the text.\n        FONT_ATTRIBUTES\n    },\n\n    'title': {\n        qualify: function(title, node) {\n            // HTMLElement title is specified via an attribute (i.e. not an element)\n            return node instanceof SVGElement;\n        },\n        unset: function(node) {\n            $.data.remove(node, 'joint-title');\n            const titleNode = node.firstElementChild;\n            if (titleNode) {\n                titleNode.remove();\n            }\n        },\n        set: function(title, refBBox, node) {\n            var cacheName = 'joint-title';\n            var cache = $.data.get(node, cacheName);\n            if (cache === undefined || cache !== title) {\n                $.data.set(node, cacheName, title);\n                if (node.tagName === 'title') {\n                    // The target node is a <title> element.\n                    node.textContent = title;\n                    return;\n                }\n                // Generally <title> element should be the first child element of its parent.\n                var firstChild = node.firstElementChild;\n                if (firstChild && firstChild.tagName === 'title') {\n                    // Update an existing title\n                    firstChild.textContent = title;\n                } else {\n                    // Create a new title\n                    var titleNode = document.createElementNS(node.namespaceURI, 'title');\n                    titleNode.textContent = title;\n                    node.insertBefore(titleNode, firstChild);\n                }\n            }\n        }\n    },\n};\n\nexport default textAttributesNS;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/attributes/connection.mjs"],"sourcesContent":["import { Point } from '../../g/index.mjs';\n\nfunction atConnectionWrapper(method, opt) {\n    var zeroVector = new Point(1, 0);\n    return function(value) {\n        var p, angle;\n        var tangent = this[method](value);\n        if (tangent) {\n            angle = (opt.rotate) ? tangent.vector().vectorAngle(zeroVector) : 0;\n            p = tangent.start;\n        } else {\n            p = this.path.start;\n            angle = 0;\n        }\n        if (angle === 0) return { transform: 'translate(' + p.x + ',' + p.y + ')' };\n        return { transform: 'translate(' + p.x + ',' + p.y + ') rotate(' + angle + ')' };\n    };\n}\n\nfunction isLinkView() {\n    return this.model.isLink();\n}\n\nconst connectionAttributesNS = {\n\n    'connection': {\n        qualify: isLinkView,\n        unset: 'd',\n        set: function({ stubs = 0 }) {\n            let d;\n            if (isFinite(stubs) && stubs !== 0) {\n                let offset;\n                if (stubs < 0) {\n                    offset = (this.getConnectionLength() + stubs) / 2;\n                } else {\n                    offset = stubs;\n                }\n                const path = this.getConnection();\n                const segmentSubdivisions = this.getConnectionSubdivisions();\n                const sourceParts = path.divideAtLength(offset, { segmentSubdivisions });\n                const targetParts = path.divideAtLength(-offset, { segmentSubdivisions });\n                if (sourceParts && targetParts) {\n                    d = `${sourceParts[0].serialize()} ${targetParts[1].serialize()}`;\n                }\n            }\n\n            return { d: d || this.getSerializedConnection() };\n        }\n    },\n\n    'at-connection-length-keep-gradient': {\n        qualify: isLinkView,\n        unset: 'transform',\n        set: atConnectionWrapper('getTangentAtLength', { rotate: true })\n    },\n\n    'at-connection-length-ignore-gradient': {\n        qualify: isLinkView,\n        unset: 'transform',\n        set: atConnectionWrapper('getTangentAtLength', { rotate: false })\n    },\n\n    'at-connection-ratio-keep-gradient': {\n        qualify: isLinkView,\n        unset: 'transform',\n        set: atConnectionWrapper('getTangentAtRatio', { rotate: true })\n    },\n\n    'at-connection-ratio-ignore-gradient': {\n        qualify: isLinkView,\n        unset: 'transform',\n        set: atConnectionWrapper('getTangentAtRatio', { rotate: false })\n    }\n\n};\n\nconnectionAttributesNS['at-connection-length'] = connectionAttributesNS['at-connection-length-keep-gradient'];\nconnectionAttributesNS['at-connection-ratio'] = connectionAttributesNS['at-connection-ratio-keep-gradient'];\n\nexport default connectionAttributesNS;\n"],"names":[],"mappings":";;;AAAA;;AAEA,SAAS,oBAAoB,MAAM,EAAE,GAAG;IACpC,IAAI,aAAa,IAAI,qJAAA,CAAA,QAAK,CAAC,GAAG;IAC9B,OAAO,SAAS,KAAK;QACjB,IAAI,GAAG;QACP,IAAI,UAAU,IAAI,CAAC,OAAO,CAAC;QAC3B,IAAI,SAAS;YACT,QAAQ,AAAC,IAAI,MAAM,GAAI,QAAQ,MAAM,GAAG,WAAW,CAAC,cAAc;YAClE,IAAI,QAAQ,KAAK;QACrB,OAAO;YACH,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK;YACnB,QAAQ;QACZ;QACA,IAAI,UAAU,GAAG,OAAO;YAAE,WAAW,eAAe,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG;QAAI;QAC1E,OAAO;YAAE,WAAW,eAAe,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,cAAc,QAAQ;QAAI;IACnF;AACJ;AAEA,SAAS;IACL,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;AAC5B;AAEA,MAAM,yBAAyB;IAE3B,cAAc;QACV,SAAS;QACT,OAAO;QACP,KAAK,SAAS,EAAE,QAAQ,CAAC,EAAE;YACvB,IAAI;YACJ,IAAI,SAAS,UAAU,UAAU,GAAG;gBAChC,IAAI;gBACJ,IAAI,QAAQ,GAAG;oBACX,SAAS,CAAC,IAAI,CAAC,mBAAmB,KAAK,KAAK,IAAI;gBACpD,OAAO;oBACH,SAAS;gBACb;gBACA,MAAM,OAAO,IAAI,CAAC,aAAa;gBAC/B,MAAM,sBAAsB,IAAI,CAAC,yBAAyB;gBAC1D,MAAM,cAAc,KAAK,cAAc,CAAC,QAAQ;oBAAE;gBAAoB;gBACtE,MAAM,cAAc,KAAK,cAAc,CAAC,CAAC,QAAQ;oBAAE;gBAAoB;gBACvE,IAAI,eAAe,aAAa;oBAC5B,IAAI,GAAG,WAAW,CAAC,EAAE,CAAC,SAAS,GAAG,CAAC,EAAE,WAAW,CAAC,EAAE,CAAC,SAAS,IAAI;gBACrE;YACJ;YAEA,OAAO;gBAAE,GAAG,KAAK,IAAI,CAAC,uBAAuB;YAAG;QACpD;IACJ;IAEA,sCAAsC;QAClC,SAAS;QACT,OAAO;QACP,KAAK,oBAAoB,sBAAsB;YAAE,QAAQ;QAAK;IAClE;IAEA,wCAAwC;QACpC,SAAS;QACT,OAAO;QACP,KAAK,oBAAoB,sBAAsB;YAAE,QAAQ;QAAM;IACnE;IAEA,qCAAqC;QACjC,SAAS;QACT,OAAO;QACP,KAAK,oBAAoB,qBAAqB;YAAE,QAAQ;QAAK;IACjE;IAEA,uCAAuC;QACnC,SAAS;QACT,OAAO;QACP,KAAK,oBAAoB,qBAAqB;YAAE,QAAQ;QAAM;IAClE;AAEJ;AAEA,sBAAsB,CAAC,uBAAuB,GAAG,sBAAsB,CAAC,qCAAqC;AAC7G,sBAAsB,CAAC,sBAAsB,GAAG,sBAAsB,CAAC,oCAAoC;uCAE5F","ignoreList":[0]}},
    {"offset": {"line": 526, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 532, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/attributes/shape.mjs"],"sourcesContent":["import { Path, Polyline } from '../../g/index.mjs';\nimport $ from '../../mvc/Dom/index.mjs';\nimport V from '../../V/index.mjs';\n\nfunction shapeWrapper(shapeConstructor, opt) {\n    var cacheName = 'joint-shape';\n    var resetOffset = opt && opt.resetOffset;\n    return function(value, refBBox, node) {\n        var cache = $.data.get(node, cacheName);\n        if (!cache || cache.value !== value) {\n            // only recalculate if value has changed\n            var cachedShape = shapeConstructor(value);\n            cache = {\n                value: value,\n                shape: cachedShape,\n                shapeBBox: cachedShape.bbox()\n            };\n            $.data.set(node, cacheName, cache);\n        }\n\n        var shape = cache.shape.clone();\n        var shapeBBox = cache.shapeBBox.clone();\n        var shapeOrigin = shapeBBox.origin();\n        var refOrigin = refBBox.origin();\n\n        shapeBBox.x = refOrigin.x;\n        shapeBBox.y = refOrigin.y;\n\n        var fitScale = refBBox.maxRectScaleToFit(shapeBBox, refOrigin);\n        // `maxRectScaleToFit` can give Infinity if width or height is 0\n        var sx = (shapeBBox.width === 0 || refBBox.width === 0) ? 1 : fitScale.sx;\n        var sy = (shapeBBox.height === 0 || refBBox.height === 0) ? 1 : fitScale.sy;\n\n        shape.scale(sx, sy, shapeOrigin);\n        if (resetOffset) {\n            shape.translate(-shapeOrigin.x, -shapeOrigin.y);\n        }\n\n        return shape;\n    };\n}\n\n// `d` attribute for SVGPaths\nfunction dWrapper(opt) {\n    function pathConstructor(value) {\n        return new Path(V.normalizePathData(value));\n    }\n\n    var shape = shapeWrapper(pathConstructor, opt);\n    return function(value, refBBox, node) {\n        var path = shape(value, refBBox, node);\n        return {\n            d: path.serialize()\n        };\n    };\n}\n\n// `points` attribute for SVGPolylines and SVGPolygons\nfunction pointsWrapper(opt) {\n    var shape = shapeWrapper(Polyline, opt);\n    return function(value, refBBox, node) {\n        var polyline = shape(value, refBBox, node);\n        return {\n            points: polyline.serialize()\n        };\n    };\n}\n\nconst shapeAttributesNS = {\n\n    'ref-d-reset-offset': {\n        unset: 'd',\n        set: dWrapper({ resetOffset: true })\n    },\n\n    'ref-d-keep-offset': {\n        unset: 'd',\n        set: dWrapper({ resetOffset: false })\n    },\n\n    'ref-points-reset-offset': {\n        unset: 'points',\n        set: pointsWrapper({ resetOffset: true })\n    },\n\n    'ref-points-keep-offset': {\n        unset: 'points',\n        set: pointsWrapper({ resetOffset: false })\n    },\n};\n\n// Aliases\nshapeAttributesNS['ref-d'] = shapeAttributesNS['ref-d-reset-offset'];\nshapeAttributesNS['ref-points'] = shapeAttributesNS['ref-points-reset-offset'];\n\nexport default shapeAttributesNS;\n"],"names":[],"mappings":";;;AACA;AADA;AAEA;AAFA;;;;AAIA,SAAS,aAAa,gBAAgB,EAAE,GAAG;IACvC,IAAI,YAAY;IAChB,IAAI,cAAc,OAAO,IAAI,WAAW;IACxC,OAAO,SAAS,KAAK,EAAE,OAAO,EAAE,IAAI;QAChC,IAAI,QAAQ,8JAAA,CAAA,UAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM;QAC7B,IAAI,CAAC,SAAS,MAAM,KAAK,KAAK,OAAO;YACjC,wCAAwC;YACxC,IAAI,cAAc,iBAAiB;YACnC,QAAQ;gBACJ,OAAO;gBACP,OAAO;gBACP,WAAW,YAAY,IAAI;YAC/B;YACA,8JAAA,CAAA,UAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,WAAW;QAChC;QAEA,IAAI,QAAQ,MAAM,KAAK,CAAC,KAAK;QAC7B,IAAI,YAAY,MAAM,SAAS,CAAC,KAAK;QACrC,IAAI,cAAc,UAAU,MAAM;QAClC,IAAI,YAAY,QAAQ,MAAM;QAE9B,UAAU,CAAC,GAAG,UAAU,CAAC;QACzB,UAAU,CAAC,GAAG,UAAU,CAAC;QAEzB,IAAI,WAAW,QAAQ,iBAAiB,CAAC,WAAW;QACpD,gEAAgE;QAChE,IAAI,KAAK,AAAC,UAAU,KAAK,KAAK,KAAK,QAAQ,KAAK,KAAK,IAAK,IAAI,SAAS,EAAE;QACzE,IAAI,KAAK,AAAC,UAAU,MAAM,KAAK,KAAK,QAAQ,MAAM,KAAK,IAAK,IAAI,SAAS,EAAE;QAE3E,MAAM,KAAK,CAAC,IAAI,IAAI;QACpB,IAAI,aAAa;YACb,MAAM,SAAS,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC;QAClD;QAEA,OAAO;IACX;AACJ;AAEA,6BAA6B;AAC7B,SAAS,SAAS,GAAG;IACjB,SAAS,gBAAgB,KAAK;QAC1B,OAAO,IAAI,oJAAA,CAAA,OAAI,CAAC,qJAAA,CAAA,UAAC,CAAC,iBAAiB,CAAC;IACxC;IAEA,IAAI,QAAQ,aAAa,iBAAiB;IAC1C,OAAO,SAAS,KAAK,EAAE,OAAO,EAAE,IAAI;QAChC,IAAI,OAAO,MAAM,OAAO,SAAS;QACjC,OAAO;YACH,GAAG,KAAK,SAAS;QACrB;IACJ;AACJ;AAEA,sDAAsD;AACtD,SAAS,cAAc,GAAG;IACtB,IAAI,QAAQ,aAAa,wJAAA,CAAA,WAAQ,EAAE;IACnC,OAAO,SAAS,KAAK,EAAE,OAAO,EAAE,IAAI;QAChC,IAAI,WAAW,MAAM,OAAO,SAAS;QACrC,OAAO;YACH,QAAQ,SAAS,SAAS;QAC9B;IACJ;AACJ;AAEA,MAAM,oBAAoB;IAEtB,sBAAsB;QAClB,OAAO;QACP,KAAK,SAAS;YAAE,aAAa;QAAK;IACtC;IAEA,qBAAqB;QACjB,OAAO;QACP,KAAK,SAAS;YAAE,aAAa;QAAM;IACvC;IAEA,2BAA2B;QACvB,OAAO;QACP,KAAK,cAAc;YAAE,aAAa;QAAK;IAC3C;IAEA,0BAA0B;QACtB,OAAO;QACP,KAAK,cAAc;YAAE,aAAa;QAAM;IAC5C;AACJ;AAEA,UAAU;AACV,iBAAiB,CAAC,QAAQ,GAAG,iBAAiB,CAAC,qBAAqB;AACpE,iBAAiB,CAAC,aAAa,GAAG,iBAAiB,CAAC,0BAA0B;uCAE/D","ignoreList":[0]}},
    {"offset": {"line": 627, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 633, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/attributes/defs.mjs"],"sourcesContent":["import { assign, isPlainObject } from '../../util/util.mjs';\n\nfunction contextMarker(context) {\n    var marker = {};\n    // Stroke\n    // The context 'fill' is disregarded here. The usual case is to use the marker with a connection\n    // (for which 'fill' attribute is set to 'none').\n    var stroke = context.stroke;\n    if (typeof stroke === 'string') {\n        marker['stroke'] = stroke;\n        marker['fill'] = stroke;\n    }\n    // Opacity\n    // Again the context 'fill-opacity' is ignored.\n    var strokeOpacity = context['stroke-opacity'];\n    if (strokeOpacity === undefined) strokeOpacity = context.opacity;\n    if (strokeOpacity !== undefined) {\n        marker['stroke-opacity'] = strokeOpacity;\n        marker['fill-opacity'] = strokeOpacity;\n    }\n    return marker;\n}\n\nfunction setPaintURL(def) {\n    const { paper } = this;\n    const url = (def.type === 'pattern')\n        ? paper.definePattern(def)\n        : paper.defineGradient(def);\n    return `url(#${url})`;\n}\n\nconst defsAttributesNS = {\n\n    'source-marker': {\n        qualify: isPlainObject,\n        unset: 'marker-start',\n        set: function(marker, refBBox, node, attrs) {\n            marker = assign(contextMarker(attrs), marker);\n            return { 'marker-start': 'url(#' + this.paper.defineMarker(marker) + ')' };\n        }\n    },\n\n    'target-marker': {\n        qualify: isPlainObject,\n        unset: 'marker-end',\n        set: function(marker, refBBox, node, attrs) {\n            marker = assign(contextMarker(attrs), { 'transform': 'rotate(180)' }, marker);\n            return { 'marker-end': 'url(#' + this.paper.defineMarker(marker) + ')' };\n        }\n    },\n\n    'vertex-marker': {\n        qualify: isPlainObject,\n        unset: 'marker-mid',\n        set: function(marker, refBBox, node, attrs) {\n            marker = assign(contextMarker(attrs), marker);\n            return { 'marker-mid': 'url(#' + this.paper.defineMarker(marker) + ')' };\n        }\n    },\n\n    'fill': {\n        qualify: isPlainObject,\n        set: setPaintURL\n    },\n\n    'stroke': {\n        qualify: isPlainObject,\n        set: setPaintURL\n    },\n\n    'filter': {\n        qualify: isPlainObject,\n        set: function(filter) {\n            return 'url(#' + this.paper.defineFilter(filter) + ')';\n        }\n    },\n};\n\nexport default defsAttributesNS;\n"],"names":[],"mappings":";;;AAAA;;AAEA,SAAS,cAAc,OAAO;IAC1B,IAAI,SAAS,CAAC;IACd,SAAS;IACT,gGAAgG;IAChG,iDAAiD;IACjD,IAAI,SAAS,QAAQ,MAAM;IAC3B,IAAI,OAAO,WAAW,UAAU;QAC5B,MAAM,CAAC,SAAS,GAAG;QACnB,MAAM,CAAC,OAAO,GAAG;IACrB;IACA,UAAU;IACV,+CAA+C;IAC/C,IAAI,gBAAgB,OAAO,CAAC,iBAAiB;IAC7C,IAAI,kBAAkB,WAAW,gBAAgB,QAAQ,OAAO;IAChE,IAAI,kBAAkB,WAAW;QAC7B,MAAM,CAAC,iBAAiB,GAAG;QAC3B,MAAM,CAAC,eAAe,GAAG;IAC7B;IACA,OAAO;AACX;AAEA,SAAS,YAAY,GAAG;IACpB,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI;IACtB,MAAM,MAAM,AAAC,IAAI,IAAI,KAAK,YACpB,MAAM,aAAa,CAAC,OACpB,MAAM,cAAc,CAAC;IAC3B,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACzB;AAEA,MAAM,mBAAmB;IAErB,iBAAiB;QACb,SAAS,8JAAA,CAAA,gBAAa;QACtB,OAAO;QACP,KAAK,SAAS,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK;YACtC,SAAS,CAAA,GAAA,8JAAA,CAAA,SAAM,AAAD,EAAE,cAAc,QAAQ;YACtC,OAAO;gBAAE,gBAAgB,UAAU,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,UAAU;YAAI;QAC7E;IACJ;IAEA,iBAAiB;QACb,SAAS,8JAAA,CAAA,gBAAa;QACtB,OAAO;QACP,KAAK,SAAS,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK;YACtC,SAAS,CAAA,GAAA,8JAAA,CAAA,SAAM,AAAD,EAAE,cAAc,QAAQ;gBAAE,aAAa;YAAc,GAAG;YACtE,OAAO;gBAAE,cAAc,UAAU,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,UAAU;YAAI;QAC3E;IACJ;IAEA,iBAAiB;QACb,SAAS,8JAAA,CAAA,gBAAa;QACtB,OAAO;QACP,KAAK,SAAS,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK;YACtC,SAAS,CAAA,GAAA,8JAAA,CAAA,SAAM,AAAD,EAAE,cAAc,QAAQ;YACtC,OAAO;gBAAE,cAAc,UAAU,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,UAAU;YAAI;QAC3E;IACJ;IAEA,QAAQ;QACJ,SAAS,8JAAA,CAAA,gBAAa;QACtB,KAAK;IACT;IAEA,UAAU;QACN,SAAS,8JAAA,CAAA,gBAAa;QACtB,KAAK;IACT;IAEA,UAAU;QACN,SAAS,8JAAA,CAAA,gBAAa;QACtB,KAAK,SAAS,MAAM;YAChB,OAAO,UAAU,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,UAAU;QACvD;IACJ;AACJ;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 712, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 718, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/attributes/offset.mjs"],"sourcesContent":["\n// Offset attributes require the cell view to be rendered before they can be applied\n// (they must be appended to the DOM).\n\nimport { Point } from '../../g/index.mjs';\nimport { isPercentage } from '../../util/util.mjs';\n\nfunction offsetWrapper(axis, dimension, corner) {\n    return function(value, nodeBBox) {\n        var delta;\n        if (value === 'middle') {\n            delta = nodeBBox[dimension] / 2;\n        } else if (value === corner) {\n            delta = nodeBBox[dimension];\n        } else if (isFinite(value)) {\n            // TODO: or not to do a breaking change?\n            delta = (value > -1 && value < 1) ? (-nodeBBox[dimension] * value) : -value;\n        } else if (isPercentage(value)) {\n            delta = nodeBBox[dimension] * parseFloat(value) / 100;\n        } else {\n            delta = 0;\n        }\n\n        var point = new Point();\n        point[axis] = -(nodeBBox[axis] + delta);\n        return point;\n    };\n}\n\nconst offsetAttributesNS = {\n\n    // `x-alignment` when set to `middle` causes centering of the sub-element around its new x coordinate.\n    // `x-alignment` when set to `right` uses the x coordinate as referenced to the right of the bbox.\n    'x-alignment': {\n        offset: offsetWrapper('x', 'width', 'right')\n    },\n\n    // `y-alignment` when set to `middle` causes centering of the sub-element around its new y coordinate.\n    // `y-alignment` when set to `bottom` uses the y coordinate as referenced to the bottom of the bbox.\n    'y-alignment': {\n        offset: offsetWrapper('y', 'height', 'bottom')\n    },\n\n    'reset-offset': {\n        offset: function(val, nodeBBox) {\n            return (val)\n                ? { x: -nodeBBox.x, y: -nodeBBox.y }\n                : { x: 0, y: 0 };\n        }\n    },\n};\n\nexport default offsetAttributesNS;\n"],"names":[],"mappings":"AACA,oFAAoF;AACpF,sCAAsC;;;;AAGtC;AADA;;;AAGA,SAAS,cAAc,IAAI,EAAE,SAAS,EAAE,MAAM;IAC1C,OAAO,SAAS,KAAK,EAAE,QAAQ;QAC3B,IAAI;QACJ,IAAI,UAAU,UAAU;YACpB,QAAQ,QAAQ,CAAC,UAAU,GAAG;QAClC,OAAO,IAAI,UAAU,QAAQ;YACzB,QAAQ,QAAQ,CAAC,UAAU;QAC/B,OAAO,IAAI,SAAS,QAAQ;YACxB,wCAAwC;YACxC,QAAQ,AAAC,QAAQ,CAAC,KAAK,QAAQ,IAAM,CAAC,QAAQ,CAAC,UAAU,GAAG,QAAS,CAAC;QAC1E,OAAO,IAAI,CAAA,GAAA,uKAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;YAC5B,QAAQ,QAAQ,CAAC,UAAU,GAAG,WAAW,SAAS;QACtD,OAAO;YACH,QAAQ;QACZ;QAEA,IAAI,QAAQ,IAAI,qJAAA,CAAA,QAAK;QACrB,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK;QACtC,OAAO;IACX;AACJ;AAEA,MAAM,qBAAqB;IAEvB,sGAAsG;IACtG,kGAAkG;IAClG,eAAe;QACX,QAAQ,cAAc,KAAK,SAAS;IACxC;IAEA,sGAAsG;IACtG,oGAAoG;IACpG,eAAe;QACX,QAAQ,cAAc,KAAK,UAAU;IACzC;IAEA,gBAAgB;QACZ,QAAQ,SAAS,GAAG,EAAE,QAAQ;YAC1B,OAAO,AAAC,MACF;gBAAE,GAAG,CAAC,SAAS,CAAC;gBAAE,GAAG,CAAC,SAAS,CAAC;YAAC,IACjC;gBAAE,GAAG;gBAAG,GAAG;YAAE;QACvB;IACJ;AACJ;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 771, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 777, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/attributes/index.mjs"],"sourcesContent":["import { assign, isPlainObject } from '../../util/util.mjs';\nimport $ from '../../mvc/Dom/index.mjs';\nimport V from '../../V/index.mjs';\n\nimport props from './props.mjs';\nimport legacyAttributesNS from './legacy.mjs';\nimport textAttributesNS from './text.mjs';\nimport connectionAttributesNS from './connection.mjs';\nimport shapeAttributesNS from './shape.mjs';\nimport defsAttributesNS from './defs.mjs';\nimport offsetAttributesNS from './offset.mjs';\n\nfunction setIfChangedWrapper(attribute) {\n    return function setIfChanged(value, _, node) {\n        const vel = V(node);\n        if (vel.attr(attribute) === value) return;\n        vel.attr(attribute, value);\n    };\n}\n\nconst attributesNS = {\n\n    'ref': {\n        // We do not set `ref` attribute directly on an element.\n        // The attribute itself does not qualify for relative positioning.\n    },\n\n    'href': {\n        set: setIfChangedWrapper('href')\n    },\n\n    'xlink:href': {\n        set: setIfChangedWrapper('xlink:href')\n    },\n\n    // `port` attribute contains the `id` of the port that the underlying magnet represents.\n    'port': {\n        set: function(port) {\n            return (port === null || port.id === undefined) ? port : port.id;\n        }\n    },\n\n    // `style` attribute is special in the sense that it sets the CSS style of the sub-element.\n    'style': {\n        qualify: isPlainObject,\n        set: function(styles, refBBox, node) {\n            $(node).css(styles);\n        }\n    },\n\n    'html': {\n        unset: function(node) {\n            $(node).empty();\n        },\n        set: function(html, refBBox, node) {\n            $(node).html(html + '');\n        }\n    },\n\n    // Properties setter (set various properties on the node)\n    props,\n};\n\nassign(attributesNS, legacyAttributesNS);\nassign(attributesNS, textAttributesNS);\nassign(attributesNS, connectionAttributesNS);\nassign(attributesNS, shapeAttributesNS);\nassign(attributesNS, defsAttributesNS);\nassign(attributesNS, offsetAttributesNS);\n\nexport const attributes = attributesNS;\n\n"],"names":[],"mappings":";;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;;;AAUA,SAAS,oBAAoB,SAAS;IAClC,OAAO,SAAS,aAAa,KAAK,EAAE,CAAC,EAAE,IAAI;QACvC,MAAM,MAAM,CAAA,GAAA,qJAAA,CAAA,UAAC,AAAD,EAAE;QACd,IAAI,IAAI,IAAI,CAAC,eAAe,OAAO;QACnC,IAAI,IAAI,CAAC,WAAW;IACxB;AACJ;AAEA,MAAM,eAAe;IAEjB,OAAO;IAGP;IAEA,QAAQ;QACJ,KAAK,oBAAoB;IAC7B;IAEA,cAAc;QACV,KAAK,oBAAoB;IAC7B;IAEA,wFAAwF;IACxF,QAAQ;QACJ,KAAK,SAAS,IAAI;YACd,OAAO,AAAC,SAAS,QAAQ,KAAK,EAAE,KAAK,YAAa,OAAO,KAAK,EAAE;QACpE;IACJ;IAEA,2FAA2F;IAC3F,SAAS;QACL,SAAS,8JAAA,CAAA,gBAAa;QACtB,KAAK,SAAS,MAAM,EAAE,OAAO,EAAE,IAAI;YAC/B,CAAA,GAAA,8JAAA,CAAA,UAAC,AAAD,EAAE,MAAM,GAAG,CAAC;QAChB;IACJ;IAEA,QAAQ;QACJ,OAAO,SAAS,IAAI;YAChB,CAAA,GAAA,8JAAA,CAAA,UAAC,AAAD,EAAE,MAAM,KAAK;QACjB;QACA,KAAK,SAAS,IAAI,EAAE,OAAO,EAAE,IAAI;YAC7B,CAAA,GAAA,8JAAA,CAAA,UAAC,AAAD,EAAE,MAAM,IAAI,CAAC,OAAO;QACxB;IACJ;IAEA,yDAAyD;IACzD,OAAA,qKAAA,CAAA,UAAK;AACT;AAEA,CAAA,GAAA,8JAAA,CAAA,SAAM,AAAD,EAAE,cAAc,sKAAA,CAAA,UAAkB;AACvC,CAAA,GAAA,8JAAA,CAAA,SAAM,AAAD,EAAE,cAAc,oKAAA,CAAA,UAAgB;AACrC,CAAA,GAAA,8JAAA,CAAA,SAAM,AAAD,EAAE,cAAc,0KAAA,CAAA,UAAsB;AAC3C,CAAA,GAAA,8JAAA,CAAA,SAAM,AAAD,EAAE,cAAc,qKAAA,CAAA,UAAiB;AACtC,CAAA,GAAA,8JAAA,CAAA,SAAM,AAAD,EAAE,cAAc,oKAAA,CAAA,UAAgB;AACrC,CAAA,GAAA,8JAAA,CAAA,SAAM,AAAD,EAAE,cAAc,sKAAA,CAAA,UAAkB;AAEhC,MAAM,aAAa","ignoreList":[0]}},
    {"offset": {"line": 847, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 853, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/Cell.mjs"],"sourcesContent":["import {\n    uniqueId,\n    union,\n    result,\n    merge,\n    forIn,\n    isObject,\n    isEqual,\n    isString,\n    cloneDeep,\n    omit,\n    uuid,\n    isEmpty,\n    assign,\n    uniq,\n    toArray,\n    setByPath,\n    unsetByPath,\n    getByPath,\n    timing,\n    interpolate,\n    nextFrame,\n    without,\n    cancelFrame,\n    defaultsDeep,\n    has,\n    sortBy,\n    defaults,\n    objectDifference\n} from '../util/util.mjs';\nimport { Model } from '../mvc/Model.mjs';\nimport { cloneCells } from '../util/cloneCells.mjs';\nimport { attributes } from './attributes/index.mjs';\nimport * as g from '../g/index.mjs';\n\n\n// Cell base model.\n// --------------------------\n\nconst attributesMerger = function(a, b) {\n    if (Array.isArray(a)) {\n        return b;\n    }\n};\n\nfunction removeEmptyAttributes(obj) {\n\n    // Remove toplevel empty attributes\n    for (const key in obj) {\n\n        const objValue = obj[key];\n        const isRealObject = isObject(objValue) && !Array.isArray(objValue);\n\n        if (!isRealObject) continue;\n\n        if (isEmpty(objValue)) {\n            delete obj[key];\n        }\n    }\n}\n\nexport const Cell = Model.extend({\n\n    // This is the same as mvc.Model with the only difference that is uses util.merge\n    // instead of just _.extend. The reason is that we want to mixin attributes set in upper classes.\n    constructor: function(attributes, options) {\n\n        var defaults;\n        var attrs = attributes || {};\n        if (typeof this.preinitialize === 'function') {\n            // Check to support an older version\n            this.preinitialize.apply(this, arguments);\n        }\n        this.cid = uniqueId('c');\n        this.attributes = {};\n        if (options && options.collection) this.collection = options.collection;\n        if (options && options.parse) attrs = this.parse(attrs, options) || {};\n        if ((defaults = result(this, 'defaults'))) {\n            //<custom code>\n            // Replaced the call to _.defaults with util.merge.\n            const customizer = (options && options.mergeArrays === true) ? false : attributesMerger;\n            attrs = merge({}, defaults, attrs, customizer);\n            //</custom code>\n        }\n        this.set(attrs, options);\n        this.changed = {};\n        this.initialize.apply(this, arguments);\n    },\n\n    translate: function(dx, dy, opt) {\n\n        throw new Error('Must define a translate() method.');\n    },\n\n    toJSON: function(opt) {\n\n        const { ignoreDefaults, ignoreEmptyAttributes = false } = opt || {};\n        const defaults = result(this.constructor.prototype, 'defaults');\n\n        if (ignoreDefaults === false) {\n            // Return all attributes without omitting the defaults\n            const finalAttributes = cloneDeep(this.attributes);\n\n            if (!ignoreEmptyAttributes) return finalAttributes;\n\n            removeEmptyAttributes(finalAttributes);\n\n            return finalAttributes;\n        }\n\n        let defaultAttributes = {};\n        let attributes = cloneDeep(this.attributes);\n\n        if (ignoreDefaults === true) {\n            // Compare all attributes with the defaults\n            defaultAttributes = defaults;\n        } else {\n            // Compare only the specified attributes with the defaults, use `attrs` as a default if not specified\n            const differentiateKeys = Array.isArray(ignoreDefaults) ? ignoreDefaults : ['attrs'];\n\n            differentiateKeys.forEach((key) => {\n                defaultAttributes[key] = defaults[key] || {};\n            });\n        }\n\n        // Omit `id` and `type` attribute from the defaults since it should be always present\n        const finalAttributes = objectDifference(attributes, omit(defaultAttributes, 'id', 'type'), { maxDepth: 4 });\n\n        if (ignoreEmptyAttributes) {\n            removeEmptyAttributes(finalAttributes);\n        }\n\n        return finalAttributes;\n    },\n\n    initialize: function(options) {\n\n        const idAttribute = this.getIdAttribute();\n        if (!options || options[idAttribute] === undefined) {\n            this.set(idAttribute, this.generateId(), { silent: true });\n        }\n\n        this._transitionIds = {};\n        this._scheduledTransitionIds = {};\n\n        // Collect ports defined in `attrs` and keep collecting whenever `attrs` object changes.\n        this.processPorts();\n        this.on('change:attrs', this.processPorts, this);\n    },\n\n    getIdAttribute: function() {\n        return this.idAttribute || 'id';\n    },\n\n    generateId: function() {\n        return uuid();\n    },\n\n    /**\n     * @deprecated\n     */\n    processPorts: function() {\n\n        // Whenever `attrs` changes, we extract ports from the `attrs` object and store it\n        // in a more accessible way. Also, if any port got removed and there were links that had `target`/`source`\n        // set to that port, we remove those links as well (to follow the same behaviour as\n        // with a removed element).\n\n        var previousPorts = this.ports;\n\n        // Collect ports from the `attrs` object.\n        var ports = {};\n        forIn(this.get('attrs'), function(attrs, selector) {\n\n            if (attrs && attrs.port) {\n\n                // `port` can either be directly an `id` or an object containing an `id` (and potentially other data).\n                if (attrs.port.id !== undefined) {\n                    ports[attrs.port.id] = attrs.port;\n                } else {\n                    ports[attrs.port] = { id: attrs.port };\n                }\n            }\n        });\n\n        // Collect ports that have been removed (compared to the previous ports) - if any.\n        // Use hash table for quick lookup.\n        var removedPorts = {};\n        forIn(previousPorts, function(port, id) {\n\n            if (!ports[id]) removedPorts[id] = true;\n        });\n\n        // Remove all the incoming/outgoing links that have source/target port set to any of the removed ports.\n        if (this.graph && !isEmpty(removedPorts)) {\n\n            var inboundLinks = this.graph.getConnectedLinks(this, { inbound: true });\n            inboundLinks.forEach(function(link) {\n\n                if (removedPorts[link.get('target').port]) link.remove();\n            });\n\n            var outboundLinks = this.graph.getConnectedLinks(this, { outbound: true });\n            outboundLinks.forEach(function(link) {\n\n                if (removedPorts[link.get('source').port]) link.remove();\n            });\n        }\n\n        // Update the `ports` object.\n        this.ports = ports;\n    },\n\n    remove: function(opt = {}) {\n\n        // Store the graph in a variable because `this.graph` won't be accessible\n        // after `this.trigger('remove', ...)` down below.\n        const { graph, collection } = this;\n        if (!graph) {\n            // The collection is a common mvc collection (not the graph collection).\n            if (collection) collection.remove(this, opt);\n            return this;\n        }\n\n        graph.startBatch('remove');\n\n        // First, unembed this cell from its parent cell if there is one.\n        const parentCell = this.getParentCell();\n        if (parentCell) {\n            parentCell.unembed(this, opt);\n        }\n\n        // Remove also all the cells, which were embedded into this cell\n        const embeddedCells = this.getEmbeddedCells();\n        for (let i = 0, n = embeddedCells.length; i < n; i++) {\n            const embed = embeddedCells[i];\n            if (embed) {\n                embed.remove(opt);\n            }\n        }\n\n        this.trigger('remove', this, graph.attributes.cells, opt);\n\n        graph.stopBatch('remove');\n\n        return this;\n    },\n\n    toFront: function(opt) {\n        var graph = this.graph;\n        if (graph) {\n            opt = defaults(opt || {}, { foregroundEmbeds: true });\n\n            let cells;\n            if (opt.deep) {\n                cells = this.getEmbeddedCells({ deep: true, breadthFirst: opt.breadthFirst !== false, sortSiblings: opt.foregroundEmbeds });\n                cells.unshift(this);\n            } else {\n                cells = [this];\n            }\n\n            const sortedCells = opt.foregroundEmbeds ? cells : sortBy(cells, cell => cell.z());\n\n            const maxZ = graph.maxZIndex();\n            let z = maxZ - cells.length + 1;\n\n            const collection = graph.get('cells');\n\n            let shouldUpdate = (collection.toArray().indexOf(sortedCells[0]) !== (collection.length - cells.length));\n            if (!shouldUpdate) {\n                shouldUpdate = sortedCells.some(function(cell, index) {\n                    return cell.z() !== z + index;\n                });\n            }\n\n            if (shouldUpdate) {\n                this.startBatch('to-front');\n\n                z = z + cells.length;\n\n                sortedCells.forEach(function(cell, index) {\n                    cell.set('z', z + index, opt);\n                });\n\n                this.stopBatch('to-front');\n            }\n        }\n\n        return this;\n    },\n\n    toBack: function(opt) {\n        var graph = this.graph;\n        if (graph) {\n            opt = defaults(opt || {}, { foregroundEmbeds: true });\n\n            let cells;\n            if (opt.deep) {\n                cells = this.getEmbeddedCells({ deep: true, breadthFirst: opt.breadthFirst !== false, sortSiblings: opt.foregroundEmbeds });\n                cells.unshift(this);\n            } else {\n                cells = [this];\n            }\n\n            const sortedCells = opt.foregroundEmbeds ? cells : sortBy(cells, cell => cell.z());\n\n            let z = graph.minZIndex();\n\n            var collection = graph.get('cells');\n\n            let shouldUpdate = (collection.toArray().indexOf(sortedCells[0]) !== 0);\n            if (!shouldUpdate) {\n                shouldUpdate = sortedCells.some(function(cell, index) {\n                    return cell.z() !== z + index;\n                });\n            }\n\n            if (shouldUpdate) {\n                this.startBatch('to-back');\n\n                z -= cells.length;\n\n                sortedCells.forEach(function(cell, index) {\n                    cell.set('z', z + index, opt);\n                });\n\n                this.stopBatch('to-back');\n            }\n        }\n\n        return this;\n    },\n\n    parent: function(parent, opt) {\n\n        // getter\n        if (parent === undefined) return this.get('parent');\n        // setter\n        return this.set('parent', parent, opt);\n    },\n\n    embed: function(cell, opt = {}) {\n        const cells = Array.isArray(cell) ? cell : [cell];\n        if (!this.canEmbed(cells)) {\n            throw new Error('Recursive embedding not allowed.');\n        }\n        if (opt.reparent) {\n            const parents = uniq(cells.map(c => c.getParentCell()));\n\n            // Unembed cells from their current parents.\n            parents.forEach((parent) => {\n                // Cell doesn't have to be embedded.\n                if (!parent) return;\n\n                // Pass all the `cells` since the `dia.Cell._unembedCells` method can handle cases\n                // where not all elements of `cells` are embedded in the same parent.\n                parent._unembedCells(cells, opt);\n            });\n\n        } else if (cells.some(c => c.isEmbedded() && this.id !== c.parent())) {\n            throw new Error('Embedding of already embedded cells is not allowed.');\n        }\n        this._embedCells(cells, opt);\n        return this;\n    },\n\n    unembed: function(cell, opt) {\n        const cells = Array.isArray(cell) ? cell : [cell];\n        this._unembedCells(cells, opt);\n        return this;\n    },\n\n    canEmbed: function(cell) {\n        const cells = Array.isArray(cell) ? cell : [cell];\n        return cells.every(c => this !== c && !this.isEmbeddedIn(c));\n    },\n\n    _embedCells: function(cells, opt) {\n        const batchName = 'embed';\n        this.startBatch(batchName);\n        const embeds = assign([], this.get('embeds'));\n        cells.forEach(cell => {\n            // We keep all element ids after link ids.\n            embeds[cell.isLink() ? 'unshift' : 'push'](cell.id);\n            cell.parent(this.id, opt);\n        });\n        this.set('embeds', uniq(embeds), opt);\n        this.stopBatch(batchName);\n    },\n\n    _unembedCells: function(cells, opt) {\n        const batchName = 'unembed';\n        this.startBatch(batchName);\n        cells.forEach(cell => cell.unset('parent', opt));\n        this.set('embeds', without(this.get('embeds'), ...cells.map(cell => cell.id)), opt);\n        this.stopBatch(batchName);\n    },\n\n    getParentCell: function() {\n\n        // unlike link.source/target, cell.parent stores id directly as a string\n        var parentId = this.parent();\n        var graph = this.graph;\n\n        return (parentId && graph && graph.getCell(parentId)) || null;\n    },\n\n    // Return an array of ancestor cells.\n    // The array is ordered from the parent of the cell\n    // to the most distant ancestor.\n    getAncestors: function() {\n\n        var ancestors = [];\n\n        if (!this.graph) {\n            return ancestors;\n        }\n\n        var parentCell = this.getParentCell();\n        while (parentCell) {\n            ancestors.push(parentCell);\n            parentCell = parentCell.getParentCell();\n        }\n\n        return ancestors;\n    },\n\n    getEmbeddedCells: function(opt) {\n\n        opt = opt || {};\n\n        // Cell models can only be retrieved when this element is part of a collection.\n        // There is no way this element knows about other cells otherwise.\n        // This also means that calling e.g. `translate()` on an element with embeds before\n        // adding it to a graph does not translate its embeds.\n        if (!this.graph) {\n            return [];\n        }\n\n        if (opt.deep) {\n            if (opt.breadthFirst) {\n                return this._getEmbeddedCellsBfs(opt.sortSiblings);\n            } else {\n                return this._getEmbeddedCellsDfs(opt.sortSiblings);\n            }\n        }\n\n        const embeddedIds = this.get('embeds');\n        if (isEmpty(embeddedIds)) {\n            return [];\n        }\n\n        let cells = embeddedIds.map(this.graph.getCell, this.graph);\n        if (opt.sortSiblings) {\n            cells = sortBy(cells, cell => cell.z());\n        }\n\n        return cells;\n    },\n\n    _getEmbeddedCellsBfs: function(sortSiblings) {\n        const cells = [];\n\n        const queue = [];\n        queue.push(this);\n\n        while (queue.length > 0) {\n            const current = queue.shift();\n            cells.push(current);\n\n            const embeddedCells = current.getEmbeddedCells({ sortSiblings: sortSiblings });\n\n            queue.push(...embeddedCells);\n        }\n        cells.shift();\n\n        return cells;\n    },\n\n    _getEmbeddedCellsDfs: function(sortSiblings) {\n        const cells = [];\n\n        const stack = [];\n        stack.push(this);\n\n        while (stack.length > 0) {\n            const current = stack.pop();\n            cells.push(current);\n\n            const embeddedCells = current.getEmbeddedCells({ sortSiblings: sortSiblings });\n\n            // When using the stack, cells that are embedded last are processed first.\n            // To maintain the original order, we need to push the cells in reverse order\n            for (let i = embeddedCells.length - 1; i >= 0; --i) {\n                stack.push(embeddedCells[i]);\n            }\n        }\n        cells.shift();\n\n        return cells;\n    },\n\n    isEmbeddedIn: function(cell, opt) {\n\n        var cellId = isString(cell) ? cell : cell.id;\n        var parentId = this.parent();\n\n        opt = assign({ deep: true }, opt);\n\n        // See getEmbeddedCells().\n        if (this.graph && opt.deep) {\n\n            while (parentId) {\n                if (parentId === cellId) {\n                    return true;\n                }\n                parentId = this.graph.getCell(parentId).parent();\n            }\n\n            return false;\n\n        } else {\n\n            // When this cell is not part of a collection check\n            // at least whether it's a direct child of given cell.\n            return parentId === cellId;\n        }\n    },\n\n    // Whether or not the cell is embedded in any other cell.\n    isEmbedded: function() {\n\n        return !!this.parent();\n    },\n\n    // Isolated cloning. Isolated cloning has two versions: shallow and deep (pass `{ deep: true }` in `opt`).\n    // Shallow cloning simply clones the cell and returns a new cell with different ID.\n    // Deep cloning clones the cell and all its embedded cells recursively.\n    clone: function(opt) {\n\n        opt = opt || {};\n\n        if (!opt.deep) {\n            // Shallow cloning.\n\n            var clone = Model.prototype.clone.apply(this, arguments);\n            // We don't want the clone to have the same ID as the original.\n            clone.set(this.getIdAttribute(), this.generateId());\n            // A shallow cloned element does not carry over the original embeds.\n            clone.unset('embeds');\n            // And can not be embedded in any cell\n            // as the clone is not part of the graph.\n            clone.unset('parent');\n\n            return clone;\n\n        } else {\n            // Deep cloning.\n\n            // For a deep clone, simply call `graph.cloneCells()` with the cell and all its embedded cells.\n            return toArray(cloneCells([this].concat(this.getEmbeddedCells({ deep: true }))));\n        }\n    },\n\n    // A convenient way to set nested properties.\n    // This method merges the properties you'd like to set with the ones\n    // stored in the cell and makes sure change events are properly triggered.\n    // You can either set a nested property with one object\n    // or use a property path.\n    // The most simple use case is:\n    // `cell.prop('name/first', 'John')` or\n    // `cell.prop({ name: { first: 'John' } })`.\n    // Nested arrays are supported too:\n    // `cell.prop('series/0/data/0/degree', 50)` or\n    // `cell.prop({ series: [ { data: [ { degree: 50 } ] } ] })`.\n    prop: function(props, value, opt) {\n\n        var delim = '/';\n        var _isString = isString(props);\n\n        if (_isString || Array.isArray(props)) {\n            // Get/set an attribute by a special path syntax that delimits\n            // nested objects by the colon character.\n\n            if (arguments.length > 1) {\n\n                var path;\n                var pathArray;\n\n                if (_isString) {\n                    path = props;\n                    pathArray = path.split('/');\n                } else {\n                    path = props.join(delim);\n                    pathArray = props.slice();\n                }\n\n                var property = pathArray[0];\n                var pathArrayLength = pathArray.length;\n\n                const options = opt || {};\n                options.propertyPath = path;\n                options.propertyValue = value;\n                options.propertyPathArray = pathArray;\n                if (!('rewrite' in options)) {\n                    options.rewrite = false;\n                }\n\n                var update = {};\n                // Initialize the nested object. Sub-objects are either arrays or objects.\n                // An empty array is created if the sub-key is an integer. Otherwise, an empty object is created.\n                // Note that this imposes a limitation on object keys one can use with Inspector.\n                // Pure integer keys will cause issues and are therefore not allowed.\n                var initializer = update;\n                var prevProperty = property;\n\n                for (var i = 1; i < pathArrayLength; i++) {\n                    var pathItem = pathArray[i];\n                    var isArrayIndex = Number.isFinite(_isString ? Number(pathItem) : pathItem);\n                    initializer = initializer[prevProperty] = isArrayIndex ? [] : {};\n                    prevProperty = pathItem;\n                }\n\n                // Fill update with the `value` on `path`.\n                update = setByPath(update, pathArray, value, '/');\n\n                var baseAttributes = merge({}, this.attributes);\n                // if rewrite mode enabled, we replace value referenced by path with\n                // the new one (we don't merge).\n                options.rewrite && unsetByPath(baseAttributes, path, '/');\n\n                // Merge update with the model attributes.\n                var attributes = merge(baseAttributes, update);\n                // Finally, set the property to the updated attributes.\n                return this.set(property, attributes[property], options);\n\n            } else {\n\n                return getByPath(this.attributes, props, delim);\n            }\n        }\n\n        const options = value || {};\n        // Note: '' is not the path to the root. It's a path with an empty string i.e. { '': {}}.\n        options.propertyPath = null;\n        options.propertyValue = props;\n        options.propertyPathArray = [];\n        if (!('rewrite' in options)) {\n            options.rewrite = false;\n        }\n\n        // Create a new object containing only the changed attributes.\n        const changedAttributes = {};\n        for (const key in props) {\n            // Merging the values of changed attributes with the current ones.\n            const { changedValue } = merge({}, { changedValue: this.attributes[key] }, { changedValue: props[key] });\n            changedAttributes[key] = changedValue;\n        }\n\n        return this.set(changedAttributes, options);\n    },\n\n    // A convenient way to unset nested properties\n    removeProp: function(path, opt) {\n\n        opt = opt || {};\n\n        var pathArray = Array.isArray(path) ? path : path.split('/');\n\n        // Once a property is removed from the `attrs` attribute\n        // the cellView will recognize a `dirty` flag and re-render itself\n        // in order to remove the attribute from SVG element.\n        var property = pathArray[0];\n        if (property === 'attrs') opt.dirty = true;\n\n        if (pathArray.length === 1) {\n            // A top level property\n            return this.unset(path, opt);\n        }\n\n        // A nested property\n        var nestedPath = pathArray.slice(1);\n        var propertyValue = this.get(property);\n        if (propertyValue === undefined || propertyValue === null) return this;\n        propertyValue = cloneDeep(propertyValue);\n\n        unsetByPath(propertyValue, nestedPath, '/');\n\n        return this.set(property, propertyValue, opt);\n    },\n\n    // A convenient way to set nested attributes.\n    attr: function(attrs, value, opt) {\n\n        var args = Array.from(arguments);\n        if (args.length === 0) {\n            return this.get('attrs');\n        }\n\n        if (Array.isArray(attrs)) {\n            args[0] = ['attrs'].concat(attrs);\n        } else if (isString(attrs)) {\n            // Get/set an attribute by a special path syntax that delimits\n            // nested objects by the colon character.\n            args[0] = 'attrs/' + attrs;\n\n        } else {\n\n            args[0] = { 'attrs' : attrs };\n        }\n\n        return this.prop.apply(this, args);\n    },\n\n    // A convenient way to unset nested attributes\n    removeAttr: function(path, opt) {\n\n        if (Array.isArray(path)) {\n\n            return this.removeProp(['attrs'].concat(path));\n        }\n\n        return this.removeProp('attrs/' + path, opt);\n    },\n\n    transition: function(path, value, opt, delim) {\n\n        delim = delim || '/';\n\n        var defaults = {\n            duration: 100,\n            delay: 10,\n            timingFunction: timing.linear,\n            valueFunction: interpolate.number\n        };\n\n        opt = assign(defaults, opt);\n\n        var firstFrameTime = 0;\n        var interpolatingFunction;\n\n        var setter = function(runtime) {\n\n            var id, progress, propertyValue;\n\n            firstFrameTime = firstFrameTime || runtime;\n            runtime -= firstFrameTime;\n            progress = runtime / opt.duration;\n\n            if (progress < 1) {\n                this._transitionIds[path] = id = nextFrame(setter);\n            } else {\n                progress = 1;\n                delete this._transitionIds[path];\n            }\n\n            propertyValue = interpolatingFunction(opt.timingFunction(progress));\n\n            opt.transitionId = id;\n\n            this.prop(path, propertyValue, opt);\n\n            if (!id) this.trigger('transition:end', this, path);\n\n        }.bind(this);\n\n        const { _scheduledTransitionIds } = this;\n        let initialId;\n\n        var initiator = (callback) => {\n\n            if (_scheduledTransitionIds[path]) {\n                _scheduledTransitionIds[path] = without(_scheduledTransitionIds[path], initialId);\n                if (_scheduledTransitionIds[path].length === 0) {\n                    delete _scheduledTransitionIds[path];\n                }\n            }\n\n            this.stopPendingTransitions(path, delim);\n\n            interpolatingFunction = opt.valueFunction(getByPath(this.attributes, path, delim), value);\n\n            this._transitionIds[path] = nextFrame(callback);\n\n            this.trigger('transition:start', this, path);\n\n        };\n\n        initialId = setTimeout(initiator, opt.delay, setter);\n\n        _scheduledTransitionIds[path] || (_scheduledTransitionIds[path] = []);\n        _scheduledTransitionIds[path].push(initialId);\n\n        return initialId;\n    },\n\n    getTransitions: function() {\n        return union(\n            Object.keys(this._transitionIds),\n            Object.keys(this._scheduledTransitionIds)\n        );\n    },\n\n    stopScheduledTransitions: function(path, delim = '/') {\n        const { _scheduledTransitionIds = {}} = this;\n        let transitions = Object.keys(_scheduledTransitionIds);\n        if (path) {\n            const pathArray = path.split(delim);\n            transitions = transitions.filter((key) => {\n                return isEqual(pathArray, key.split(delim).slice(0, pathArray.length));\n            });\n        }\n        transitions.forEach((key) => {\n            const transitionIds = _scheduledTransitionIds[key];\n            // stop the initiator\n            transitionIds.forEach(transitionId => clearTimeout(transitionId));\n            delete _scheduledTransitionIds[key];\n            // Note: we could trigger transition:cancel` event here\n        });\n        return this;\n    },\n\n    stopPendingTransitions(path, delim = '/') {\n        const { _transitionIds = {}} = this;\n        let transitions = Object.keys(_transitionIds);\n        if (path) {\n            const pathArray = path.split(delim);\n            transitions = transitions.filter((key) => {\n                return isEqual(pathArray, key.split(delim).slice(0, pathArray.length));\n            });\n        }\n        transitions.forEach((key) => {\n            const transitionId = _transitionIds[key];\n            // stop the setter\n            cancelFrame(transitionId);\n            delete _transitionIds[key];\n            this.trigger('transition:end', this, key);\n        });\n    },\n\n    stopTransitions: function(path, delim = '/') {\n        this.stopScheduledTransitions(path, delim);\n        this.stopPendingTransitions(path, delim);\n        return this;\n    },\n\n    // A shorcut making it easy to create constructs like the following:\n    // `var el = (new joint.shapes.standard.Rectangle()).addTo(graph)`.\n    addTo: function(graph, opt) {\n\n        graph.addCell(this, opt);\n        return this;\n    },\n\n    // A shortcut for an equivalent call: `paper.findViewByModel(cell)`\n    // making it easy to create constructs like the following:\n    // `cell.findView(paper).highlight()`\n    findView: function(paper) {\n\n        return paper.findViewByModel(this);\n    },\n\n    isElement: function() {\n\n        return false;\n    },\n\n    isLink: function() {\n\n        return false;\n    },\n\n    startBatch: function(name, opt) {\n\n        if (this.graph) { this.graph.startBatch(name, assign({}, opt, { cell: this })); }\n        return this;\n    },\n\n    stopBatch: function(name, opt) {\n\n        if (this.graph) { this.graph.stopBatch(name, assign({}, opt, { cell: this })); }\n        return this;\n    },\n\n    getChangeFlag: function(attributes) {\n\n        var flag = 0;\n        if (!attributes) return flag;\n        for (var key in attributes) {\n            if (!attributes.hasOwnProperty(key) || !this.hasChanged(key)) continue;\n            flag |= attributes[key];\n        }\n        return flag;\n    },\n\n    angle: function() {\n\n        // To be overridden.\n        return 0;\n    },\n\n    position: function() {\n\n        // To be overridden.\n        return new g.Point(0, 0);\n    },\n\n    z: function() {\n        return this.get('z') || 0;\n    },\n\n    getPointFromConnectedLink: function() {\n\n        // To be overridden\n        return new g.Point();\n    },\n\n    getBBox: function() {\n\n        // To be overridden\n        return new g.Rect(0, 0, 0, 0);\n    },\n\n    getPointRotatedAroundCenter(angle, x, y) {\n        const point = new g.Point(x, y);\n        if (angle) point.rotate(this.getBBox().center(), angle);\n        return point;\n    },\n\n    getAbsolutePointFromRelative(x, y) {\n        // Rotate the position to take the model angle into account\n        return this.getPointRotatedAroundCenter(\n            -this.angle(),\n            // Transform the relative position to absolute\n            this.position().offset(x, y)\n        );\n    },\n\n    getRelativePointFromAbsolute(x, y) {\n        return this\n            // Rotate the coordinates to mitigate the element's rotation.\n            .getPointRotatedAroundCenter(this.angle(), x, y)\n            // Transform the absolute position into relative\n            .difference(this.position());\n    }\n\n}, {\n\n    getAttributeDefinition: function(attrName) {\n\n        var defNS = this.attributes;\n        var globalDefNS = attributes;\n        return (defNS && defNS[attrName]) || globalDefNS[attrName];\n    },\n\n    define: function(type, defaults, protoProps, staticProps) {\n\n        protoProps = assign({\n            defaults: defaultsDeep({ type: type }, defaults, this.prototype.defaults)\n        }, protoProps);\n\n        var Cell = this.extend(protoProps, staticProps);\n        // es5 backward compatibility\n        /* eslint-disable no-undef */\n        if (typeof joint !== 'undefined' && has(joint, 'shapes')) {\n            setByPath(joint.shapes, type, Cell, '.');\n        }\n        /* eslint-enable no-undef */\n        return Cell;\n    }\n});\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1631, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1637, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/Graph.mjs"],"sourcesContent":["import * as util from '../util/index.mjs';\nimport * as g from '../g/index.mjs';\n\nimport { Model } from '../mvc/Model.mjs';\nimport { Collection } from '../mvc/Collection.mjs';\nimport { wrappers, wrapWith } from '../util/wrappers.mjs';\nimport { cloneCells } from '../util/index.mjs';\n\nconst GraphCells = Collection.extend({\n\n    initialize: function(models, opt) {\n\n        // Set the optional namespace where all model classes are defined.\n        if (opt.cellNamespace) {\n            this.cellNamespace = opt.cellNamespace;\n        } else {\n            /* eslint-disable no-undef */\n            this.cellNamespace = typeof joint !== 'undefined' && util.has(joint, 'shapes') ? joint.shapes : null;\n            /* eslint-enable no-undef */\n        }\n\n\n        this.graph = opt.graph;\n    },\n\n    model: function(attrs, opt) {\n\n        const collection = opt.collection;\n        const namespace = collection.cellNamespace;\n        const { type } = attrs;\n\n        // Find the model class based on the `type` attribute in the cell namespace\n        const ModelClass = util.getByPath(namespace, type, '.');\n        if (!ModelClass) {\n            throw new Error(`dia.Graph: Could not find cell constructor for type: '${type}'. Make sure to add the constructor to 'cellNamespace'.`);\n        }\n\n        return new ModelClass(attrs, opt);\n    },\n\n    _addReference: function(model, options) {\n        Collection.prototype._addReference.apply(this, arguments);\n        // If not in `dry` mode and the model does not have a graph reference yet,\n        // set the reference.\n        if (!options.dry && !model.graph) {\n            model.graph = this.graph;\n        }\n    },\n\n    _removeReference: function(model, options) {\n        Collection.prototype._removeReference.apply(this, arguments);\n        // If not in `dry` mode and the model has a reference to this exact graph,\n        // remove the reference.\n        if (!options.dry && model.graph === this.graph) {\n            model.graph = null;\n        }\n    },\n\n    // `comparator` makes it easy to sort cells based on their `z` index.\n    comparator: function(model) {\n\n        return model.get('z') || 0;\n    }\n});\n\n\nexport const Graph = Model.extend({\n\n    initialize: function(attrs, opt) {\n\n        opt = opt || {};\n\n        // Passing `cellModel` function in the options object to graph allows for\n        // setting models based on attribute objects. This is especially handy\n        // when processing JSON graphs that are in a different than JointJS format.\n        var cells = new GraphCells([], {\n            model: opt.cellModel,\n            cellNamespace: opt.cellNamespace,\n            graph: this\n        });\n        Model.prototype.set.call(this, 'cells', cells);\n\n        // Make all the events fired in the `cells` collection available.\n        // to the outside world.\n        cells.on('all', this.trigger, this);\n\n        // JointJS automatically doesn't trigger re-sort if models attributes are changed later when\n        // they're already in the collection. Therefore, we're triggering sort manually here.\n        this.on('change:z', this._sortOnChangeZ, this);\n\n        // `joint.dia.Graph` keeps an internal data structure (an adjacency list)\n        // for fast graph queries. All changes that affect the structure of the graph\n        // must be reflected in the `al` object. This object provides fast answers to\n        // questions such as \"what are the neighbours of this node\" or \"what\n        // are the sibling links of this link\".\n\n        // Outgoing edges per node. Note that we use a hash-table for the list\n        // of outgoing edges for a faster lookup.\n        // [nodeId] -> Object [edgeId] -> true\n        this._out = {};\n        // Ingoing edges per node.\n        // [nodeId] -> Object [edgeId] -> true\n        this._in = {};\n        // `_nodes` is useful for quick lookup of all the elements in the graph, without\n        // having to go through the whole cells array.\n        // [node ID] -> true\n        this._nodes = {};\n        // `_edges` is useful for quick lookup of all the links in the graph, without\n        // having to go through the whole cells array.\n        // [edgeId] -> true\n        this._edges = {};\n\n        this._batches = {};\n\n        cells.on('add', this._restructureOnAdd, this);\n        cells.on('remove', this._restructureOnRemove, this);\n        cells.on('reset', this._restructureOnReset, this);\n        cells.on('change:source', this._restructureOnChangeSource, this);\n        cells.on('change:target', this._restructureOnChangeTarget, this);\n        cells.on('remove', this._removeCell, this);\n    },\n\n    _sortOnChangeZ: function() {\n\n        this.get('cells').sort();\n    },\n\n    _restructureOnAdd: function(cell) {\n\n        if (cell.isLink()) {\n            this._edges[cell.id] = true;\n            var { source, target } = cell.attributes;\n            if (source.id) {\n                (this._out[source.id] || (this._out[source.id] = {}))[cell.id] = true;\n            }\n            if (target.id) {\n                (this._in[target.id] || (this._in[target.id] = {}))[cell.id] = true;\n            }\n        } else {\n            this._nodes[cell.id] = true;\n        }\n    },\n\n    _restructureOnRemove: function(cell) {\n\n        if (cell.isLink()) {\n            delete this._edges[cell.id];\n            var { source, target } = cell.attributes;\n            if (source.id && this._out[source.id] && this._out[source.id][cell.id]) {\n                delete this._out[source.id][cell.id];\n            }\n            if (target.id && this._in[target.id] && this._in[target.id][cell.id]) {\n                delete this._in[target.id][cell.id];\n            }\n        } else {\n            delete this._nodes[cell.id];\n        }\n    },\n\n    _restructureOnReset: function(cells) {\n\n        // Normalize into an array of cells. The original `cells` is GraphCells mvc collection.\n        cells = cells.models;\n\n        this._out = {};\n        this._in = {};\n        this._nodes = {};\n        this._edges = {};\n\n        cells.forEach(this._restructureOnAdd, this);\n    },\n\n    _restructureOnChangeSource: function(link) {\n\n        var prevSource = link.previous('source');\n        if (prevSource.id && this._out[prevSource.id]) {\n            delete this._out[prevSource.id][link.id];\n        }\n        var source = link.attributes.source;\n        if (source.id) {\n            (this._out[source.id] || (this._out[source.id] = {}))[link.id] = true;\n        }\n    },\n\n    _restructureOnChangeTarget: function(link) {\n\n        var prevTarget = link.previous('target');\n        if (prevTarget.id && this._in[prevTarget.id]) {\n            delete this._in[prevTarget.id][link.id];\n        }\n        var target = link.get('target');\n        if (target.id) {\n            (this._in[target.id] || (this._in[target.id] = {}))[link.id] = true;\n        }\n    },\n\n    // Return all outbound edges for the node. Return value is an object\n    // of the form: [edgeId] -> true\n    getOutboundEdges: function(node) {\n\n        return (this._out && this._out[node]) || {};\n    },\n\n    // Return all inbound edges for the node. Return value is an object\n    // of the form: [edgeId] -> true\n    getInboundEdges: function(node) {\n\n        return (this._in && this._in[node]) || {};\n    },\n\n    toJSON: function(opt = {}) {\n\n        // JointJS does not recursively call `toJSON()` on attributes that are themselves models/collections.\n        // It just clones the attributes. Therefore, we must call `toJSON()` on the cells collection explicitly.\n        var json = Model.prototype.toJSON.apply(this, arguments);\n        json.cells = this.get('cells').toJSON(opt.cellAttributes);\n        return json;\n    },\n\n    fromJSON: function(json, opt) {\n\n        if (!json.cells) {\n\n            throw new Error('Graph JSON must contain cells array.');\n        }\n\n        return this.set(json, opt);\n    },\n\n    set: function(key, val, opt) {\n\n        var attrs;\n\n        // Handle both `key`, value and {key: value} style arguments.\n        if (typeof key === 'object') {\n            attrs = key;\n            opt = val;\n        } else {\n            (attrs = {})[key] = val;\n        }\n\n        // Make sure that `cells` attribute is handled separately via resetCells().\n        if (attrs.hasOwnProperty('cells')) {\n            this.resetCells(attrs.cells, opt);\n            attrs = util.omit(attrs, 'cells');\n        }\n\n        // The rest of the attributes are applied via original set method.\n        return Model.prototype.set.call(this, attrs, opt);\n    },\n\n    clear: function(opt) {\n\n        opt = util.assign({}, opt, { clear: true });\n\n        var collection = this.get('cells');\n\n        if (collection.length === 0) return this;\n\n        this.startBatch('clear', opt);\n\n        // The elements come after the links.\n        var cells = collection.sortBy(function(cell) {\n            return cell.isLink() ? 1 : 2;\n        });\n\n        do {\n\n            // Remove all the cells one by one.\n            // Note that all the links are removed first, so it's\n            // safe to remove the elements without removing the connected\n            // links first.\n            cells.shift().remove(opt);\n\n        } while (cells.length > 0);\n\n        this.stopBatch('clear');\n\n        return this;\n    },\n\n    _prepareCell: function(cell) {\n\n        let attrs;\n        if (cell instanceof Model) {\n            attrs = cell.attributes;\n        } else {\n            attrs = cell;\n        }\n\n        if (!util.isString(attrs.type)) {\n            throw new TypeError('dia.Graph: cell type must be a string.');\n        }\n\n        return cell;\n    },\n\n    minZIndex: function() {\n\n        var firstCell = this.get('cells').first();\n        return firstCell ? (firstCell.get('z') || 0) : 0;\n    },\n\n    maxZIndex: function() {\n\n        var lastCell = this.get('cells').last();\n        return lastCell ? (lastCell.get('z') || 0) : 0;\n    },\n\n    addCell: function(cell, opt) {\n\n        if (Array.isArray(cell)) {\n\n            return this.addCells(cell, opt);\n        }\n\n        if (cell instanceof Model) {\n\n            if (!cell.has('z')) {\n                cell.set('z', this.maxZIndex() + 1);\n            }\n\n        } else if (cell.z === undefined) {\n\n            cell.z = this.maxZIndex() + 1;\n        }\n\n        this.get('cells').add(this._prepareCell(cell, opt), opt || {});\n\n        return this;\n    },\n\n    addCells: function(cells, opt) {\n\n        if (cells.length === 0) return this;\n\n        cells = util.flattenDeep(cells);\n        opt.maxPosition = opt.position = cells.length - 1;\n\n        this.startBatch('add', opt);\n        cells.forEach(function(cell) {\n            this.addCell(cell, opt);\n            opt.position--;\n        }, this);\n        this.stopBatch('add', opt);\n\n        return this;\n    },\n\n    // When adding a lot of cells, it is much more efficient to\n    // reset the entire cells collection in one go.\n    // Useful for bulk operations and optimizations.\n    resetCells: function(cells, opt) {\n\n        var preparedCells = util.toArray(cells).map(function(cell) {\n            return this._prepareCell(cell, opt);\n        }, this);\n        this.get('cells').reset(preparedCells, opt);\n\n        return this;\n    },\n\n    removeCells: function(cells, opt) {\n\n        if (cells.length) {\n\n            this.startBatch('remove');\n            util.invoke(cells, 'remove', opt);\n            this.stopBatch('remove');\n        }\n\n        return this;\n    },\n\n    _removeCell: function(cell, collection, options) {\n\n        options = options || {};\n\n        if (!options.clear) {\n            // Applications might provide a `disconnectLinks` option set to `true` in order to\n            // disconnect links when a cell is removed rather then removing them. The default\n            // is to remove all the associated links.\n            if (options.disconnectLinks) {\n\n                this.disconnectLinks(cell, options);\n\n            } else {\n\n                this.removeLinks(cell, options);\n            }\n        }\n        // Silently remove the cell from the cells collection. Silently, because\n        // `joint.dia.Cell.prototype.remove` already triggers the `remove` event which is\n        // then propagated to the graph model. If we didn't remove the cell silently, two `remove` events\n        // would be triggered on the graph model.\n        this.get('cells').remove(cell, { silent: true });\n    },\n\n    transferCellEmbeds: function(sourceCell, targetCell, opt = {}) {\n\n        const batchName = 'transfer-embeds';\n        this.startBatch(batchName);\n\n        // Embed children of the source cell in the target cell.\n        const children = sourceCell.getEmbeddedCells();\n        targetCell.embed(children, { ...opt, reparent: true });\n\n        this.stopBatch(batchName);\n    },\n\n    transferCellConnectedLinks: function(sourceCell, targetCell, opt = {}) {\n\n        const batchName = 'transfer-connected-links';\n        this.startBatch(batchName);\n\n        // Reconnect all the links connected to the old cell to the new cell.\n        const connectedLinks = this.getConnectedLinks(sourceCell, opt);\n        connectedLinks.forEach((link) => {\n\n            if (link.getSourceCell() === sourceCell) {\n                link.prop(['source', 'id'], targetCell.id, opt);\n            }\n\n            if (link.getTargetCell() === sourceCell) {\n                link.prop(['target', 'id'], targetCell.id, opt);\n            }\n        });\n\n        this.stopBatch(batchName);\n    },\n\n    // Get a cell by `id`.\n    getCell: function(id) {\n\n        return this.get('cells').get(id);\n    },\n\n    getCells: function() {\n\n        return this.get('cells').toArray();\n    },\n\n    getElements: function() {\n\n        return this.get('cells').toArray().filter(cell => cell.isElement());\n    },\n\n    getLinks: function() {\n\n        return this.get('cells').toArray().filter(cell => cell.isLink());\n    },\n\n    getFirstCell: function() {\n\n        return this.get('cells').first();\n    },\n\n    getLastCell: function() {\n\n        return this.get('cells').last();\n    },\n\n    // Get all inbound and outbound links connected to the cell `model`.\n    getConnectedLinks: function(model, opt) {\n\n        opt = opt || {};\n\n        var indirect = opt.indirect;\n        var inbound = opt.inbound;\n        var outbound = opt.outbound;\n        if ((inbound === undefined) && (outbound === undefined)) {\n            inbound = outbound = true;\n        }\n\n        // the final array of connected link models\n        var links = [];\n        // a hash table of connected edges of the form: [edgeId] -> true\n        // used for quick lookups to check if we already added a link\n        var edges = {};\n\n        if (outbound) {\n            addOutbounds(this, model);\n        }\n        if (inbound) {\n            addInbounds(this, model);\n        }\n\n        function addOutbounds(graph, model) {\n            util.forIn(graph.getOutboundEdges(model.id), function(_, edge) {\n                // skip links that were already added\n                // (those must be self-loop links)\n                // (because they are inbound and outbound edges of the same two elements)\n                if (edges[edge]) return;\n                var link = graph.getCell(edge);\n                links.push(link);\n                edges[edge] = true;\n                if (indirect) {\n                    if (inbound) addInbounds(graph, link);\n                    if (outbound) addOutbounds(graph, link);\n                }\n            }.bind(graph));\n            if (indirect && model.isLink()) {\n                var outCell = model.getTargetCell();\n                if (outCell && outCell.isLink()) {\n                    if (!edges[outCell.id]) {\n                        links.push(outCell);\n                        addOutbounds(graph, outCell);\n                    }\n                }\n            }\n        }\n\n        function addInbounds(graph, model) {\n            util.forIn(graph.getInboundEdges(model.id), function(_, edge) {\n                // skip links that were already added\n                // (those must be self-loop links)\n                // (because they are inbound and outbound edges of the same two elements)\n                if (edges[edge]) return;\n                var link = graph.getCell(edge);\n                links.push(link);\n                edges[edge] = true;\n                if (indirect) {\n                    if (inbound) addInbounds(graph, link);\n                    if (outbound) addOutbounds(graph, link);\n                }\n            }.bind(graph));\n            if (indirect && model.isLink()) {\n                var inCell = model.getSourceCell();\n                if (inCell && inCell.isLink()) {\n                    if (!edges[inCell.id]) {\n                        links.push(inCell);\n                        addInbounds(graph, inCell);\n                    }\n                }\n            }\n        }\n\n        // if `deep` option is `true`, check also all the links that are connected to any of the descendant cells\n        if (opt.deep) {\n\n            var embeddedCells = model.getEmbeddedCells({ deep: true });\n\n            // in the first round, we collect all the embedded elements\n            var embeddedElements = {};\n            embeddedCells.forEach(function(cell) {\n                if (cell.isElement()) {\n                    embeddedElements[cell.id] = true;\n                }\n            });\n\n            embeddedCells.forEach(function(cell) {\n                if (cell.isLink()) return;\n                if (outbound) {\n                    util.forIn(this.getOutboundEdges(cell.id), function(exists, edge) {\n                        if (!edges[edge]) {\n                            var edgeCell = this.getCell(edge);\n                            var { source, target } = edgeCell.attributes;\n                            var sourceId = source.id;\n                            var targetId = target.id;\n\n                            // if `includeEnclosed` option is falsy, skip enclosed links\n                            if (!opt.includeEnclosed\n                                && (sourceId && embeddedElements[sourceId])\n                                && (targetId && embeddedElements[targetId])) {\n                                return;\n                            }\n\n                            links.push(this.getCell(edge));\n                            edges[edge] = true;\n                        }\n                    }.bind(this));\n                }\n                if (inbound) {\n                    util.forIn(this.getInboundEdges(cell.id), function(exists, edge) {\n                        if (!edges[edge]) {\n                            var edgeCell = this.getCell(edge);\n                            var { source, target } = edgeCell.attributes;\n                            var sourceId = source.id;\n                            var targetId = target.id;\n\n                            // if `includeEnclosed` option is falsy, skip enclosed links\n                            if (!opt.includeEnclosed\n                                && (sourceId && embeddedElements[sourceId])\n                                && (targetId && embeddedElements[targetId])) {\n                                return;\n                            }\n\n                            links.push(this.getCell(edge));\n                            edges[edge] = true;\n                        }\n                    }.bind(this));\n                }\n            }, this);\n        }\n\n        return links;\n    },\n\n    getNeighbors: function(model, opt) {\n\n        opt || (opt = {});\n\n        var inbound = opt.inbound;\n        var outbound = opt.outbound;\n        if (inbound === undefined && outbound === undefined) {\n            inbound = outbound = true;\n        }\n\n        var neighbors = this.getConnectedLinks(model, opt).reduce(function(res, link) {\n\n            var { source, target } = link.attributes;\n            var loop = link.hasLoop(opt);\n\n            // Discard if it is a point, or if the neighbor was already added.\n            if (inbound && util.has(source, 'id') && !res[source.id]) {\n\n                var sourceElement = this.getCell(source.id);\n                if (sourceElement.isElement()) {\n                    if (loop || (sourceElement && sourceElement !== model && (!opt.deep || !sourceElement.isEmbeddedIn(model)))) {\n                        res[source.id] = sourceElement;\n                    }\n                }\n            }\n\n            // Discard if it is a point, or if the neighbor was already added.\n            if (outbound && util.has(target, 'id') && !res[target.id]) {\n\n                var targetElement = this.getCell(target.id);\n                if (targetElement.isElement()) {\n                    if (loop || (targetElement && targetElement !== model && (!opt.deep || !targetElement.isEmbeddedIn(model)))) {\n                        res[target.id] = targetElement;\n                    }\n                }\n            }\n\n            return res;\n        }.bind(this), {});\n\n        if (model.isLink()) {\n            if (inbound) {\n                var sourceCell = model.getSourceCell();\n                if (sourceCell && sourceCell.isElement() && !neighbors[sourceCell.id]) {\n                    neighbors[sourceCell.id] = sourceCell;\n                }\n            }\n            if (outbound) {\n                var targetCell = model.getTargetCell();\n                if (targetCell && targetCell.isElement() && !neighbors[targetCell.id]) {\n                    neighbors[targetCell.id] = targetCell;\n                }\n            }\n        }\n\n        return util.toArray(neighbors);\n    },\n\n    getCommonAncestor: function(/* cells */) {\n\n        var cellsAncestors = Array.from(arguments).map(function(cell) {\n\n            var ancestors = [];\n            var parentId = cell.get('parent');\n\n            while (parentId) {\n\n                ancestors.push(parentId);\n                parentId = this.getCell(parentId).get('parent');\n            }\n\n            return ancestors;\n\n        }, this);\n\n        cellsAncestors = cellsAncestors.sort(function(a, b) {\n            return a.length - b.length;\n        });\n\n        var commonAncestor = util.toArray(cellsAncestors.shift()).find(function(ancestor) {\n            return cellsAncestors.every(function(cellAncestors) {\n                return cellAncestors.includes(ancestor);\n            });\n        });\n\n        return this.getCell(commonAncestor);\n    },\n\n    // Find the whole branch starting at `element`.\n    // If `opt.deep` is `true`, take into account embedded elements too.\n    // If `opt.breadthFirst` is `true`, use the Breadth-first search algorithm, otherwise use Depth-first search.\n    getSuccessors: function(element, opt) {\n\n        opt = opt || {};\n        var res = [];\n        // Modify the options so that it includes the `outbound` neighbors only. In other words, search forwards.\n        this.search(element, function(el) {\n            if (el !== element) {\n                res.push(el);\n            }\n        }, util.assign({}, opt, { outbound: true }));\n        return res;\n    },\n\n    cloneCells: cloneCells,\n    // Clone the whole subgraph (including all the connected links whose source/target is in the subgraph).\n    // If `opt.deep` is `true`, also take into account all the embedded cells of all the subgraph cells.\n    // Return a map of the form: [original cell ID] -> [clone].\n    cloneSubgraph: function(cells, opt) {\n\n        var subgraph = this.getSubgraph(cells, opt);\n        return this.cloneCells(subgraph);\n    },\n\n    // Return `cells` and all the connected links that connect cells in the `cells` array.\n    // If `opt.deep` is `true`, return all the cells including all their embedded cells\n    // and all the links that connect any of the returned cells.\n    // For example, for a single shallow element, the result is that very same element.\n    // For two elements connected with a link: `A --- L ---> B`, the result for\n    // `getSubgraph([A, B])` is `[A, L, B]`. The same goes for `getSubgraph([L])`, the result is again `[A, L, B]`.\n    getSubgraph: function(cells, opt) {\n\n        opt = opt || {};\n\n        var subgraph = [];\n        // `cellMap` is used for a quick lookup of existence of a cell in the `cells` array.\n        var cellMap = {};\n        var elements = [];\n        var links = [];\n\n        util.toArray(cells).forEach(function(cell) {\n            if (!cellMap[cell.id]) {\n                subgraph.push(cell);\n                cellMap[cell.id] = cell;\n                if (cell.isLink()) {\n                    links.push(cell);\n                } else {\n                    elements.push(cell);\n                }\n            }\n\n            if (opt.deep) {\n                var embeds = cell.getEmbeddedCells({ deep: true });\n                embeds.forEach(function(embed) {\n                    if (!cellMap[embed.id]) {\n                        subgraph.push(embed);\n                        cellMap[embed.id] = embed;\n                        if (embed.isLink()) {\n                            links.push(embed);\n                        } else {\n                            elements.push(embed);\n                        }\n                    }\n                });\n            }\n        });\n\n        links.forEach(function(link) {\n            // For links, return their source & target (if they are elements - not points).\n            var { source, target } = link.attributes;\n            if (source.id && !cellMap[source.id]) {\n                var sourceElement = this.getCell(source.id);\n                subgraph.push(sourceElement);\n                cellMap[sourceElement.id] = sourceElement;\n                elements.push(sourceElement);\n            }\n            if (target.id && !cellMap[target.id]) {\n                var targetElement = this.getCell(target.id);\n                subgraph.push(this.getCell(target.id));\n                cellMap[targetElement.id] = targetElement;\n                elements.push(targetElement);\n            }\n        }, this);\n\n        elements.forEach(function(element) {\n            // For elements, include their connected links if their source/target is in the subgraph;\n            var links = this.getConnectedLinks(element, opt);\n            links.forEach(function(link) {\n                var { source, target } = link.attributes;\n                if (!cellMap[link.id] && source.id && cellMap[source.id] && target.id && cellMap[target.id]) {\n                    subgraph.push(link);\n                    cellMap[link.id] = link;\n                }\n            });\n        }, this);\n\n        return subgraph;\n    },\n\n    // Find all the predecessors of `element`. This is a reverse operation of `getSuccessors()`.\n    // If `opt.deep` is `true`, take into account embedded elements too.\n    // If `opt.breadthFirst` is `true`, use the Breadth-first search algorithm, otherwise use Depth-first search.\n    getPredecessors: function(element, opt) {\n\n        opt = opt || {};\n        var res = [];\n        // Modify the options so that it includes the `inbound` neighbors only. In other words, search backwards.\n        this.search(element, function(el) {\n            if (el !== element) {\n                res.push(el);\n            }\n        }, util.assign({}, opt, { inbound: true }));\n        return res;\n    },\n\n    // Perform search on the graph.\n    // If `opt.breadthFirst` is `true`, use the Breadth-first Search algorithm, otherwise use Depth-first search.\n    // By setting `opt.inbound` to `true`, you can reverse the direction of the search.\n    // If `opt.deep` is `true`, take into account embedded elements too.\n    // `iteratee` is a function of the form `function(element) {}`.\n    // If `iteratee` explicitly returns `false`, the searching stops.\n    search: function(element, iteratee, opt) {\n\n        opt = opt || {};\n        if (opt.breadthFirst) {\n            this.bfs(element, iteratee, opt);\n        } else {\n            this.dfs(element, iteratee, opt);\n        }\n    },\n\n    // Breadth-first search.\n    // If `opt.deep` is `true`, take into account embedded elements too.\n    // If `opt.inbound` is `true`, reverse the search direction (it's like reversing all the link directions).\n    // `iteratee` is a function of the form `function(element, distance) {}`.\n    // where `element` is the currently visited element and `distance` is the distance of that element\n    // from the root `element` passed the `bfs()`, i.e. the element we started the search from.\n    // Note that the `distance` is not the shortest or longest distance, it is simply the number of levels\n    // crossed till we visited the `element` for the first time. It is especially useful for tree graphs.\n    // If `iteratee` explicitly returns `false`, the searching stops.\n    bfs: function(element, iteratee, opt = {}) {\n\n        const visited = {};\n        const distance = {};\n        const queue = [];\n\n        queue.push(element);\n        distance[element.id] = 0;\n\n        while (queue.length > 0) {\n            var next = queue.shift();\n            if (visited[next.id]) continue;\n            visited[next.id] = true;\n            if (iteratee.call(this, next, distance[next.id]) === false) continue;\n            const neighbors = this.getNeighbors(next, opt);\n            for (let i = 0, n = neighbors.length; i < n; i++) {\n                const neighbor = neighbors[i];\n                distance[neighbor.id] = distance[next.id] + 1;\n                queue.push(neighbor);\n            }\n        }\n    },\n\n    // Depth-first search.\n    // If `opt.deep` is `true`, take into account embedded elements too.\n    // If `opt.inbound` is `true`, reverse the search direction (it's like reversing all the link directions).\n    // `iteratee` is a function of the form `function(element, distance) {}`.\n    // If `iteratee` explicitly returns `false`, the search stops.\n    dfs: function(element, iteratee, opt = {}) {\n\n        const visited = {};\n        const distance = {};\n        const queue = [];\n\n        queue.push(element);\n        distance[element.id] = 0;\n\n        while (queue.length > 0) {\n            const next = queue.pop();\n            if (visited[next.id]) continue;\n            visited[next.id] = true;\n            if (iteratee.call(this, next, distance[next.id]) === false) continue;\n            const neighbors = this.getNeighbors(next, opt);\n            const lastIndex = queue.length;\n            for (let i = 0, n = neighbors.length; i < n; i++) {\n                const neighbor = neighbors[i];\n                distance[neighbor.id] = distance[next.id] + 1;\n                queue.splice(lastIndex, 0, neighbor);\n            }\n        }\n    },\n\n    // Get all the roots of the graph. Time complexity: O(|V|).\n    getSources: function() {\n\n        var sources = [];\n        util.forIn(this._nodes, function(exists, node) {\n            if (!this._in[node] || util.isEmpty(this._in[node])) {\n                sources.push(this.getCell(node));\n            }\n        }.bind(this));\n        return sources;\n    },\n\n    // Get all the leafs of the graph. Time complexity: O(|V|).\n    getSinks: function() {\n\n        var sinks = [];\n        util.forIn(this._nodes, function(exists, node) {\n            if (!this._out[node] || util.isEmpty(this._out[node])) {\n                sinks.push(this.getCell(node));\n            }\n        }.bind(this));\n        return sinks;\n    },\n\n    // Return `true` if `element` is a root. Time complexity: O(1).\n    isSource: function(element) {\n\n        return !this._in[element.id] || util.isEmpty(this._in[element.id]);\n    },\n\n    // Return `true` if `element` is a leaf. Time complexity: O(1).\n    isSink: function(element) {\n\n        return !this._out[element.id] || util.isEmpty(this._out[element.id]);\n    },\n\n    // Return `true` is `elementB` is a successor of `elementA`. Return `false` otherwise.\n    isSuccessor: function(elementA, elementB) {\n\n        var isSuccessor = false;\n        this.search(elementA, function(element) {\n            if (element === elementB && element !== elementA) {\n                isSuccessor = true;\n                return false;\n            }\n        }, { outbound: true });\n        return isSuccessor;\n    },\n\n    // Return `true` is `elementB` is a predecessor of `elementA`. Return `false` otherwise.\n    isPredecessor: function(elementA, elementB) {\n\n        var isPredecessor = false;\n        this.search(elementA, function(element) {\n            if (element === elementB && element !== elementA) {\n                isPredecessor = true;\n                return false;\n            }\n        }, { inbound: true });\n        return isPredecessor;\n    },\n\n    // Return `true` is `elementB` is a neighbor of `elementA`. Return `false` otherwise.\n    // `opt.deep` controls whether to take into account embedded elements as well. See `getNeighbors()`\n    // for more details.\n    // If `opt.outbound` is set to `true`, return `true` only if `elementB` is a successor neighbor.\n    // Similarly, if `opt.inbound` is set to `true`, return `true` only if `elementB` is a predecessor neighbor.\n    isNeighbor: function(elementA, elementB, opt) {\n\n        opt = opt || {};\n\n        var inbound = opt.inbound;\n        var outbound = opt.outbound;\n        if ((inbound === undefined) && (outbound === undefined)) {\n            inbound = outbound = true;\n        }\n\n        var isNeighbor = false;\n\n        this.getConnectedLinks(elementA, opt).forEach(function(link) {\n\n            var { source, target } = link.attributes;\n\n            // Discard if it is a point.\n            if (inbound && util.has(source, 'id') && (source.id === elementB.id)) {\n                isNeighbor = true;\n                return false;\n            }\n\n            // Discard if it is a point, or if the neighbor was already added.\n            if (outbound && util.has(target, 'id') && (target.id === elementB.id)) {\n                isNeighbor = true;\n                return false;\n            }\n        });\n\n        return isNeighbor;\n    },\n\n    // Disconnect links connected to the cell `model`.\n    disconnectLinks: function(model, opt) {\n\n        this.getConnectedLinks(model).forEach(function(link) {\n\n            link.set((link.attributes.source.id === model.id ? 'source' : 'target'), { x: 0, y: 0 }, opt);\n        });\n    },\n\n    // Remove links connected to the cell `model` completely.\n    removeLinks: function(model, opt) {\n\n        util.invoke(this.getConnectedLinks(model), 'remove', opt);\n    },\n\n    // Find all cells at given point\n\n    findElementsAtPoint: function(point, opt) {\n        return this._filterAtPoint(this.getElements(), point, opt);\n    },\n\n    findLinksAtPoint: function(point, opt) {\n        return this._filterAtPoint(this.getLinks(), point, opt);\n    },\n\n    findCellsAtPoint: function(point, opt) {\n        return this._filterAtPoint(this.getCells(), point, opt);\n    },\n\n    _filterAtPoint: function(cells, point, opt = {}) {\n        return cells.filter(el => el.getBBox({ rotate: true }).containsPoint(point, opt));\n    },\n\n    // Find all cells in given area\n\n    findElementsInArea: function(area, opt = {}) {\n        return this._filterInArea(this.getElements(), area, opt);\n    },\n\n    findLinksInArea: function(area, opt = {}) {\n        return this._filterInArea(this.getLinks(), area, opt);\n    },\n\n    findCellsInArea: function(area, opt = {}) {\n        return this._filterInArea(this.getCells(), area, opt);\n    },\n\n    _filterInArea: function(cells, area, opt = {}) {\n        const r = new g.Rect(area);\n        const { strict = false } = opt;\n        const method = strict ? 'containsRect' : 'intersect';\n        return cells.filter(el => r[method](el.getBBox({ rotate: true })));\n    },\n\n    // Find all cells under the given element.\n\n    findElementsUnderElement: function(element, opt) {\n        return this._filterCellsUnderElement(this.getElements(), element, opt);\n    },\n\n    findLinksUnderElement: function(element, opt) {\n        return this._filterCellsUnderElement(this.getLinks(), element, opt);\n    },\n\n    findCellsUnderElement: function(element, opt) {\n        return this._filterCellsUnderElement(this.getCells(), element, opt);\n    },\n\n    _isValidElementUnderElement: function(el1, el2) {\n        return el1.id !== el2.id && !el1.isEmbeddedIn(el2);\n    },\n\n    _isValidLinkUnderElement: function(link, el) {\n        return (\n            link.source().id !== el.id &&\n            link.target().id !== el.id &&\n            !link.isEmbeddedIn(el)\n        );\n    },\n\n    _validateCellsUnderElement: function(cells, element) {\n        return cells.filter(cell => {\n            return cell.isLink()\n                ? this._isValidLinkUnderElement(cell, element)\n                : this._isValidElementUnderElement(cell, element);\n        });\n    },\n\n    _getFindUnderElementGeometry: function(element, searchBy = 'bbox') {\n        const bbox = element.getBBox({ rotate: true });\n        return (searchBy !== 'bbox') ? util.getRectPoint(bbox, searchBy) : bbox;\n    },\n\n    _filterCellsUnderElement: function(cells, element, opt = {}) {\n        const geometry = this._getFindUnderElementGeometry(element, opt.searchBy);\n        const filteredCells = (geometry.type === g.types.Point)\n            ? this._filterAtPoint(cells, geometry)\n            : this._filterInArea(cells, geometry, opt);\n        return this._validateCellsUnderElement(filteredCells, element);\n    },\n\n    // @deprecated use `findElementsInArea` instead\n    findModelsInArea: function(area, opt) {\n        return this.findElementsInArea(area, opt);\n    },\n\n    // @deprecated use `findElementsAtPoint` instead\n    findModelsFromPoint: function(point) {\n        return this.findElementsAtPoint(point);\n    },\n\n    // @deprecated use `findModelsUnderElement` instead\n    findModelsUnderElement: function(element, opt) {\n        return this.findElementsUnderElement(element, opt);\n    },\n\n    // Return bounding box of all elements.\n    getBBox: function() {\n\n        return this.getCellsBBox(this.getCells());\n    },\n\n    // Return the bounding box of all cells in array provided.\n    getCellsBBox: function(cells, opt = {}) {\n        const { rotate = true } = opt;\n        return util.toArray(cells).reduce(function(memo, cell) {\n            const rect = cell.getBBox({ rotate });\n            if (!rect) return memo;\n            if (memo) {\n                return memo.union(rect);\n            }\n            return rect;\n        }, null);\n    },\n\n    translate: function(dx, dy, opt) {\n\n        // Don't translate cells that are embedded in any other cell.\n        var cells = this.getCells().filter(function(cell) {\n            return !cell.isEmbedded();\n        });\n\n        util.invoke(cells, 'translate', dx, dy, opt);\n\n        return this;\n    },\n\n    resize: function(width, height, opt) {\n\n        return this.resizeCells(width, height, this.getCells(), opt);\n    },\n\n    resizeCells: function(width, height, cells, opt) {\n\n        // `getBBox` method returns `null` if no elements provided.\n        // i.e. cells can be an array of links\n        var bbox = this.getCellsBBox(cells);\n        if (bbox) {\n            var sx = Math.max(width / bbox.width, 0);\n            var sy = Math.max(height / bbox.height, 0);\n            util.invoke(cells, 'scale', sx, sy, bbox.origin(), opt);\n        }\n\n        return this;\n    },\n\n    startBatch: function(name, data) {\n\n        data = data || {};\n        this._batches[name] = (this._batches[name] || 0) + 1;\n\n        return this.trigger('batch:start', util.assign({}, data, { batchName: name }));\n    },\n\n    stopBatch: function(name, data) {\n\n        data = data || {};\n        this._batches[name] = (this._batches[name] || 0) - 1;\n\n        return this.trigger('batch:stop', util.assign({}, data, { batchName: name }));\n    },\n\n    hasActiveBatch: function(name) {\n\n        const batches = this._batches;\n        let names;\n\n        if (arguments.length === 0) {\n            names = Object.keys(batches);\n        } else if (Array.isArray(name)) {\n            names = name;\n        } else {\n            names = [name];\n        }\n\n        return names.some((batch) => batches[batch] > 0);\n    }\n\n}, {\n\n    validations: {\n\n        multiLinks: function(graph, link) {\n\n            // Do not allow multiple links to have the same source and target.\n            var { source, target } = link.attributes;\n\n            if (source.id && target.id) {\n\n                var sourceModel = link.getSourceCell();\n                if (sourceModel) {\n\n                    var connectedLinks = graph.getConnectedLinks(sourceModel, { outbound: true });\n                    var sameLinks = connectedLinks.filter(function(_link) {\n\n                        var { source: _source, target: _target } = _link.attributes;\n                        return _source && _source.id === source.id &&\n                            (!_source.port || (_source.port === source.port)) &&\n                            _target && _target.id === target.id &&\n                            (!_target.port || (_target.port === target.port));\n\n                    });\n\n                    if (sameLinks.length > 1) {\n                        return false;\n                    }\n                }\n            }\n\n            return true;\n        },\n\n        linkPinning: function(_graph, link) {\n            var { source, target } = link.attributes;\n            return source.id && target.id;\n        }\n    }\n\n});\n\nwrapWith(Graph.prototype, ['resetCells', 'addCells', 'removeCells'], wrappers.cells);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2629, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2635, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/PaperLayer.mjs"],"sourcesContent":["import { View } from '../mvc/index.mjs';\nimport { addClassNamePrefix } from '../util/util.mjs';\n\nexport const LayersNames = {\n    GRID: 'grid',\n    CELLS: 'cells',\n    BACK: 'back',\n    FRONT: 'front',\n    TOOLS: 'tools',\n    LABELS: 'labels'\n};\n\nexport const PaperLayer = View.extend({\n\n    tagName: 'g',\n    svgElement: true,\n    pivotNodes: null,\n    defaultTheme: null,\n\n    options: {\n        name: ''\n    },\n\n    className: function() {\n        return addClassNamePrefix(`${this.options.name}-layer`);\n    },\n\n    init: function() {\n        this.pivotNodes = {};\n    },\n\n    insertSortedNode: function(node, z) {\n        this.el.insertBefore(node, this.insertPivot(z));\n    },\n\n    insertNode: function(node) {\n        const { el } = this;\n        if (node.parentNode !== el) {\n            el.appendChild(node);\n        }\n    },\n\n    insertPivot: function(z) {\n        const { el, pivotNodes } = this;\n        z = +z;\n        z || (z = 0);\n        let pivotNode = pivotNodes[z];\n        if (pivotNode) return pivotNode;\n        pivotNode = pivotNodes[z] = document.createComment('z-index:' + (z + 1));\n        let neighborZ = -Infinity;\n        for (let currentZ in pivotNodes) {\n            currentZ = +currentZ;\n            if (currentZ < z && currentZ > neighborZ) {\n                neighborZ = currentZ;\n                if (neighborZ === z - 1) continue;\n            }\n        }\n        if (neighborZ !== -Infinity) {\n            const neighborPivot = pivotNodes[neighborZ];\n            // Insert After\n            el.insertBefore(pivotNode, neighborPivot.nextSibling);\n        } else {\n            // First Child\n            el.insertBefore(pivotNode, el.firstChild);\n        }\n        return pivotNode;\n    },\n\n    removePivots: function() {\n        const { el, pivotNodes } = this;\n        for (let z in pivotNodes) el.removeChild(pivotNodes[z]);\n        this.pivotNodes = {};\n    }\n\n});\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,MAAM,cAAc;IACvB,MAAM;IACN,OAAO;IACP,MAAM;IACN,OAAO;IACP,OAAO;IACP,QAAQ;AACZ;AAEO,MAAM,aAAa,sJAAA,CAAA,OAAI,CAAC,MAAM,CAAC;IAElC,SAAS;IACT,YAAY;IACZ,YAAY;IACZ,cAAc;IAEd,SAAS;QACL,MAAM;IACV;IAEA,WAAW;QACP,OAAO,CAAA,GAAA,uKAAA,CAAA,qBAAkB,AAAD,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;IAC1D;IAEA,MAAM;QACF,IAAI,CAAC,UAAU,GAAG,CAAC;IACvB;IAEA,kBAAkB,SAAS,IAAI,EAAE,CAAC;QAC9B,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC;IAChD;IAEA,YAAY,SAAS,IAAI;QACrB,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI;QACnB,IAAI,KAAK,UAAU,KAAK,IAAI;YACxB,GAAG,WAAW,CAAC;QACnB;IACJ;IAEA,aAAa,SAAS,CAAC;QACnB,MAAM,EAAE,EAAE,EAAE,UAAU,EAAE,GAAG,IAAI;QAC/B,IAAI,CAAC;QACL,KAAK,CAAC,IAAI,CAAC;QACX,IAAI,YAAY,UAAU,CAAC,EAAE;QAC7B,IAAI,WAAW,OAAO;QACtB,YAAY,UAAU,CAAC,EAAE,GAAG,SAAS,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC;QACtE,IAAI,YAAY,CAAC;QACjB,IAAK,IAAI,YAAY,WAAY;YAC7B,WAAW,CAAC;YACZ,IAAI,WAAW,KAAK,WAAW,WAAW;gBACtC,YAAY;gBACZ,IAAI,cAAc,IAAI,GAAG;YAC7B;QACJ;QACA,IAAI,cAAc,CAAC,UAAU;YACzB,MAAM,gBAAgB,UAAU,CAAC,UAAU;YAC3C,eAAe;YACf,GAAG,YAAY,CAAC,WAAW,cAAc,WAAW;QACxD,OAAO;YACH,cAAc;YACd,GAAG,YAAY,CAAC,WAAW,GAAG,UAAU;QAC5C;QACA,OAAO;IACX;IAEA,cAAc;QACV,MAAM,EAAE,EAAE,EAAE,UAAU,EAAE,GAAG,IAAI;QAC/B,IAAK,IAAI,KAAK,WAAY,GAAG,WAAW,CAAC,UAAU,CAAC,EAAE;QACtD,IAAI,CAAC,UAAU,GAAG,CAAC;IACvB;AAEJ","ignoreList":[0]}},
    {"offset": {"line": 2705, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2711, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/attributes/eval.mjs"],"sourcesContent":["import { isCalcExpression, evalCalcExpression } from '../../util/calc.mjs';\n\nconst calcAttributesList = [\n    'transform',\n    'x',\n    'y',\n    'cx',\n    'cy',\n    'dx',\n    'dy',\n    'x1',\n    'y1',\n    'x2',\n    'y2',\n    'points',\n    'd',\n    'r',\n    'rx',\n    'ry',\n    'width',\n    'height',\n    'stroke-width',\n    'font-size',\n];\n\nconst positiveValueList = [\n    'r',\n    'rx',\n    'ry',\n    'width',\n    'height',\n    'stroke-width',\n    'font-size',\n];\n\nconst calcAttributes = calcAttributesList.reduce((acc, attrName) => {\n    acc[attrName] = true;\n    return acc;\n}, {});\n\nconst positiveValueAttributes = positiveValueList.reduce((acc, attrName) => {\n    acc[attrName] = true;\n    return acc;\n}, {});\n\nexport function evalAttributes(attrs, refBBox) {\n    const evalAttrs = {};\n    for (let attrName in attrs) {\n        if (!attrs.hasOwnProperty(attrName)) continue;\n        evalAttrs[attrName] = evalAttribute(attrName, attrs[attrName], refBBox);\n    }\n    return evalAttrs;\n}\n\nexport function evalAttribute(attrName, attrValue, refBBox) {\n    if (attrName in calcAttributes && isCalcExpression(attrValue)) {\n        let evalAttrValue = evalCalcExpression(attrValue, refBBox);\n        if (attrName in positiveValueAttributes) {\n            evalAttrValue = Math.max(0, evalAttrValue);\n        }\n        return evalAttrValue;\n    }\n    return attrValue;\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,qBAAqB;IACvB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AAED,MAAM,oBAAoB;IACtB;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AAED,MAAM,iBAAiB,mBAAmB,MAAM,CAAC,CAAC,KAAK;IACnD,GAAG,CAAC,SAAS,GAAG;IAChB,OAAO;AACX,GAAG,CAAC;AAEJ,MAAM,0BAA0B,kBAAkB,MAAM,CAAC,CAAC,KAAK;IAC3D,GAAG,CAAC,SAAS,GAAG;IAChB,OAAO;AACX,GAAG,CAAC;AAEG,SAAS,eAAe,KAAK,EAAE,OAAO;IACzC,MAAM,YAAY,CAAC;IACnB,IAAK,IAAI,YAAY,MAAO;QACxB,IAAI,CAAC,MAAM,cAAc,CAAC,WAAW;QACrC,SAAS,CAAC,SAAS,GAAG,cAAc,UAAU,KAAK,CAAC,SAAS,EAAE;IACnE;IACA,OAAO;AACX;AAEO,SAAS,cAAc,QAAQ,EAAE,SAAS,EAAE,OAAO;IACtD,IAAI,YAAY,kBAAkB,CAAA,GAAA,uJAAA,CAAA,mBAAgB,AAAD,EAAE,YAAY;QAC3D,IAAI,gBAAgB,CAAA,GAAA,uJAAA,CAAA,qBAAkB,AAAD,EAAE,WAAW;QAClD,IAAI,YAAY,yBAAyB;YACrC,gBAAgB,KAAK,GAAG,CAAC,GAAG;QAChC;QACA,OAAO;IACX;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 2774, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2780, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/HighlighterView.mjs"],"sourcesContent":["import * as mvc from '../mvc/index.mjs';\nimport V from '../V/index.mjs';\nimport { isPlainObject, result } from '../util/util.mjs';\n\nfunction toArray(obj) {\n    if (!obj) return [];\n    if (Array.isArray(obj)) return obj;\n    return [obj];\n}\n\nexport const HighlighterView = mvc.View.extend({\n\n    tagName: 'g',\n    svgElement: true,\n    className: 'highlight',\n\n    HIGHLIGHT_FLAG: 1,\n    UPDATE_PRIORITY: 3,\n    DETACHABLE: false,\n    UPDATABLE: true,\n    MOUNTABLE: true,\n\n    cellView: null,\n    nodeSelector: null,\n    node: null,\n    updateRequested: false,\n    postponedUpdate: false,\n    transformGroup: null,\n    detachedTransformGroup: null,\n\n    requestUpdate(cellView, nodeSelector) {\n        const { paper } = cellView;\n        this.cellView = cellView;\n        this.nodeSelector = nodeSelector;\n        if (paper) {\n            this.updateRequested = true;\n            paper.requestViewUpdate(this, this.HIGHLIGHT_FLAG, this.UPDATE_PRIORITY);\n        }\n    },\n\n    confirmUpdate() {\n        // The cellView is now rendered/updated since it has a higher update priority.\n        this.updateRequested = false;\n        const { cellView, nodeSelector } = this;\n        if (cellView.isMounted()) {\n            this.update(cellView, nodeSelector);\n            this.mount();\n            this.transform();\n        } else {\n            this.postponedUpdate = true;\n        }\n        return 0;\n    },\n\n    findNode(cellView, nodeSelector = null) {\n        let el;\n        if (typeof nodeSelector === 'string') {\n            el = cellView.findNode(nodeSelector);\n        } else if (isPlainObject(nodeSelector)) {\n            const isLink = cellView.model.isLink();\n            const { label = null, port, selector } = nodeSelector;\n            if (isLink && label !== null) {\n                // Link Label Selector\n                el = cellView.findLabelNode(label, selector);\n            } else if (!isLink && port) {\n                // Element Port Selector\n                el = cellView.findPortNode(port, selector);\n            } else {\n                // Cell Selector\n                el = cellView.findNode(selector);\n            }\n        } else if (nodeSelector) {\n            el = V.toNode(nodeSelector);\n            if (!(el instanceof SVGElement)) el = null;\n        }\n        return el ? el : null;\n    },\n\n    getNodeMatrix(cellView, node) {\n        const { options } = this;\n        const { layer } = options;\n        const { rotatableNode } = cellView;\n        const nodeMatrix = cellView.getNodeMatrix(node);\n        if (rotatableNode) {\n            if (layer) {\n                if (rotatableNode.contains(node)) {\n                    return nodeMatrix;\n                }\n                // The node is outside of the rotatable group.\n                // Compensate the rotation set by transformGroup.\n                return cellView.getRootRotateMatrix().inverse().multiply(nodeMatrix);\n            } else {\n                return cellView.getNodeRotateMatrix(node).multiply(nodeMatrix);\n            }\n        }\n        return nodeMatrix;\n    },\n\n    mount() {\n        const { MOUNTABLE, cellView, el, options, transformGroup, detachedTransformGroup, postponedUpdate, nodeSelector } = this;\n        if (!MOUNTABLE || transformGroup) return;\n        if (postponedUpdate) {\n            // The cellView was not mounted when the update was requested.\n            // The update was postponed until the cellView is mounted.\n            this.update(cellView, nodeSelector);\n            this.transform();\n            return;\n        }\n        const { vel: cellViewRoot, paper } = cellView;\n        const { layer: layerName } = options;\n        if (layerName) {\n            let vGroup;\n            if (detachedTransformGroup) {\n                vGroup = detachedTransformGroup;\n                this.detachedTransformGroup = null;\n            } else {\n                vGroup = V('g').addClass('highlight-transform').append(el);\n            }\n            this.transformGroup = vGroup;\n            paper.getLayerView(layerName).insertSortedNode(vGroup.node, options.z);\n        } else {\n            // TODO: prepend vs append\n            if (!el.parentNode || el.nextSibling) {\n                // Not appended yet or not the last child\n                cellViewRoot.append(el);\n            }\n        }\n    },\n\n    unmount() {\n        const { MOUNTABLE, transformGroup, vel } = this;\n        if (!MOUNTABLE) return;\n        if (transformGroup) {\n            this.transformGroup = null;\n            this.detachedTransformGroup = transformGroup;\n            transformGroup.remove();\n        } else {\n            vel.remove();\n        }\n    },\n\n    transform() {\n        const { transformGroup, cellView, updateRequested } = this;\n        if (!transformGroup || cellView.model.isLink() || updateRequested) return;\n        const translateMatrix = cellView.getRootTranslateMatrix();\n        const rotateMatrix = cellView.getRootRotateMatrix();\n        const transformMatrix = translateMatrix.multiply(rotateMatrix);\n        transformGroup.attr('transform', V.matrixToTransformString(transformMatrix));\n    },\n\n    update() {\n        const { node: prevNode, cellView, nodeSelector, updateRequested, id } = this;\n        if (updateRequested) return;\n        this.postponedUpdate = false;\n        const node = this.node = this.findNode(cellView, nodeSelector);\n        if (prevNode) {\n            this.unhighlight(cellView, prevNode);\n        }\n        if (node) {\n            this.highlight(cellView, node);\n            this.mount();\n        } else {\n            this.unmount();\n            cellView.notify('cell:highlight:invalid', id, this);\n        }\n    },\n\n    onRemove() {\n        const { node, cellView, id, constructor } = this;\n        if (node) {\n            this.unhighlight(cellView, node);\n        }\n        this.unmount();\n        constructor._removeRef(cellView, id);\n    },\n\n    highlight(_cellView, _node) {\n        // to be overridden\n    },\n\n    unhighlight(_cellView, _node) {\n        // to be overridden\n    },\n\n    // Update Attributes\n\n    listenToUpdateAttributes(cellView) {\n        const attributes = result(this, 'UPDATE_ATTRIBUTES');\n        if (!Array.isArray(attributes) || attributes.length === 0) return;\n        this.listenTo(cellView.model, 'change', this.onCellAttributeChange);\n    },\n\n    onCellAttributeChange() {\n        const { cellView } = this;\n        if (!cellView) return;\n        const { model, paper } = cellView;\n        const attributes = result(this, 'UPDATE_ATTRIBUTES');\n        if (!attributes.some(attribute => model.hasChanged(attribute))) return;\n        paper.requestViewUpdate(this, this.HIGHLIGHT_FLAG, this.UPDATE_PRIORITY);\n    }\n\n}, {\n\n    _views: {},\n\n    // Used internally by CellView highlight()\n    highlight: function(cellView, node, opt) {\n        const id = this.uniqueId(node, opt);\n        this.add(cellView, node, id, opt);\n    },\n\n    // Used internally by CellView unhighlight()\n    unhighlight: function(cellView, node, opt) {\n        const id = this.uniqueId(node, opt);\n        this.remove(cellView, id);\n    },\n\n    get(cellView, id = null) {\n        const { cid } = cellView;\n        const { _views } = this;\n        const refs = _views[cid];\n        if (id === null) {\n            // all highlighters\n            const views = [];\n            if (!refs) return views;\n            for (let hid in refs) {\n                const ref = refs[hid];\n                if (ref instanceof this) {\n                    views.push(ref);\n                }\n            }\n            return views;\n        } else {\n            // single highlighter\n            if (!refs) return null;\n            if (id in refs) {\n                const ref = refs[id];\n                if (ref instanceof this) return ref;\n            }\n            return null;\n        }\n    },\n\n    add(cellView, nodeSelector, id, opt = {}) {\n        if (!id) throw new Error('dia.HighlighterView: An ID required.');\n        // Search the existing view amongst all the highlighters\n        const previousView = HighlighterView.get(cellView, id);\n        if (previousView) previousView.remove();\n        const view = new this(opt);\n        view.id = id;\n        this._addRef(cellView, id, view);\n        view.requestUpdate(cellView, nodeSelector);\n        view.listenToUpdateAttributes(cellView);\n        return view;\n    },\n\n    _addRef(cellView, id, view) {\n        const { cid } = cellView;\n        const { _views } = this;\n        let refs = _views[cid];\n        if (!refs) refs = _views[cid] = {};\n        refs[id] = view;\n    },\n\n    _removeRef(cellView, id) {\n        const { cid } = cellView;\n        const { _views } = this;\n        const refs = _views[cid];\n        if (!refs) return;\n        if (id) delete refs[id];\n        for (let _ in refs) return;\n        delete _views[cid];\n    },\n\n    remove(cellView, id = null) {\n        toArray(this.get(cellView, id)).forEach(view => {\n            view.remove();\n        });\n    },\n\n    getAll(paper, id = null) {\n        const views = [];\n        const { _views } = this;\n        for (let cid in _views) {\n            for (let hid in _views[cid]) {\n                const view = _views[cid][hid];\n                if (view.cellView.paper === paper && view instanceof this && (id === null || hid === id)) {\n                    views.push(view);\n                }\n            }\n        }\n        return views;\n    },\n\n    removeAll(paper, id = null) {\n        this.getAll(paper, id).forEach(view => view.remove());\n    },\n\n    update(cellView, id = null, dirty = false) {\n        toArray(this.get(cellView, id)).forEach(view => {\n            if (dirty || view.UPDATABLE) view.update();\n        });\n    },\n\n    transform(cellView, id = null) {\n        toArray(this.get(cellView, id)).forEach(view => {\n            if (view.UPDATABLE) view.transform();\n        });\n    },\n\n    unmount(cellView, id = null) {\n        toArray(this.get(cellView, id)).forEach(view => view.unmount());\n    },\n\n    mount(cellView, id = null) {\n        toArray(this.get(cellView, id)).forEach(view => view.mount());\n    },\n\n    uniqueId(node, opt = '') {\n        return V.ensureId(node) + JSON.stringify(opt);\n    }\n\n});\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3075, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3081, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/CellView.mjs"],"sourcesContent":["import { config } from '../config/index.mjs';\nimport { View } from '../mvc/index.mjs';\nimport {\n    assign,\n    guid,\n    omit,\n    parseDOMJSON,\n    isFunction,\n    isObject,\n    isPlainObject,\n    isBoolean,\n    isEmpty,\n    isString,\n    result,\n    sortedIndex,\n    merge,\n    uniq\n} from '../util/index.mjs';\nimport { Point, Rect, intersection } from '../g/index.mjs';\nimport V from '../V/index.mjs';\nimport $ from '../mvc/Dom/index.mjs';\nimport { HighlighterView } from './HighlighterView.mjs';\nimport { evalAttributes, evalAttribute } from './attributes/eval.mjs';\n\nconst HighlightingTypes = {\n    DEFAULT: 'default',\n    EMBEDDING: 'embedding',\n    CONNECTING: 'connecting',\n    MAGNET_AVAILABILITY: 'magnetAvailability',\n    ELEMENT_AVAILABILITY: 'elementAvailability'\n};\n\nconst Flags = {\n    TOOLS: 'TOOLS',\n};\n\n// CellView base view and controller.\n// --------------------------------------------\n\n// This is the base view and controller for `ElementView` and `LinkView`.\nexport const CellView = View.extend({\n\n    tagName: 'g',\n\n    svgElement: true,\n\n    selector: 'root',\n\n    metrics: null,\n\n    className: function() {\n\n        var classNames = ['cell'];\n        var type = this.model.get('type');\n\n        if (type) {\n\n            type.toLowerCase().split('.').forEach(function(value, index, list) {\n                classNames.push('type-' + list.slice(0, index + 1).join('-'));\n            });\n        }\n\n        return classNames.join(' ');\n    },\n\n    _presentationAttributes: null,\n    _flags: null,\n\n    setFlags: function() {\n        var flags = {};\n        var attributes = {};\n        var shift = 0;\n        var i, n, label;\n        var presentationAttributes = result(this, 'presentationAttributes');\n        for (var attribute in presentationAttributes) {\n            if (!presentationAttributes.hasOwnProperty(attribute)) continue;\n            var labels = presentationAttributes[attribute];\n            if (!Array.isArray(labels)) labels = [labels];\n            for (i = 0, n = labels.length; i < n; i++) {\n                label = labels[i];\n                var flag = flags[label];\n                if (!flag) {\n                    flag = flags[label] = 1<<(shift++);\n                }\n                attributes[attribute] |= flag;\n            }\n        }\n        var initFlag = result(this, 'initFlag');\n        if (!Array.isArray(initFlag)) initFlag = [initFlag];\n        for (i = 0, n = initFlag.length; i < n; i++) {\n            label = initFlag[i];\n            if (!flags[label]) flags[label] = 1<<(shift++);\n        }\n\n        // 26 - 30 are reserved for paper flags\n        // 31+ overflows maximal number\n        if (shift > 25) throw new Error('dia.CellView: Maximum number of flags exceeded.');\n\n        this._flags = flags;\n        this._presentationAttributes = attributes;\n    },\n\n    hasFlag: function(flag, label) {\n        return flag & this.getFlag(label);\n    },\n\n    removeFlag: function(flag, label) {\n        return flag ^ (flag & this.getFlag(label));\n    },\n\n    getFlag: function(label) {\n        var flags = this._flags;\n        if (!flags) return 0;\n        var flag = 0;\n        if (Array.isArray(label)) {\n            for (var i = 0, n = label.length; i < n; i++) flag |= flags[label[i]];\n        } else {\n            flag |= flags[label];\n        }\n        return flag;\n    },\n\n    attributes: function() {\n        var cell = this.model;\n        return {\n            'model-id': cell.id,\n            'data-type': cell.attributes.type\n        };\n    },\n\n    constructor: function(options) {\n\n        // Make sure a global unique id is assigned to this view. Store this id also to the properties object.\n        // The global unique id makes sure that the same view can be rendered on e.g. different machines and\n        // still be associated to the same object among all those clients. This is necessary for real-time\n        // collaboration mechanism.\n        options.id = options.id || guid(this);\n\n        View.call(this, options);\n    },\n\n    initialize: function() {\n\n        this.setFlags();\n\n        View.prototype.initialize.apply(this, arguments);\n\n        this.cleanNodesCache();\n\n        this.startListening();\n    },\n\n    startListening: function() {\n        this.listenTo(this.model, 'change', this.onAttributesChange);\n    },\n\n    onAttributesChange: function(model, opt) {\n        var flag = model.getChangeFlag(this._presentationAttributes);\n        if (opt.updateHandled || !flag) return;\n        if (opt.dirty && this.hasFlag(flag, 'UPDATE')) flag |= this.getFlag('RENDER');\n        // TODO: tool changes does not need to be sync\n        // Fix Segments tools\n        if (opt.tool) opt.async = false;\n        this.requestUpdate(flag, opt);\n    },\n\n    requestUpdate: function(flags, opt) {\n        const { paper } = this;\n        if (paper && flags > 0) {\n            paper.requestViewUpdate(this, flags, this.UPDATE_PRIORITY, opt);\n        }\n    },\n\n    parseDOMJSON: function(markup, root) {\n\n        var doc = parseDOMJSON(markup);\n        var selectors = doc.selectors;\n        var groups = doc.groupSelectors;\n        for (var group in groups) {\n            if (selectors[group]) throw new Error('dia.CellView: ambiguous group selector');\n            selectors[group] = groups[group];\n        }\n        if (root) {\n            var rootSelector = this.selector;\n            if (selectors[rootSelector]) throw new Error('dia.CellView: ambiguous root selector.');\n            selectors[rootSelector] = root;\n        }\n        return { fragment: doc.fragment, selectors: selectors };\n    },\n\n    // Return `true` if cell link is allowed to perform a certain UI `feature`.\n    // Example: `can('labelMove')`.\n    can: function(feature) {\n\n        var interactive = isFunction(this.options.interactive)\n            ? this.options.interactive(this)\n            : this.options.interactive;\n\n        return (isObject(interactive) && interactive[feature] !== false) ||\n            (isBoolean(interactive) && interactive !== false);\n    },\n\n    findBySelector: function(selector, root, selectors) {\n\n        // These are either descendants of `this.$el` of `this.$el` itself.\n        // `.` is a special selector used to select the wrapping `<g>` element.\n        if (!selector || selector === '.') return [root];\n        if (selectors) {\n            var nodes = selectors[selector];\n            if (nodes) {\n                if (Array.isArray(nodes)) return nodes;\n                return [nodes];\n            }\n        }\n\n        // Maintaining backwards compatibility\n        // e.g. `circle:first` would fail with querySelector() call\n        if (this.useCSSSelectors) return $(root).find(selector).toArray();\n\n        return [];\n    },\n\n    findNodes: function(selector) {\n        return this.findBySelector(selector, this.el, this.selectors);\n    },\n\n    findNode: function(selector) {\n        const [node = null] = this.findNodes(selector);\n        return node;\n    },\n\n    notify: function(eventName) {\n\n        if (this.paper) {\n\n            var args = Array.prototype.slice.call(arguments, 1);\n\n            // Trigger the event on both the element itself and also on the paper.\n            this.trigger.apply(this, [eventName].concat(args));\n\n            // Paper event handlers receive the view object as the first argument.\n            this.paper.trigger.apply(this.paper, [eventName, this].concat(args));\n        }\n    },\n\n    getBBox: function(opt) {\n\n        var bbox;\n        if (opt && opt.useModelGeometry) {\n            var model = this.model;\n            bbox = model.getBBox().bbox(model.angle());\n        } else {\n            bbox = this.getNodeBBox(this.el);\n        }\n\n        return this.paper.localToPaperRect(bbox);\n    },\n\n    getNodeBBox: function(magnet) {\n\n        const rect = this.getNodeBoundingRect(magnet);\n        const transformMatrix = this.getRootTranslateMatrix().multiply(this.getNodeRotateMatrix(magnet));\n        const magnetMatrix = this.getNodeMatrix(magnet);\n        return V.transformRect(rect, transformMatrix.multiply(magnetMatrix));\n    },\n\n    getNodeRotateMatrix(node) {\n        if (!this.rotatableNode || this.rotatableNode.contains(node)) {\n            // Rotate transformation is applied to all nodes when no rotatableGroup\n            // is present or to nodes inside the rotatableGroup only.\n            return this.getRootRotateMatrix();\n        }\n        // Nodes outside the rotatable group\n        return V.createSVGMatrix();\n    },\n\n    getNodeUnrotatedBBox: function(magnet) {\n\n        var rect = this.getNodeBoundingRect(magnet);\n        var magnetMatrix = this.getNodeMatrix(magnet);\n        var translateMatrix = this.getRootTranslateMatrix();\n        return V.transformRect(rect, translateMatrix.multiply(magnetMatrix));\n    },\n\n    getRootTranslateMatrix: function() {\n\n        var model = this.model;\n        var position = model.position();\n        var mt = V.createSVGMatrix().translate(position.x, position.y);\n        return mt;\n    },\n\n    getRootRotateMatrix: function() {\n\n        var mr = V.createSVGMatrix();\n        var model = this.model;\n        var angle = model.angle();\n        if (angle) {\n            var bbox = model.getBBox();\n            var cx = bbox.width / 2;\n            var cy = bbox.height / 2;\n            mr = mr.translate(cx, cy).rotate(angle).translate(-cx, -cy);\n        }\n        return mr;\n    },\n\n    _notifyHighlight: function(eventName, el, opt = {}) {\n        const { el: rootNode } = this;\n        let node;\n        if (typeof el === 'string') {\n            node = this.findNode(el) || rootNode;\n        } else {\n            [node = rootNode] = this.$(el);\n        }\n        // set partial flag if the highlighted element is not the entire view.\n        opt.partial = (node !== rootNode);\n        // translate type flag into a type string\n        if (opt.type === undefined) {\n            let type;\n            switch (true) {\n                case opt.embedding:\n                    type = HighlightingTypes.EMBEDDING;\n                    break;\n                case opt.connecting:\n                    type = HighlightingTypes.CONNECTING;\n                    break;\n                case opt.magnetAvailability:\n                    type = HighlightingTypes.MAGNET_AVAILABILITY;\n                    break;\n                case opt.elementAvailability:\n                    type = HighlightingTypes.ELEMENT_AVAILABILITY;\n                    break;\n                default:\n                    type = HighlightingTypes.DEFAULT;\n                    break;\n            }\n            opt.type = type;\n        }\n        this.notify(eventName, node, opt);\n        return this;\n    },\n\n    highlight: function(el, opt) {\n        return this._notifyHighlight('cell:highlight', el, opt);\n    },\n\n    unhighlight: function(el, opt = {}) {\n        return this._notifyHighlight('cell:unhighlight', el, opt);\n    },\n\n    // Find the closest element that has the `magnet` attribute set to `true`. If there was not such\n    // an element found, return the root element of the cell view.\n    findMagnet: function(el) {\n\n        const root = this.el;\n        let magnet = this.$(el)[0];\n        if (!magnet) {\n            magnet = root;\n        }\n\n        do {\n            const magnetAttribute = magnet.getAttribute('magnet');\n            const isMagnetRoot = (magnet === root);\n            if ((magnetAttribute || isMagnetRoot) && magnetAttribute !== 'false') {\n                return magnet;\n            }\n            if (isMagnetRoot) {\n                // If the overall cell has set `magnet === false`, then return `undefined` to\n                // announce there is no magnet found for this cell.\n                // This is especially useful to set on cells that have 'ports'. In this case,\n                // only the ports have set `magnet === true` and the overall element has `magnet === false`.\n                return undefined;\n            }\n            magnet = magnet.parentNode;\n        } while (magnet);\n\n        return undefined;\n    },\n\n    findProxyNode: function(el, type) {\n        el || (el = this.el);\n        const nodeSelector = el.getAttribute(`${type}-selector`);\n        if (nodeSelector) {\n            const proxyNode = this.findNode(nodeSelector);\n            if (proxyNode) return proxyNode;\n        }\n        return el;\n    },\n\n    // Construct a unique selector for the `el` element within this view.\n    // `prevSelector` is being collected through the recursive call.\n    // No value for `prevSelector` is expected when using this method.\n    getSelector: function(el, prevSelector) {\n\n        var selector;\n\n        if (el === this.el) {\n            if (typeof prevSelector === 'string') selector = ':scope > ' + prevSelector;\n            return selector;\n        }\n\n        if (el) {\n\n            var nthChild = V(el).index() + 1;\n            selector = el.tagName + ':nth-child(' + nthChild + ')';\n\n            if (prevSelector) {\n                selector += ' > ' + prevSelector;\n            }\n\n            selector = this.getSelector(el.parentNode, selector);\n        }\n\n        return selector;\n    },\n\n    addLinkFromMagnet: function(magnet, x, y) {\n\n        var paper = this.paper;\n        var graph = paper.model;\n\n        var link = paper.getDefaultLink(this, magnet);\n        link.set({\n            source: this.getLinkEnd(magnet, x, y, link, 'source'),\n            target: { x: x, y: y }\n        }).addTo(graph, {\n            async: false,\n            ui: true\n        });\n\n        return link.findView(paper);\n    },\n\n    getLinkEnd: function(magnet, ...args) {\n\n        const model = this.model;\n        const id = model.id;\n        // Find a node with the `port` attribute set on it.\n        const portNode = this.findAttributeNode('port', magnet);\n        // Find a unique `selector` of the element under pointer that is a magnet.\n        const selector = magnet.getAttribute('joint-selector');\n\n        const end = { id: id };\n        if (selector != null) end.magnet = selector;\n        if (portNode != null) {\n            let port = portNode.getAttribute('port');\n            if (portNode.getAttribute('port-id-type') === 'number') {\n                port = parseInt(port, 10);\n            }\n            end.port = port;\n            if (!model.hasPort(port) && !selector) {\n                // port created via the `port` attribute (not API)\n                end.selector = this.getSelector(magnet);\n            }\n        } else if (selector == null && this.el !== magnet) {\n            end.selector = this.getSelector(magnet);\n        }\n\n        return this.customizeLinkEnd(end, magnet, ...args);\n    },\n\n    customizeLinkEnd: function(end, magnet, x, y, link, endType) {\n        const { paper } = this;\n        const { connectionStrategy } = paper.options;\n        if (typeof connectionStrategy === 'function') {\n            var strategy = connectionStrategy.call(paper, end, this, magnet, new Point(x, y), link, endType, paper);\n            if (strategy) return strategy;\n        }\n        return end;\n    },\n\n    getMagnetFromLinkEnd: function(end) {\n\n        var port = end.port;\n        var selector = end.magnet;\n        var model = this.model;\n        var magnet;\n        if (port != null && model.isElement() && model.hasPort(port)) {\n            magnet = this.findPortNode(port, selector) || this.el;\n        } else {\n            if (!selector) selector = end.selector;\n            if (!selector && port != null) {\n                // link end has only `id` and `port` property referencing\n                // a port created via the `port` attribute (not API).\n                selector = '[port=\"' + port + '\"]';\n            }\n            magnet = this.findNode(selector);\n        }\n\n        return this.findProxyNode(magnet, 'magnet');\n    },\n\n    dragLinkStart: function(evt, magnet, x, y) {\n        this.model.startBatch('add-link');\n        const linkView = this.addLinkFromMagnet(magnet, x, y);\n        // backwards compatibility events\n        linkView.notifyPointerdown(evt, x, y);\n        linkView.eventData(evt, linkView.startArrowheadMove('target', { whenNotAllowed: 'remove' }));\n        this.eventData(evt, { linkView });\n    },\n\n    dragLink: function(evt, x, y) {\n        var data = this.eventData(evt);\n        var linkView = data.linkView;\n        if (linkView) {\n            linkView.pointermove(evt, x, y);\n        } else {\n            var paper = this.paper;\n            var magnetThreshold = paper.options.magnetThreshold;\n            var currentTarget = this.getEventTarget(evt);\n            var targetMagnet = data.targetMagnet;\n            if (magnetThreshold === 'onleave') {\n                // magnetThreshold when the pointer leaves the magnet\n                if (targetMagnet === currentTarget || V(targetMagnet).contains(currentTarget)) return;\n            } else {\n                // magnetThreshold defined as a number of movements\n                if (paper.eventData(evt).mousemoved <= magnetThreshold) return;\n            }\n            this.dragLinkStart(evt, targetMagnet, x, y);\n        }\n    },\n\n    dragLinkEnd: function(evt, x, y) {\n        var data = this.eventData(evt);\n        var linkView = data.linkView;\n        if (!linkView) return;\n        linkView.pointerup(evt, x, y);\n        this.model.stopBatch('add-link');\n    },\n\n    getAttributeDefinition: function(attrName) {\n\n        return this.model.constructor.getAttributeDefinition(attrName);\n    },\n\n    setNodeAttributes: function(node, attrs) {\n\n        if (!isEmpty(attrs)) {\n            if (node instanceof SVGElement) {\n                V(node).attr(attrs);\n            } else {\n                $(node).attr(attrs);\n            }\n        }\n    },\n\n    processNodeAttributes: function(node, attrs) {\n\n        var attrName, attrVal, def, i, n;\n        var normalAttrs, setAttrs, positionAttrs, offsetAttrs;\n        var relatives = [];\n        const rawAttrs = {};\n        for (attrName in attrs) {\n            if (!attrs.hasOwnProperty(attrName)) continue;\n            rawAttrs[V.attributeNames[attrName]] = attrs[attrName];\n        }\n        // divide the attributes between normal and special\n        for (attrName in rawAttrs) {\n            if (!rawAttrs.hasOwnProperty(attrName)) continue;\n            attrVal = rawAttrs[attrName];\n            def = this.getAttributeDefinition(attrName);\n            if (def) {\n                if (attrVal === null) {\n                    // Assign the unset attribute name.\n                    let unsetAttrName;\n                    if (isFunction(def.unset)) {\n                        unsetAttrName = def.unset.call(this, node, rawAttrs, this);\n                    } else {\n                        unsetAttrName = def.unset;\n                    }\n                    if (!unsetAttrName && isString(def.set)) {\n                        // We unset an alias attribute.\n                        unsetAttrName = def.set;\n                    }\n                    if (!unsetAttrName) {\n                        // There is no alias for the attribute. We unset the attribute itself.\n                        unsetAttrName = attrName;\n                    }\n                    // Unset the attribute.\n                    if (isString(unsetAttrName) && unsetAttrName) {\n                        // Unset a single attribute.\n                        normalAttrs || (normalAttrs = {});\n                        // values takes precedence over unset values\n                        if (unsetAttrName in normalAttrs) continue;\n                        normalAttrs[unsetAttrName] = attrVal;\n                    } else if (Array.isArray(unsetAttrName) && unsetAttrName.length > 0) {\n                        // Unset multiple attributes.\n                        normalAttrs || (normalAttrs = {});\n                        for (i = 0, n = unsetAttrName.length; i < n; i++) {\n                            const attrName = unsetAttrName[i];\n                            // values takes precedence over unset values\n                            if (attrName in normalAttrs) continue;\n                            normalAttrs[attrName] = attrVal;\n                        }\n                    }\n                    // The unset value is neither a string nor an array.\n                    // The attribute is not unset.\n                } else {\n                    if (!isFunction(def.qualify) || def.qualify.call(this, attrVal, node, rawAttrs, this)) {\n                        if (isString(def.set)) {\n                            // An alias e.g 'xlink:href' -> 'href'\n                            normalAttrs || (normalAttrs = {});\n                            normalAttrs[def.set] = attrVal;\n                        }\n                        relatives.push(attrName, def);\n                    } else {\n                        normalAttrs || (normalAttrs = {});\n                        normalAttrs[attrName] = attrVal;\n                    }\n                }\n            } else {\n                normalAttrs || (normalAttrs = {});\n                normalAttrs[attrName] = attrVal;\n            }\n        }\n\n        // handle the rest of attributes via related method\n        // from the special attributes namespace.\n        for (i = 0, n = relatives.length; i < n; i+=2) {\n            attrName = relatives[i];\n            def = relatives[i+1];\n            attrVal = attrs[attrName];\n            if (isFunction(def.set)) {\n                setAttrs || (setAttrs = {});\n                setAttrs[attrName] = attrVal;\n            }\n            if (isFunction(def.position)) {\n                positionAttrs || (positionAttrs = {});\n                positionAttrs[attrName] = attrVal;\n            }\n            if (isFunction(def.offset)) {\n                offsetAttrs || (offsetAttrs = {});\n                offsetAttrs[attrName] = attrVal;\n            }\n        }\n\n        return {\n            raw: rawAttrs,\n            normal: normalAttrs,\n            set: setAttrs,\n            position: positionAttrs,\n            offset: offsetAttrs\n        };\n    },\n\n    updateRelativeAttributes: function(node, attrs, refBBox, opt) {\n\n        opt || (opt = {});\n\n        var attrName, attrVal, def;\n        var evalAttrs = evalAttributes(attrs.raw || {}, refBBox);\n        var nodeAttrs = attrs.normal || {};\n        for (const nodeAttrName in nodeAttrs) {\n            nodeAttrs[nodeAttrName] = evalAttrs[nodeAttrName];\n        }\n        var setAttrs = attrs.set;\n        var positionAttrs = attrs.position;\n        var offsetAttrs = attrs.offset;\n\n        for (attrName in setAttrs) {\n            attrVal = evalAttrs[attrName];\n            def = this.getAttributeDefinition(attrName);\n            // SET - set function should return attributes to be set on the node,\n            // which will affect the node dimensions based on the reference bounding\n            // box. e.g. `width`, `height`, `d`, `rx`, `ry`, `points\n            var setResult = def.set.call(this, attrVal, refBBox.clone(), node, evalAttrs, this);\n            if (isObject(setResult)) {\n                assign(nodeAttrs, setResult);\n            } else if (setResult !== undefined) {\n                nodeAttrs[attrName] = setResult;\n            }\n        }\n\n        if (node instanceof HTMLElement) {\n            // TODO: setting the `transform` attribute on HTMLElements\n            // via `node.style.transform = 'matrix(...)';` would introduce\n            // a breaking change (e.g. basic.TextBlock).\n            this.setNodeAttributes(node, nodeAttrs);\n            return;\n        }\n\n        // The final translation of the subelement.\n        var nodeTransform = nodeAttrs.transform;\n        var nodeMatrix = V.transformStringToMatrix(nodeTransform);\n        var nodePosition = Point(nodeMatrix.e, nodeMatrix.f);\n        if (nodeTransform) {\n            nodeAttrs = omit(nodeAttrs, 'transform');\n            nodeMatrix.e = nodeMatrix.f = 0;\n        }\n\n        // Calculate node scale determined by the scalable group\n        // only if later needed.\n        var sx, sy, translation;\n        if (positionAttrs || offsetAttrs) {\n            var nodeScale = this.getNodeScale(node, opt.scalableNode);\n            sx = nodeScale.sx;\n            sy = nodeScale.sy;\n        }\n\n        var positioned = false;\n        for (attrName in positionAttrs) {\n            attrVal = evalAttrs[attrName];\n            def = this.getAttributeDefinition(attrName);\n            // POSITION - position function should return a point from the\n            // reference bounding box. The default position of the node is x:0, y:0 of\n            // the reference bounding box or could be further specify by some\n            // SVG attributes e.g. `x`, `y`\n            translation = def.position.call(this, attrVal, refBBox.clone(), node, evalAttrs, this);\n            if (translation) {\n                nodePosition.offset(Point(translation).scale(sx, sy));\n                positioned || (positioned = true);\n            }\n        }\n\n        // The node bounding box could depend on the `size` set from the previous loop.\n        // Here we know, that all the size attributes have been already set.\n        this.setNodeAttributes(node, nodeAttrs);\n\n        var offseted = false;\n        if (offsetAttrs) {\n            // Check if the node is visible\n            var nodeBoundingRect = this.getNodeBoundingRect(node);\n            if (nodeBoundingRect.width > 0 && nodeBoundingRect.height > 0) {\n                var nodeBBox = V.transformRect(nodeBoundingRect, nodeMatrix).scale(1 / sx, 1 / sy);\n                for (attrName in offsetAttrs) {\n                    attrVal = evalAttrs[attrName];\n                    def = this.getAttributeDefinition(attrName);\n                    // OFFSET - offset function should return a point from the element\n                    // bounding box. The default offset point is x:0, y:0 (origin) or could be further\n                    // specify with some SVG attributes e.g. `text-anchor`, `cx`, `cy`\n                    translation = def.offset.call(this, attrVal, nodeBBox, node, evalAttrs, this);\n                    if (translation) {\n                        nodePosition.offset(Point(translation).scale(sx, sy));\n                        offseted || (offseted = true);\n                    }\n                }\n            }\n        }\n\n        // Do not touch node's transform attribute if there is no transformation applied.\n        if (nodeTransform !== undefined || positioned || offseted) {\n            // Round the coordinates to 1 decimal point.\n            nodePosition.round(1);\n            nodeMatrix.e = nodePosition.x;\n            nodeMatrix.f = nodePosition.y;\n            node.setAttribute('transform', V.matrixToTransformString(nodeMatrix));\n            // TODO: store nodeMatrix metrics?\n        }\n    },\n\n    getNodeScale: function(node, scalableNode) {\n\n        // Check if the node is a descendant of the scalable group.\n        var sx, sy;\n        if (scalableNode && scalableNode.contains(node)) {\n            var scale = scalableNode.scale();\n            sx = 1 / scale.sx;\n            sy = 1 / scale.sy;\n        } else {\n            sx = 1;\n            sy = 1;\n        }\n\n        return { sx: sx, sy: sy };\n    },\n\n    cleanNodesCache: function() {\n        this.metrics = {};\n    },\n\n    cleanNodeCache: function(node) {\n        const id = node.id;\n        if (!id) return;\n        delete this.metrics[id];\n    },\n\n    nodeCache: function(magnet) {\n\n        var metrics = this.metrics;\n        // Don't use cache? It most likely a custom view with overridden update.\n        if (!metrics) return {};\n        var id = V.ensureId(magnet);\n        var value = metrics[id];\n        if (!value) value = metrics[id] = {};\n        return value;\n    },\n\n    getNodeData: function(magnet) {\n\n        var metrics = this.nodeCache(magnet);\n        if (!metrics.data) metrics.data = {};\n        return metrics.data;\n    },\n\n    getNodeBoundingRect: function(magnet) {\n\n        var metrics = this.nodeCache(magnet);\n        if (metrics.boundingRect === undefined) metrics.boundingRect = V(magnet).getBBox();\n        return new Rect(metrics.boundingRect);\n    },\n\n    getNodeMatrix: function(magnet) {\n\n        const metrics = this.nodeCache(magnet);\n        if (metrics.magnetMatrix === undefined) {\n            const { rotatableNode, el } = this;\n            let target;\n            if (rotatableNode && rotatableNode.contains(magnet)) {\n                target = rotatableNode;\n            } else {\n                target = el;\n            }\n            metrics.magnetMatrix = V(magnet).getTransformToElement(target);\n        }\n        return V.createSVGMatrix(metrics.magnetMatrix);\n    },\n\n    getNodeShape: function(magnet) {\n\n        var metrics = this.nodeCache(magnet);\n        if (metrics.geometryShape === undefined) metrics.geometryShape = V(magnet).toGeometryShape();\n        return metrics.geometryShape.clone();\n    },\n\n    isNodeConnection: function(node) {\n        return this.model.isLink() && (!node || node === this.el);\n    },\n\n    findNodesAttributes: function(attrs, root, selectorCache, selectors) {\n\n        var i, n, nodeAttrs, nodeId;\n        var nodesAttrs = {};\n        var mergeIds = [];\n        for (var selector in attrs) {\n            if (!attrs.hasOwnProperty(selector)) continue;\n            nodeAttrs = attrs[selector];\n            if (!isPlainObject(nodeAttrs)) continue; // Not a valid selector-attributes pair\n            var selected = selectorCache[selector] = this.findBySelector(selector, root, selectors);\n            for (i = 0, n = selected.length; i < n; i++) {\n                var node = selected[i];\n                nodeId = V.ensureId(node);\n                // \"unique\" selectors are selectors that referencing a single node (defined by `selector`)\n                // groupSelector referencing a single node is not \"unique\"\n                var unique = (selectors && selectors[selector] === node);\n                var prevNodeAttrs = nodesAttrs[nodeId];\n                if (prevNodeAttrs) {\n                    // Note, that nodes referenced by deprecated `CSS selectors` are not taken into account.\n                    // e.g. css:`.circle` and selector:`circle` can be applied in a random order\n                    if (!prevNodeAttrs.array) {\n                        mergeIds.push(nodeId);\n                        prevNodeAttrs.array = true;\n                        prevNodeAttrs.attributes = [prevNodeAttrs.attributes];\n                        prevNodeAttrs.selectedLength = [prevNodeAttrs.selectedLength];\n                    }\n                    var attributes = prevNodeAttrs.attributes;\n                    var selectedLength = prevNodeAttrs.selectedLength;\n                    if (unique) {\n                        // node referenced by `selector`\n                        attributes.unshift(nodeAttrs);\n                        selectedLength.unshift(-1);\n                    } else {\n                        // node referenced by `groupSelector`\n                        var sortIndex = sortedIndex(selectedLength, n);\n                        attributes.splice(sortIndex, 0, nodeAttrs);\n                        selectedLength.splice(sortIndex, 0, n);\n                    }\n                } else {\n                    nodesAttrs[nodeId] = {\n                        attributes: nodeAttrs,\n                        selectedLength: unique ? -1 : n,\n                        node: node,\n                        array: false\n                    };\n                }\n            }\n        }\n\n        for (i = 0, n = mergeIds.length; i < n; i++) {\n            nodeId = mergeIds[i];\n            nodeAttrs = nodesAttrs[nodeId];\n            nodeAttrs.attributes = merge({}, ...nodeAttrs.attributes.reverse());\n        }\n\n        return nodesAttrs;\n    },\n\n    getEventTarget: function(evt, opt = {}) {\n        const { target, type, clientX = 0, clientY = 0 } = evt;\n        if (\n            // Explicitly defined `fromPoint` option\n            opt.fromPoint ||\n            // Touchmove/Touchend event's target is not reflecting the element under the coordinates as mousemove does.\n            // It holds the element when a touchstart triggered.\n            type === 'touchmove' || type === 'touchend' ||\n            // Pointermove/Pointerup event with the pointer captured\n            ('pointerId' in evt && target.hasPointerCapture(evt.pointerId))\n        ) {\n            return document.elementFromPoint(clientX, clientY);\n        }\n\n        return target;\n    },\n\n    // Default is to process the `model.attributes.attrs` object and set attributes on subelements based on the selectors,\n    // unless `attrs` parameter was passed.\n    updateDOMSubtreeAttributes: function(rootNode, attrs, opt) {\n\n        opt || (opt = {});\n        opt.rootBBox || (opt.rootBBox = Rect());\n        opt.selectors || (opt.selectors = this.selectors); // selector collection to use\n\n        // Cache table for query results and bounding box calculation.\n        // Note that `selectorCache` needs to be invalidated for all\n        // `updateAttributes` calls, as the selectors might pointing\n        // to nodes designated by an attribute or elements dynamically\n        // created.\n        var selectorCache = {};\n        var bboxCache = {};\n        var relativeItems = [];\n        var relativeRefItems = [];\n        var item, node, nodeAttrs, nodeData, processedAttrs;\n\n        var roAttrs = opt.roAttributes;\n        var nodesAttrs = this.findNodesAttributes(roAttrs || attrs, rootNode, selectorCache, opt.selectors);\n        // `nodesAttrs` are different from all attributes, when\n        // rendering only  attributes sent to this method.\n        var nodesAllAttrs = (roAttrs)\n            ? this.findNodesAttributes(attrs, rootNode, selectorCache, opt.selectors)\n            : nodesAttrs;\n\n        for (var nodeId in nodesAttrs) {\n            nodeData = nodesAttrs[nodeId];\n            nodeAttrs = nodeData.attributes;\n            node = nodeData.node;\n            processedAttrs = this.processNodeAttributes(node, nodeAttrs);\n\n            if (!processedAttrs.set && !processedAttrs.position && !processedAttrs.offset && !processedAttrs.raw.ref) {\n                // Set all the normal attributes right on the SVG/HTML element.\n                this.setNodeAttributes(node, evalAttributes(processedAttrs.normal, opt.rootBBox));\n\n            } else {\n\n                var nodeAllAttrs = nodesAllAttrs[nodeId] && nodesAllAttrs[nodeId].attributes;\n                var refSelector = (nodeAllAttrs && (nodeAttrs.ref === undefined))\n                    ? nodeAllAttrs.ref\n                    : nodeAttrs.ref;\n\n                var refNode;\n                if (refSelector) {\n                    refNode = (selectorCache[refSelector] || this.findBySelector(refSelector, rootNode, opt.selectors))[0];\n                    if (!refNode) {\n                        throw new Error('dia.CellView: \"' + refSelector + '\" reference does not exist.');\n                    }\n                } else {\n                    refNode = null;\n                }\n\n                item = {\n                    node: node,\n                    refNode: refNode,\n                    processedAttributes: processedAttrs,\n                    allAttributes: nodeAllAttrs\n                };\n\n                if (refNode) {\n                    // If an element in the list is positioned relative to this one, then\n                    // we want to insert this one before it in the list.\n                    var itemIndex = relativeRefItems.findIndex(function(item) {\n                        return item.refNode === node;\n                    });\n\n                    if (itemIndex > -1) {\n                        relativeRefItems.splice(itemIndex, 0, item);\n                    } else {\n                        relativeRefItems.push(item);\n                    }\n                } else {\n                    // A node with no ref attribute. To be updated before the nodes referencing other nodes.\n                    // The order of no-ref-items is not specified/important.\n                    relativeItems.push(item);\n                }\n            }\n        }\n\n        relativeItems.push(...relativeRefItems);\n\n        for (let i = 0, n = relativeItems.length; i < n; i++) {\n            item = relativeItems[i];\n            node = item.node;\n            refNode = item.refNode;\n\n            // Find the reference element bounding box. If no reference was provided, we\n            // use the optional bounding box.\n            const refNodeId = refNode ? V.ensureId(refNode) : '';\n            let refBBox = bboxCache[refNodeId];\n            if (!refBBox) {\n                // Get the bounding box of the reference element using to the common ancestor\n                // transformation space.\n                //\n                // @example 1\n                // <g transform=\"translate(11, 13)\">\n                //     <rect @selector=\"b\" x=\"1\" y=\"2\" width=\"3\" height=\"4\"/>\n                //     <rect @selector=\"a\"/>\n                // </g>\n                //\n                // In this case, the reference bounding box can not be affected\n                // by the `transform` attribute of the `<g>` element,\n                // because the exact transformation will be applied to the `a` element\n                // as well as to the `b` element.\n                //\n                // @example 2\n                // <g transform=\"translate(11, 13)\">\n                //     <rect @selector=\"b\" x=\"1\" y=\"2\" width=\"3\" height=\"4\"/>\n                // </g>\n                // <rect @selector=\"a\"/>\n                //\n                // In this case, the reference bounding box have to be affected by the\n                // `transform` attribute of the `<g>` element, because the `a` element\n                // is not descendant of the `<g>` element and will not be affected\n                // by the transformation.\n                refBBox = bboxCache[refNodeId] = (refNode)\n                    ? V(refNode).getBBox({ target: getCommonAncestorNode(node, refNode) })\n                    : opt.rootBBox;\n            }\n\n            if (roAttrs) {\n                // if there was a special attribute affecting the position amongst passed-in attributes\n                // we have to merge it with the rest of the element's attributes as they are necessary\n                // to update the position relatively (i.e `ref-x` && 'ref-dx')\n                processedAttrs = this.processNodeAttributes(node, item.allAttributes);\n                this.mergeProcessedAttributes(processedAttrs, item.processedAttributes);\n\n            } else {\n                processedAttrs = item.processedAttributes;\n            }\n\n            this.updateRelativeAttributes(node, processedAttrs, refBBox, opt);\n        }\n    },\n\n    mergeProcessedAttributes: function(processedAttrs, roProcessedAttrs) {\n\n        processedAttrs.set || (processedAttrs.set = {});\n        processedAttrs.position || (processedAttrs.position = {});\n        processedAttrs.offset || (processedAttrs.offset = {});\n\n        assign(processedAttrs.set, roProcessedAttrs.set);\n        assign(processedAttrs.position, roProcessedAttrs.position);\n        assign(processedAttrs.offset, roProcessedAttrs.offset);\n\n        // Handle also the special transform property.\n        var transform = processedAttrs.normal && processedAttrs.normal.transform;\n        if (transform !== undefined && roProcessedAttrs.normal) {\n            roProcessedAttrs.normal.transform = transform;\n        }\n        processedAttrs.normal = roProcessedAttrs.normal;\n    },\n\n    // Lifecycle methods\n\n    // Called when the view is attached to the DOM,\n    // as result of `cell.addTo(graph)` being called (isInitialMount === true)\n    // or `paper.options.viewport` returning `true` (isInitialMount === false).\n    onMount(isInitialMount) {\n        if (isInitialMount) return;\n        this.mountTools();\n        HighlighterView.mount(this);\n    },\n\n    // Called when the view is detached from the DOM,\n    // as result of `paper.options.viewport` returning `false`.\n    onDetach() {\n        this.unmountTools();\n        HighlighterView.unmount(this);\n    },\n\n    // Called when the view is removed from the DOM\n    // as result of `cell.remove()`.\n    onRemove: function() {\n        this.removeTools();\n        this.removeHighlighters();\n    },\n\n    _toolsView: null,\n\n    hasTools: function(name) {\n        var toolsView = this._toolsView;\n        if (!toolsView) return false;\n        if (!name) return true;\n        return (toolsView.getName() === name);\n    },\n\n    addTools: function(toolsView) {\n\n        this.removeTools();\n\n        if (toolsView) {\n            this._toolsView = toolsView;\n            toolsView.configure({ relatedView: this });\n            toolsView.listenTo(this.paper, 'tools:event', this.onToolEvent.bind(this));\n        }\n        return this;\n    },\n\n    unmountTools() {\n        const toolsView = this._toolsView;\n        if (toolsView) toolsView.unmount();\n        return this;\n    },\n\n    mountTools() {\n        const toolsView = this._toolsView;\n        // Prevent unnecessary re-appending of the tools.\n        if (toolsView && !toolsView.isMounted()) toolsView.mount();\n        return this;\n    },\n\n    updateTools: function(opt) {\n\n        var toolsView = this._toolsView;\n        if (toolsView) toolsView.update(opt);\n        return this;\n    },\n\n    removeTools: function() {\n\n        var toolsView = this._toolsView;\n        if (toolsView) {\n            toolsView.remove();\n            this._toolsView = null;\n        }\n        return this;\n    },\n\n    hideTools: function() {\n\n        var toolsView = this._toolsView;\n        if (toolsView) toolsView.hide();\n        return this;\n    },\n\n    showTools: function() {\n\n        var toolsView = this._toolsView;\n        if (toolsView) toolsView.show();\n        return this;\n    },\n\n    onToolEvent: function(event) {\n        switch (event) {\n            case 'remove':\n                this.removeTools();\n                break;\n            case 'hide':\n                this.hideTools();\n                break;\n            case 'show':\n                this.showTools();\n                break;\n        }\n    },\n\n    removeHighlighters: function() {\n        HighlighterView.remove(this);\n    },\n\n    updateHighlighters: function(dirty = false) {\n        HighlighterView.update(this, null, dirty);\n    },\n\n    transformHighlighters: function() {\n        HighlighterView.transform(this);\n    },\n\n    // Interaction. The controller part.\n    // ---------------------------------\n\n    preventDefaultInteraction(evt) {\n        this.eventData(evt, { defaultInteractionPrevented: true  });\n    },\n\n    isDefaultInteractionPrevented(evt) {\n        const { defaultInteractionPrevented = false } = this.eventData(evt);\n        return defaultInteractionPrevented;\n    },\n\n    // Interaction is handled by the paper and delegated to the view in interest.\n    // `x` & `y` parameters passed to these functions represent the coordinates already snapped to the paper grid.\n    // If necessary, real coordinates can be obtained from the `evt` event object.\n\n    // These functions are supposed to be overridden by the views that inherit from `joint.dia.Cell`,\n    // i.e. `joint.dia.Element` and `joint.dia.Link`.\n\n    pointerdblclick: function(evt, x, y) {\n\n        this.notify('cell:pointerdblclick', evt, x, y);\n    },\n\n    pointerclick: function(evt, x, y) {\n\n        this.notify('cell:pointerclick', evt, x, y);\n    },\n\n    contextmenu: function(evt, x, y) {\n\n        this.notify('cell:contextmenu', evt, x, y);\n    },\n\n    pointerdown: function(evt, x, y) {\n\n        const { model } = this;\n        const { graph } = model;\n        if (graph) {\n            model.startBatch('pointer');\n            this.eventData(evt, { graph });\n        }\n\n        this.notify('cell:pointerdown', evt, x, y);\n    },\n\n    pointermove: function(evt, x, y) {\n\n        this.notify('cell:pointermove', evt, x, y);\n    },\n\n    pointerup: function(evt, x, y) {\n\n        const { graph } = this.eventData(evt);\n\n        this.notify('cell:pointerup', evt, x, y);\n\n        if (graph) {\n            // we don't want to trigger event on model as model doesn't\n            // need to be member of collection anymore (remove)\n            graph.stopBatch('pointer', { cell: this.model });\n        }\n    },\n\n    mouseover: function(evt) {\n\n        this.notify('cell:mouseover', evt);\n    },\n\n    mouseout: function(evt) {\n\n        this.notify('cell:mouseout', evt);\n    },\n\n    mouseenter: function(evt) {\n\n        this.notify('cell:mouseenter', evt);\n    },\n\n    mouseleave: function(evt) {\n\n        this.notify('cell:mouseleave', evt);\n    },\n\n    mousewheel: function(evt, x, y, delta) {\n\n        this.notify('cell:mousewheel', evt, x, y, delta);\n    },\n\n    onevent: function(evt, eventName, x, y) {\n\n        this.notify(eventName, evt, x, y);\n    },\n\n    onmagnet: function() {\n\n        // noop\n    },\n\n    magnetpointerdblclick: function() {\n\n        // noop\n    },\n\n    magnetcontextmenu: function() {\n\n        // noop\n    },\n\n    checkMouseleave(evt) {\n        const { paper, model } = this;\n        if (paper.isAsync()) {\n            // Make sure the source/target views are updated before this view.\n            // It's not 100% bulletproof (see below) but it's a good enough solution for now.\n            // The connected cells could be links as well. In that case, we would\n            // need to recursively go through all the connected links and update\n            // their source/target views as well.\n            if (model.isLink()) {\n                // The `this.sourceView` and `this.targetView` might not be updated yet.\n                // We need to find the view by the model.\n                const sourceElement = model.getSourceElement();\n                if (sourceElement) {\n                    const sourceView = paper.findViewByModel(sourceElement);\n                    if (sourceView) {\n                        paper.dumpView(sourceView);\n                        paper.checkViewVisibility(sourceView);\n                    }\n                }\n                const targetElement = model.getTargetElement();\n                if (targetElement) {\n                    const targetView = paper.findViewByModel(targetElement);\n                    if (targetView) {\n                        paper.dumpView(targetView);\n                        paper.checkViewVisibility(targetView);\n                    }\n                }\n            }\n            // Do the updates of the current view synchronously now\n            paper.dumpView(this);\n            paper.checkViewVisibility(this);\n        }\n        const target = this.getEventTarget(evt, { fromPoint: true });\n        const view = paper.findView(target);\n        if (view === this) return;\n        // Leaving the current view\n        this.mouseleave(evt);\n        if (!view) return;\n        // Entering another view\n        view.mouseenter(evt);\n    },\n\n    setInteractivity: function(value) {\n\n        this.options.interactive = value;\n    },\n\n    isIntersecting: function(geometryShape, geometryData) {\n        return intersection.exists(geometryShape, this.getNodeBBox(this.el), geometryData);\n    },\n\n    isEnclosedIn: function(geometryRect) {\n        return geometryRect.containsRect(this.getNodeBBox(this.el));\n    },\n\n    isInArea: function(geometryRect, options = {}) {\n        if (options.strict) {\n            return this.isEnclosedIn(geometryRect);\n        }\n        return this.isIntersecting(geometryRect);\n    },\n\n    isAtPoint: function(point, options) {\n        return this.getNodeBBox(this.el).containsPoint(point, options);\n    }\n\n}, {\n\n    Flags,\n\n    Highlighting: HighlightingTypes,\n\n    addPresentationAttributes: function(presentationAttributes) {\n        return merge({}, result(this.prototype, 'presentationAttributes'), presentationAttributes, function(a, b) {\n            if (!a || !b) return;\n            if (typeof a === 'string') a = [a];\n            if (typeof b === 'string') b = [b];\n            if (Array.isArray(a) && Array.isArray(b)) return uniq(a.concat(b));\n        });\n    },\n\n    evalAttribute,\n\n});\n\n\nObject.defineProperty(CellView.prototype, 'useCSSSelectors', {\n    get() {\n        const localUse = this.model.useCSSSelectors;\n        if (localUse !== undefined) return localUse;\n        return config.useCSSSelectors;\n    }\n});\n\n// TODO: Move to Vectorizer library.\nfunction getCommonAncestorNode(node1, node2) {\n    let parent = node1;\n    do {\n        if (parent.contains(node2)) return parent;\n        parent = parent.parentNode;\n    } while (parent);\n    return null;\n}\n\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4268, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4274, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/ports.mjs"],"sourcesContent":["import * as util from '../util/index.mjs';\nimport V from '../V/index.mjs';\nimport { Rect, Point } from '../g/index.mjs';\nimport * as Port from '../layout/ports/port.mjs';\nimport * as PortLabel from '../layout/ports/portLabel.mjs';\n\nvar PortData = function(data) {\n\n    var clonedData = util.cloneDeep(data) || {};\n    this.ports = [];\n    this.groups = {};\n    this.portLayoutNamespace = Port;\n    this.portLabelLayoutNamespace = PortLabel;\n\n    this._init(clonedData);\n};\n\nPortData.prototype = {\n\n    getPorts: function() {\n        return this.ports;\n    },\n\n    getGroup: function(name) {\n        return this.groups[name] || {};\n    },\n\n    getPortsByGroup: function(groupName) {\n\n        return this.ports.filter(function(port) {\n            return port.group === groupName;\n        });\n    },\n\n    getGroupPortsMetrics: function(groupName, elBBox) {\n\n        var group = this.getGroup(groupName);\n        var ports = this.getPortsByGroup(groupName);\n\n        var groupPosition = group.position || {};\n        var groupPositionName = groupPosition.name;\n        var namespace = this.portLayoutNamespace;\n        if (!namespace[groupPositionName]) {\n            groupPositionName = 'left';\n        }\n\n        var groupArgs = groupPosition.args || {};\n        var portsArgs = ports.map(function(port) {\n            return port && port.position && port.position.args;\n        });\n        var groupPortTransformations = namespace[groupPositionName](portsArgs, elBBox, groupArgs);\n\n        var accumulator = {\n            ports: ports,\n            result: []\n        };\n\n        util.toArray(groupPortTransformations).reduce(function(res, portTransformation, index) {\n            var port = res.ports[index];\n            res.result.push({\n                portId: port.id,\n                portTransformation: portTransformation,\n                labelTransformation: this._getPortLabelLayout(port, Point(portTransformation), elBBox),\n                portAttrs: port.attrs,\n                portSize: port.size,\n                labelSize: port.label.size\n            });\n            return res;\n        }.bind(this), accumulator);\n\n        return accumulator.result;\n    },\n\n    _getPortLabelLayout: function(port, portPosition, elBBox) {\n\n        var namespace = this.portLabelLayoutNamespace;\n        var labelPosition = port.label.position.name || 'left';\n\n        if (namespace[labelPosition]) {\n            return namespace[labelPosition](portPosition, elBBox, port.label.position.args);\n        }\n\n        return null;\n    },\n\n    _init: function(data) {\n\n        // prepare groups\n        if (util.isObject(data.groups)) {\n            var groups = Object.keys(data.groups);\n            for (var i = 0, n = groups.length; i < n; i++) {\n                var key = groups[i];\n                this.groups[key] = this._evaluateGroup(data.groups[key]);\n            }\n        }\n\n        // prepare ports\n        var ports = util.toArray(data.items);\n        for (var j = 0, m = ports.length; j < m; j++) {\n            this.ports.push(this._evaluatePort(ports[j]));\n        }\n    },\n\n    _evaluateGroup: function(group) {\n\n        return util.merge(group, {\n            position: this._getPosition(group.position, true),\n            label: this._getLabel(group, true)\n        });\n    },\n\n    _evaluatePort: function(port) {\n\n        var evaluated = util.assign({}, port);\n\n        var group = this.getGroup(port.group);\n\n        evaluated.markup = evaluated.markup || group.markup;\n        evaluated.attrs = util.merge({}, group.attrs, evaluated.attrs);\n        evaluated.position = this._createPositionNode(group, evaluated);\n        evaluated.label = util.merge({}, group.label, this._getLabel(evaluated));\n        evaluated.z = this._getZIndex(group, evaluated);\n        evaluated.size = util.assign({}, group.size, evaluated.size);\n\n        return evaluated;\n    },\n\n    _getZIndex: function(group, port) {\n\n        if (util.isNumber(port.z)) {\n            return port.z;\n        }\n        if (util.isNumber(group.z) || group.z === 'auto') {\n            return group.z;\n        }\n        return 'auto';\n    },\n\n    _createPositionNode: function(group, port) {\n\n        return util.merge({\n            name: 'left',\n            args: {}\n        }, group.position, { args: port.args });\n    },\n\n    _getPosition: function(position, setDefault) {\n\n        var args = {};\n        var positionName;\n\n        if (util.isFunction(position)) {\n            positionName = 'fn';\n            args.fn = position;\n        } else if (util.isString(position)) {\n            positionName = position;\n        } else if (position === undefined) {\n            positionName = setDefault ? 'left' : null;\n        } else if (Array.isArray(position)) {\n            positionName = 'absolute';\n            args.x = position[0];\n            args.y = position[1];\n        } else if (util.isObject(position)) {\n            positionName = position.name;\n            util.assign(args, position.args);\n        }\n\n        var result = { args: args };\n\n        if (positionName) {\n            result.name = positionName;\n        }\n        return result;\n    },\n\n    _getLabel: function(item, setDefaults) {\n\n        var label = item.label || {};\n\n        var ret = label;\n        ret.position = this._getPosition(label.position, setDefaults);\n\n        return ret;\n    }\n};\n\nexport const elementPortPrototype = {\n\n    _initializePorts: function() {\n\n        this._createPortData();\n        this.on('change:ports', function() {\n\n            this._processRemovedPort();\n            this._createPortData();\n        }, this);\n    },\n\n    /**\n     * remove links tied wiht just removed element\n     * @private\n     */\n    _processRemovedPort: function() {\n\n        var current = this.get('ports') || {};\n        var currentItemsMap = {};\n\n        util.toArray(current.items).forEach(function(item) {\n            currentItemsMap[item.id] = true;\n        });\n\n        var previous = this.previous('ports') || {};\n        var removed = {};\n\n        util.toArray(previous.items).forEach(function(item) {\n            if (!currentItemsMap[item.id]) {\n                removed[item.id] = true;\n            }\n        });\n\n        var graph = this.graph;\n        if (graph && !util.isEmpty(removed)) {\n\n            var inboundLinks = graph.getConnectedLinks(this, { inbound: true });\n            inboundLinks.forEach(function(link) {\n\n                if (removed[link.get('target').port]) link.remove();\n            });\n\n            var outboundLinks = graph.getConnectedLinks(this, { outbound: true });\n            outboundLinks.forEach(function(link) {\n\n                if (removed[link.get('source').port]) link.remove();\n            });\n        }\n    },\n\n    /**\n     * @returns {boolean}\n     */\n    hasPorts: function() {\n\n        var ports = this.prop('ports/items');\n        return Array.isArray(ports) && ports.length > 0;\n    },\n\n    /**\n     * @param {string} id\n     * @returns {boolean}\n     */\n    hasPort: function(id) {\n\n        return this.getPortIndex(id) !== -1;\n    },\n\n    /**\n     * @returns {Array<object>}\n     */\n    getPorts: function() {\n\n        return util.cloneDeep(this.prop('ports/items')) || [];\n    },\n\n    /**\n     * @returns {Array<object>}\n     */\n    getGroupPorts: function(groupName) {\n        const groupPorts = util.toArray(this.prop(['ports','items'])).filter(port => port.group === groupName);\n        return util.cloneDeep(groupPorts);\n    },\n\n    /**\n     * @param {string} id\n     * @returns {object}\n     */\n    getPort: function(id) {\n\n        return util.cloneDeep(util.toArray(this.prop('ports/items')).find(function(port) {\n            return port.id && port.id === id;\n        }));\n    },\n\n    getPortGroupNames: function() {\n        return Object.keys(this._portSettingsData.groups);\n    },\n\n    /**\n     * @param {string} groupName\n     * @returns {Object<portId, {x: number, y: number, angle: number}>}\n     */\n    getPortsPositions: function(groupName) {\n\n        var portsMetrics = this._portSettingsData.getGroupPortsMetrics(groupName, Rect(this.size()));\n\n        return portsMetrics.reduce(function(positions, metrics) {\n            var transformation = metrics.portTransformation;\n            positions[metrics.portId] = {\n                x: transformation.x,\n                y: transformation.y,\n                angle: transformation.angle\n            };\n            return positions;\n        }, {});\n    },\n\n    /**\n     * @param {string|Port} port port id or port\n     * @returns {number} port index\n     */\n    getPortIndex: function(port) {\n\n        var id = util.isObject(port) ? port.id : port;\n\n        if (!this._isValidPortId(id)) {\n            return -1;\n        }\n\n        return util.toArray(this.prop('ports/items')).findIndex(function(item) {\n            return item.id === id;\n        });\n    },\n\n    /**\n     * @param {object} port\n     * @param {object} [opt]\n     * @returns {joint.dia.Element}\n     */\n    addPort: function(port, opt) {\n\n        if (!util.isObject(port) || Array.isArray(port)) {\n            throw new Error('Element: addPort requires an object.');\n        }\n\n        var ports = util.assign([], this.prop('ports/items'));\n        ports.push(port);\n        this.prop('ports/items', ports, opt);\n\n        return this;\n    },\n\n    /**\n     * @param {string|Port|number} before\n     * @param {object} port\n     * @param {object} [opt]\n     * @returns {joint.dia.Element}\n     */\n    insertPort: function(before, port, opt) {\n        const index = (typeof before === 'number') ? before : this.getPortIndex(before);\n\n        if (!util.isObject(port) || Array.isArray(port)) {\n            throw new Error('dia.Element: insertPort requires an object.');\n        }\n\n        const ports = util.assign([], this.prop('ports/items'));\n        ports.splice(index, 0, port);\n        this.prop('ports/items', ports, opt);\n\n        return this;\n    },\n\n    /**\n     * @param {string} portId\n     * @param {string|object=} path\n     * @param {*=} value\n     * @param {object=} opt\n     * @returns {joint.dia.Element}\n     */\n    portProp: function(portId, path, value, opt) {\n\n        var index = this.getPortIndex(portId);\n\n        if (index === -1) {\n            throw new Error('Element: unable to find port with id ' + portId);\n        }\n\n        var args = Array.prototype.slice.call(arguments, 1);\n        if (Array.isArray(path)) {\n            args[0] = ['ports', 'items', index].concat(path);\n        } else if (util.isString(path)) {\n\n            // Get/set an attribute by a special path syntax that delimits\n            // nested objects by the colon character.\n            args[0] = ['ports/items/', index, '/', path].join('');\n\n        } else {\n\n            args = ['ports/items/' + index];\n            if (util.isPlainObject(path)) {\n                args.push(path);\n                args.push(value);\n            }\n        }\n\n        return this.prop.apply(this, args);\n    },\n\n    _validatePorts: function() {\n\n        var portsAttr = this.get('ports') || {};\n\n        var errorMessages = [];\n        portsAttr = portsAttr || {};\n        var ports = util.toArray(portsAttr.items);\n\n        ports.forEach(function(p) {\n\n            if (typeof p !== 'object') {\n                errorMessages.push('Element: invalid port ', p);\n            }\n\n            if (!this._isValidPortId(p.id)) {\n                p.id = this.generatePortId();\n            }\n        }, this);\n\n        if (util.uniq(ports, 'id').length !== ports.length) {\n            errorMessages.push('Element: found id duplicities in ports.');\n        }\n\n        return errorMessages;\n    },\n\n    generatePortId: function() {\n        return this.generateId();\n    },\n\n    /**\n     * @param {string} id port id\n     * @returns {boolean}\n     * @private\n     */\n    _isValidPortId: function(id) {\n\n        return id !== null && id !== undefined && !util.isObject(id);\n    },\n\n    addPorts: function(ports, opt) {\n\n        if (ports.length) {\n            this.prop('ports/items', util.assign([], this.prop('ports/items')).concat(ports), opt);\n        }\n\n        return this;\n    },\n\n    removePort: function(port, opt) {\n        const options = opt || {};\n        const index = this.getPortIndex(port);\n        if (index !== -1) {\n            const ports = util.assign([], this.prop(['ports', 'items']));\n            ports.splice(index, 1);\n            options.rewrite = true;\n            this.startBatch('port-remove');\n            this.prop(['ports', 'items'], ports, options);\n            this.stopBatch('port-remove');\n        }\n        return this;\n    },\n\n    removePorts: function(portsForRemoval, opt) {\n        let options, newPorts;\n        if (Array.isArray(portsForRemoval)) {\n            options = opt || {};\n            if (portsForRemoval.length === 0) return this.this;\n            const currentPorts = util.assign([], this.prop(['ports', 'items']));\n            newPorts = currentPorts.filter(function(cp) {\n                return !portsForRemoval.some(function(rp) {\n                    const rpId = util.isObject(rp) ? rp.id : rp;\n                    return cp.id === rpId;\n                });\n            });\n        } else {\n            options = portsForRemoval || {};\n            newPorts = [];\n        }\n        this.startBatch('port-remove');\n        options.rewrite = true;\n        this.prop(['ports', 'items'], newPorts, options);\n        this.stopBatch('port-remove');\n        return this;\n    },\n\n    /**\n     * @private\n     */\n    _createPortData: function() {\n\n        var err = this._validatePorts();\n\n        if (err.length > 0) {\n            this.set('ports', this.previous('ports'));\n            throw new Error(err.join(' '));\n        }\n\n        var prevPortData;\n\n        if (this._portSettingsData) {\n\n            prevPortData = this._portSettingsData.getPorts();\n        }\n\n        this._portSettingsData = new PortData(this.get('ports'));\n\n        var curPortData = this._portSettingsData.getPorts();\n\n        if (prevPortData) {\n\n            var added = curPortData.filter(function(item) {\n                if (!prevPortData.find(function(prevPort) {\n                    return prevPort.id === item.id;\n                })) {\n                    return item;\n                }\n            });\n\n            var removed = prevPortData.filter(function(item) {\n                if (!curPortData.find(function(curPort) {\n                    return curPort.id === item.id;\n                })) {\n                    return item;\n                }\n            });\n\n            if (removed.length > 0) {\n                this.trigger('ports:remove', this, removed);\n            }\n\n            if (added.length > 0) {\n                this.trigger('ports:add', this, added);\n            }\n        }\n    }\n};\n\nexport const elementViewPortPrototype = {\n\n    portContainerMarkup: 'g',\n    portMarkup: [{\n        tagName: 'circle',\n        selector: 'circle',\n        attributes: {\n            'r': 10,\n            'fill': '#FFFFFF',\n            'stroke': '#000000'\n        }\n    }],\n    portLabelMarkup: [{\n        tagName: 'text',\n        selector: 'text',\n        attributes: {\n            'fill': '#000000'\n        }\n    }],\n    /** @type {Object<string, {portElement: Vectorizer, portLabelElement: Vectorizer}>} */\n    _portElementsCache: null,\n\n    /**\n     * @private\n     */\n    _initializePorts: function() {\n        this._cleanPortsCache();\n    },\n\n    /**\n     * @typedef {Object} Port\n     *\n     * @property {string} id\n     * @property {Object} position\n     * @property {Object} label\n     * @property {Object} attrs\n     * @property {string} markup\n     * @property {string} group\n     */\n\n    /**\n     * @private\n     */\n    _refreshPorts: function() {\n\n        this._removePorts();\n        this._cleanPortsCache();\n        this._renderPorts();\n    },\n\n    _cleanPortsCache: function() {\n        this._portElementsCache = {};\n    },\n\n    /**\n     * @private\n     */\n    _renderPorts: function() {\n\n        // references to rendered elements without z-index\n        var elementReferences = [];\n        var elem = this._getContainerElement();\n\n        for (var i = 0, count = elem.node.childNodes.length; i < count; i++) {\n            elementReferences.push(elem.node.childNodes[i]);\n        }\n\n        var portsGropsByZ = util.groupBy(this.model._portSettingsData.getPorts(), 'z');\n        var withoutZKey = 'auto';\n\n        // render non-z first\n        util.toArray(portsGropsByZ[withoutZKey]).forEach(function(port) {\n            var portElement = this._getPortElement(port);\n            elem.append(portElement);\n            elementReferences.push(portElement);\n        }, this);\n\n        var groupNames = Object.keys(portsGropsByZ);\n        for (var k = 0; k < groupNames.length; k++) {\n            var groupName = groupNames[k];\n            if (groupName !== withoutZKey) {\n                var z = parseInt(groupName, 10);\n                this._appendPorts(portsGropsByZ[groupName], z, elementReferences);\n            }\n        }\n\n        this._updatePorts();\n    },\n\n    /**\n     * @returns {V}\n     * @private\n     */\n    _getContainerElement: function() {\n\n        return this.rotatableNode || this.vel;\n    },\n\n    /**\n     * @param {Array<Port>}ports\n     * @param {number} z\n     * @param refs\n     * @private\n     */\n    _appendPorts: function(ports, z, refs) {\n\n        var containerElement = this._getContainerElement();\n        var portElements = util.toArray(ports).map(this._getPortElement, this);\n\n        if (refs[z] || z < 0) {\n            V(refs[Math.max(z, 0)]).before(portElements);\n        } else {\n            containerElement.append(portElements);\n        }\n    },\n\n    /**\n     * Try to get element from cache,\n     * @param port\n     * @returns {*}\n     * @private\n     */\n    _getPortElement: function(port) {\n\n        if (this._portElementsCache[port.id]) {\n            return this._portElementsCache[port.id].portElement;\n        }\n        return this._createPortElement(port);\n    },\n\n    findPortNodes: function(portId, selector) {\n        const portCache = this._portElementsCache[portId];\n        if (!portCache) return [];\n        if (!selector) return [portCache.portContentElement.node];\n        const portRoot = portCache.portElement.node;\n        const portSelectors = portCache.portSelectors;\n        return this.findBySelector(selector, portRoot, portSelectors);\n    },\n\n    findPortNode: function(portId, selector) {\n        const [node = null] = this.findPortNodes(portId, selector);\n        return node;\n    },\n\n    /**\n     * @private\n     */\n    _updatePorts: function() {\n\n        // layout ports without group\n        this._updatePortGroup(undefined);\n        // layout ports with explicit group\n        var groupsNames = Object.keys(this.model._portSettingsData.groups);\n        groupsNames.forEach(this._updatePortGroup, this);\n    },\n\n    /**\n     * @private\n     */\n    _removePorts: function() {\n        util.invoke(this._portElementsCache, 'portElement.remove');\n    },\n\n    /**\n     * @param {Port} port\n     * @returns {V}\n     * @private\n     */\n    _createPortElement: function(port) {\n\n        let portElement;\n        let labelElement;\n        let labelSelectors;\n        let portSelectors;\n\n        var portContainerElement = V(this.portContainerMarkup).addClass('joint-port');\n\n        var portMarkup = this._getPortMarkup(port);\n        if (Array.isArray(portMarkup)) {\n            var portDoc = this.parseDOMJSON(portMarkup, portContainerElement.node);\n            var portFragment = portDoc.fragment;\n            if (portFragment.childNodes.length > 1) {\n                portElement = V('g').append(portFragment);\n            } else {\n                portElement = V(portFragment.firstChild);\n            }\n            portSelectors = portDoc.selectors;\n        } else {\n            portElement = V(portMarkup);\n            if (Array.isArray(portElement)) {\n                portElement = V('g').append(portElement);\n            }\n        }\n\n        if (!portElement) {\n            throw new Error('ElementView: Invalid port markup.');\n        }\n\n        portElement.attr({\n            'port': port.id,\n            'port-group': port.group\n        });\n\n        // If the port ID is a number, we need to add\n        // extra information to the port element to distinguish\n        // between ports with the same ID but different types.\n        if (util.isNumber(port.id)) {\n            portElement.attr('port-id-type', 'number');\n        }\n\n        const labelMarkupDef = this._getPortLabelMarkup(port.label);\n        if (Array.isArray(labelMarkupDef)) {\n            // JSON Markup\n            const { fragment, selectors } = this.parseDOMJSON(labelMarkupDef, portContainerElement.node);\n            const childCount = fragment.childNodes.length;\n            if (childCount > 0) {\n                labelSelectors = selectors;\n                labelElement = (childCount === 1) ? V(fragment.firstChild) : V('g').append(fragment);\n            }\n        } else {\n            // String Markup\n            labelElement = V(labelMarkupDef);\n            if (Array.isArray(labelElement)) {\n                labelElement = V('g').append(labelElement);\n            }\n        }\n\n        var portContainerSelectors;\n        if (portSelectors && labelSelectors) {\n            for (var key in labelSelectors) {\n                if (portSelectors[key] && key !== this.selector) throw new Error('ElementView: selectors within port must be unique.');\n            }\n            portContainerSelectors = util.assign({}, portSelectors, labelSelectors);\n        } else {\n            portContainerSelectors = portSelectors || labelSelectors || {};\n        }\n\n        // The `portRootSelector` points to the root SVGNode of the port.\n        // Either the implicit wrapping group <g/> in case the port consist of multiple SVGNodes.\n        // Or the single SVGNode of the port.\n        const portRootSelector = 'portRoot';\n        // The `labelRootSelector` points to the root SVGNode of the label.\n        const labelRootSelector = 'labelRoot';\n        // The `labelTextSelector` points to all text SVGNodes of the label.\n        const labelTextSelector = 'labelText';\n\n        if (!(portRootSelector in portContainerSelectors)) {\n            portContainerSelectors[portRootSelector] = portElement.node;\n        }\n\n        if (labelElement) {\n            const labelNode = labelElement.node;\n            if (!(labelRootSelector in portContainerSelectors)) {\n                portContainerSelectors[labelRootSelector] = labelNode;\n            }\n            if (!(labelTextSelector in portContainerSelectors)) {\n                // If the label is a <text> element, we can use it directly.\n                // Otherwise, we need to find the <text> element within the label.\n                const labelTextNode = (labelElement.tagName() === 'TEXT')\n                    ? labelNode\n                    : Array.from(labelNode.querySelectorAll('text'));\n                portContainerSelectors[labelTextSelector] = labelTextNode;\n                if (!labelSelectors) labelSelectors = {};\n                labelSelectors[labelTextSelector] = labelTextNode;\n            }\n        }\n\n        portContainerElement.append(portElement.addClass('joint-port-body'));\n        if (labelElement) {\n            portContainerElement.append(labelElement.addClass('joint-port-label'));\n        }\n\n        this._portElementsCache[port.id] = {\n            portElement: portContainerElement,\n            portLabelElement: labelElement,\n            portSelectors: portContainerSelectors,\n            portLabelSelectors: labelSelectors,\n            portContentElement: portElement,\n            portContentSelectors: portSelectors\n        };\n\n        return portContainerElement;\n    },\n\n    /**\n     * @param {string=} groupName\n     * @private\n     */\n    _updatePortGroup: function(groupName) {\n\n        var elementBBox = Rect(this.model.size());\n        var portsMetrics = this.model._portSettingsData.getGroupPortsMetrics(groupName, elementBBox);\n\n        for (var i = 0, n = portsMetrics.length; i < n; i++) {\n            var metrics = portsMetrics[i];\n            var portId = metrics.portId;\n            var cached = this._portElementsCache[portId] || {};\n            var portTransformation = metrics.portTransformation;\n            var labelTransformation = metrics.labelTransformation;\n            if (labelTransformation && cached.portLabelElement) {\n                this.updateDOMSubtreeAttributes(cached.portLabelElement.node, labelTransformation.attrs, {\n                    rootBBox: new Rect(metrics.labelSize),\n                    selectors: cached.portLabelSelectors\n                });\n                this.applyPortTransform(cached.portLabelElement, labelTransformation, (-portTransformation.angle || 0));\n            }\n            this.updateDOMSubtreeAttributes(cached.portElement.node, metrics.portAttrs, {\n                rootBBox: new Rect(metrics.portSize),\n                selectors: cached.portSelectors\n            });\n            this.applyPortTransform(cached.portElement, portTransformation);\n        }\n    },\n\n    /**\n     * @param {Vectorizer} element\n     * @param {{dx:number, dy:number, angle: number, attrs: Object, x:number: y:number}} transformData\n     * @param {number=} initialAngle\n     * @constructor\n     */\n    applyPortTransform: function(element, transformData, initialAngle) {\n\n        var matrix = V.createSVGMatrix()\n            .rotate(initialAngle || 0)\n            .translate(transformData.x || 0, transformData.y || 0)\n            .rotate(transformData.angle || 0);\n\n        element.transform(matrix, { absolute: true });\n    },\n\n    /**\n     * @param {Port} port\n     * @returns {string}\n     * @private\n     */\n    _getPortMarkup: function(port) {\n\n        return port.markup || this.model.get('portMarkup') || this.model.portMarkup || this.portMarkup;\n    },\n\n    /**\n     * @param {Object} label\n     * @returns {string}\n     * @private\n     */\n    _getPortLabelMarkup: function(label) {\n\n        return label.markup || this.model.get('portLabelMarkup') || this.model.portLabelMarkup || this.portLabelMarkup;\n    }\n};\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5008, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5014, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/Element.mjs"],"sourcesContent":["import { Cell } from './Cell.mjs';\nimport { Point, toRad, normalizeAngle, Rect } from '../g/index.mjs';\nimport { isNumber, isObject, interpolate, assign, invoke, normalizeSides } from '../util/index.mjs';\nimport { elementPortPrototype } from './ports.mjs';\n\n// Element base model.\n// -----------------------------\n\nexport const Element = Cell.extend({\n\n    defaults: {\n        position: { x: 0, y: 0 },\n        size: { width: 1, height: 1 },\n        angle: 0\n    },\n\n    initialize: function() {\n\n        this._initializePorts();\n        Cell.prototype.initialize.apply(this, arguments);\n    },\n\n    /**\n     * @abstract\n     */\n    _initializePorts: function() {\n        // implemented in ports.js\n    },\n\n    _refreshPorts: function() {\n        // implemented in ports.js\n    },\n\n    isElement: function() {\n\n        return true;\n    },\n\n    position: function(x, y, opt) {\n\n        const isSetter = isNumber(y);\n        opt = (isSetter ? opt : x) || {};\n        const { parentRelative, deep, restrictedArea } = opt;\n\n\n        // option `parentRelative` for setting the position relative to the element's parent.\n        let parentPosition;\n        if (parentRelative) {\n\n            // Getting the parent's position requires the collection.\n            // Cell.parent() holds cell id only.\n            if (!this.graph) throw new Error('Element must be part of a graph.');\n\n            const parent = this.getParentCell();\n            if (parent && !parent.isLink()) {\n                parentPosition = parent.get('position');\n            }\n        }\n\n        if (isSetter) {\n\n            if (parentPosition) {\n                x += parentPosition.x;\n                y += parentPosition.y;\n            }\n\n            if (deep || restrictedArea) {\n                const { x: x0, y: y0 } = this.get('position');\n                this.translate(x - x0, y - y0, opt);\n            } else {\n                this.set('position', { x, y }, opt);\n            }\n\n            return this;\n\n        } else { // Getter returns a geometry point.\n\n            const elementPosition = Point(this.get('position'));\n            return parentRelative\n                ? elementPosition.difference(parentPosition)\n                : elementPosition;\n        }\n    },\n\n    translate: function(tx, ty, opt) {\n\n        tx = tx || 0;\n        ty = ty || 0;\n\n        if (tx === 0 && ty === 0) {\n            // Like nothing has happened.\n            return this;\n        }\n\n        opt = opt || {};\n        // Pass the initiator of the translation.\n        opt.translateBy = opt.translateBy || this.id;\n\n        var position = this.get('position') || { x: 0, y: 0 };\n        var ra = opt.restrictedArea;\n        if (ra && opt.translateBy === this.id) {\n\n            if (typeof ra === 'function') {\n\n                var newPosition = ra.call(this, position.x + tx, position.y + ty, opt);\n\n                tx = newPosition.x - position.x;\n                ty = newPosition.y - position.y;\n\n            } else  {\n                // We are restricting the translation for the element itself only. We get\n                // the bounding box of the element including all its embeds.\n                // All embeds have to be translated the exact same way as the element.\n                var bbox = this.getBBox({ deep: true });\n                //- - - - - - - - - - - - -> ra.x + ra.width\n                // - - - -> position.x      |\n                // -> bbox.x\n                //                ▓▓▓▓▓▓▓   |\n                //         ░░░░░░░▓▓▓▓▓▓▓\n                //         ░░░░░░░░░        |\n                //   ▓▓▓▓▓▓▓▓░░░░░░░\n                //   ▓▓▓▓▓▓▓▓               |\n                //   <-dx->                     | restricted area right border\n                //         <-width->        |   ░ translated element\n                //   <- - bbox.width - ->       ▓ embedded element\n                var dx = position.x - bbox.x;\n                var dy = position.y - bbox.y;\n                // Find the maximal/minimal coordinates that the element can be translated\n                // while complies the restrictions.\n                var x = Math.max(ra.x + dx, Math.min(ra.x + ra.width + dx - bbox.width, position.x + tx));\n                var y = Math.max(ra.y + dy, Math.min(ra.y + ra.height + dy - bbox.height, position.y + ty));\n                // recalculate the translation taking the restrictions into account.\n                tx = x - position.x;\n                ty = y - position.y;\n            }\n        }\n\n        var translatedPosition = {\n            x: position.x + tx,\n            y: position.y + ty\n        };\n\n        // To find out by how much an element was translated in event 'change:position' handlers.\n        opt.tx = tx;\n        opt.ty = ty;\n\n        if (opt.transition) {\n\n            if (!isObject(opt.transition)) opt.transition = {};\n\n            this.transition('position', translatedPosition, assign({}, opt.transition, {\n                valueFunction: interpolate.object\n            }));\n\n            // Recursively call `translate()` on all the embeds cells.\n            invoke(this.getEmbeddedCells(), 'translate', tx, ty, opt);\n\n        } else {\n\n            this.startBatch('translate', opt);\n            this.set('position', translatedPosition, opt);\n            invoke(this.getEmbeddedCells(), 'translate', tx, ty, opt);\n            this.stopBatch('translate', opt);\n        }\n\n        return this;\n    },\n\n    size: function(width, height, opt) {\n\n        var currentSize = this.get('size');\n        // Getter\n        // () signature\n        if (width === undefined) {\n            return {\n                width: currentSize.width,\n                height: currentSize.height\n            };\n        }\n        // Setter\n        // (size, opt) signature\n        if (isObject(width)) {\n            opt = height;\n            height = isNumber(width.height) ? width.height : currentSize.height;\n            width = isNumber(width.width) ? width.width : currentSize.width;\n        }\n\n        return this.resize(width, height, opt);\n    },\n\n    resize: function(width, height, opt) {\n\n        opt = opt || {};\n\n        this.startBatch('resize', opt);\n\n        if (opt.direction) {\n\n            var currentSize = this.get('size');\n\n            switch (opt.direction) {\n\n                case 'left':\n                case 'right':\n                    // Don't change height when resizing horizontally.\n                    height = currentSize.height;\n                    break;\n\n                case 'top':\n                case 'bottom':\n                    // Don't change width when resizing vertically.\n                    width = currentSize.width;\n                    break;\n            }\n\n            // Get the angle and clamp its value between 0 and 360 degrees.\n            var angle = normalizeAngle(this.get('angle') || 0);\n\n            // This is a rectangle in size of the un-rotated element.\n            var bbox = this.getBBox();\n\n            var origin;\n\n            if (angle) {\n\n                var quadrant = {\n                    'top-right': 0,\n                    'right': 0,\n                    'top-left': 1,\n                    'top': 1,\n                    'bottom-left': 2,\n                    'left': 2,\n                    'bottom-right': 3,\n                    'bottom': 3\n                }[opt.direction];\n\n                if (opt.absolute) {\n\n                    // We are taking the element's rotation into account\n                    quadrant += Math.floor((angle + 45) / 90);\n                    quadrant %= 4;\n                }\n\n                // Pick the corner point on the element, which meant to stay on its place before and\n                // after the rotation.\n                var fixedPoint = bbox[['bottomLeft', 'corner', 'topRight', 'origin'][quadrant]]();\n\n                // Find  an image of the previous indent point. This is the position, where is the\n                // point actually located on the screen.\n                var imageFixedPoint = Point(fixedPoint).rotate(bbox.center(), -angle);\n\n                // Every point on the element rotates around a circle with the centre of rotation\n                // in the middle of the element while the whole element is being rotated. That means\n                // that the distance from a point in the corner of the element (supposed its always rect) to\n                // the center of the element doesn't change during the rotation and therefore it equals\n                // to a distance on un-rotated element.\n                // We can find the distance as DISTANCE = (ELEMENTWIDTH/2)^2 + (ELEMENTHEIGHT/2)^2)^0.5.\n                var radius = Math.sqrt((width * width) + (height * height)) / 2;\n\n                // Now we are looking for an angle between x-axis and the line starting at image of fixed point\n                // and ending at the center of the element. We call this angle `alpha`.\n\n                // The image of a fixed point is located in n-th quadrant. For each quadrant passed\n                // going anti-clockwise we have to add 90 degrees. Note that the first quadrant has index 0.\n                //\n                // 3 | 2\n                // --c-- Quadrant positions around the element's center `c`\n                // 0 | 1\n                //\n                var alpha = quadrant * Math.PI / 2;\n\n                // Add an angle between the beginning of the current quadrant (line parallel with x-axis or y-axis\n                // going through the center of the element) and line crossing the indent of the fixed point and the center\n                // of the element. This is the angle we need but on the un-rotated element.\n                alpha += Math.atan(quadrant % 2 == 0 ? height / width : width / height);\n\n                // Lastly we have to deduct the original angle the element was rotated by and that's it.\n                alpha -= toRad(angle);\n\n                // With this angle and distance we can easily calculate the centre of the un-rotated element.\n                // Note that fromPolar constructor accepts an angle in radians.\n                var center = Point.fromPolar(radius, alpha, imageFixedPoint);\n\n                // The top left corner on the un-rotated element has to be half a width on the left\n                // and half a height to the top from the center. This will be the origin of rectangle\n                // we were looking for.\n                origin = Point(center).offset(width / -2, height / -2);\n\n            } else {\n                // calculation for the origin Point when there is no rotation of the element\n                origin = bbox.topLeft();\n\n                switch (opt.direction) {\n                    case 'top':\n                    case 'top-right':\n                        origin.offset(0, bbox.height - height);\n                        break;\n                    case 'left':\n                    case 'bottom-left':\n                        origin.offset(bbox.width -width, 0);\n                        break;\n                    case 'top-left':\n                        origin.offset(bbox.width - width, bbox.height - height);\n                        break;\n                }\n            }\n\n            // Resize the element (before re-positioning it).\n            this.set('size', { width: width, height: height }, opt);\n\n            // Finally, re-position the element.\n            this.position(origin.x, origin.y, opt);\n\n        } else {\n\n            // Resize the element.\n            this.set('size', { width: width, height: height }, opt);\n        }\n\n        this.stopBatch('resize', opt);\n\n        return this;\n    },\n\n    scale: function(sx, sy, origin, opt) {\n\n        var scaledBBox = this.getBBox().scale(sx, sy, origin);\n        this.startBatch('scale', opt);\n        this.position(scaledBBox.x, scaledBBox.y, opt);\n        this.resize(scaledBBox.width, scaledBBox.height, opt);\n        this.stopBatch('scale');\n        return this;\n    },\n\n    fitEmbeds: function(opt) {\n\n        return this.fitToChildren(opt);\n    },\n\n    fitToChildren: function(opt = {}) {\n\n        // Getting the children's size and position requires the collection.\n        // Cell.get('embeds') holds an array of cell ids only.\n        const { graph } = this;\n        if (!graph) throw new Error('Element must be part of a graph.');\n\n        const childElements = this.getEmbeddedCells().filter(cell => cell.isElement());\n        if (childElements.length === 0) return this;\n\n        this.startBatch('fit-embeds', opt);\n\n        if (opt.deep) {\n            // `opt.deep = true` means \"fit to all descendants\".\n            // As the first action of the fitting algorithm, recursively apply `fitToChildren()` on all descendants.\n            // - i.e. the algorithm is applied in reverse-depth order - start from deepest descendant, then go up (= this element).\n            invoke(childElements, 'fitToChildren', opt);\n        }\n\n        // Set new size and position of this element, based on:\n        // - union of bboxes of all children\n        // - inflated by given `opt.padding`\n        this._fitToElements(Object.assign({ elements: childElements }, opt));\n\n        this.stopBatch('fit-embeds');\n\n        return this;\n    },\n\n    fitParent: function(opt = {}) {\n\n        const { graph } = this;\n        if (!graph) throw new Error('Element must be part of a graph.');\n\n        // When `opt.deep = true`, we want `opt.terminator` to be the last ancestor processed.\n        // If the current element is `opt.terminator`, it means that this element has already been processed as parent so we can exit now.\n        if (opt.deep && opt.terminator && ((opt.terminator === this) || (opt.terminator === this.id))) return this;\n\n        const parentElement = this.getParentCell();\n        if (!parentElement || !parentElement.isElement()) return this;\n\n        // Get all children of parent element (i.e. this element + any sibling elements).\n        const siblingElements = parentElement.getEmbeddedCells().filter(cell => cell.isElement());\n        if (siblingElements.length === 0) return this;\n\n        this.startBatch('fit-parent', opt);\n\n        // Set new size and position of parent element, based on:\n        // - union of bboxes of all children of parent element (i.e. this element + any sibling elements)\n        // - inflated by given `opt.padding`\n        parentElement._fitToElements(Object.assign({ elements: siblingElements }, opt));\n\n        if (opt.deep) {\n            // `opt.deep = true` means \"fit all ancestors to their respective children\".\n            // As the last action of the fitting algorithm, recursively apply `fitParent()` on all ancestors.\n            // - i.e. the algorithm is applied in reverse-depth order - start from deepest descendant (= this element), then go up.\n            parentElement.fitParent(opt);\n        }\n\n        this.stopBatch('fit-parent');\n\n        return this;\n    },\n\n    // Assumption: This element is part of a graph.\n    _fitToElements: function(opt = {}) {\n\n        const elementsBBox = this.graph.getCellsBBox(opt.elements);\n        // If no `opt.elements` were provided, do nothing.\n        if (!elementsBBox) return;\n\n        const { expandOnly, shrinkOnly } = opt;\n        // This combination is meaningless, do nothing.\n        if (expandOnly && shrinkOnly) return;\n\n        // Calculate new size and position of this element based on:\n        // - union of bboxes of `opt.elements`\n        // - inflated by `opt.padding` (if not provided, all four properties = 0)\n        let { x, y, width, height } = elementsBBox;\n        const { left, right, top, bottom } = normalizeSides(opt.padding);\n        x -= left;\n        y -= top;\n        width += left + right;\n        height += bottom + top;\n        let resultBBox = new Rect(x, y, width, height);\n\n        if (expandOnly) {\n            // Non-shrinking is enforced by taking union of this element's current bbox with bbox calculated from `opt.elements`.\n            resultBBox = this.getBBox().union(resultBBox);\n\n        } else if (shrinkOnly) {\n            // Non-expansion is enforced by taking intersection of this element's current bbox with bbox calculated from `opt.elements`.\n            const intersectionBBox = this.getBBox().intersect(resultBBox);\n            // If all children are outside this element's current bbox, then `intersectionBBox` is `null` - does not make sense, do nothing.\n            if (!intersectionBBox) return;\n\n            resultBBox =  intersectionBBox;\n        }\n\n        // Set the new size and position of this element.\n        this.set({\n            position: { x: resultBBox.x, y: resultBBox.y },\n            size: { width: resultBBox.width, height: resultBBox.height }\n        }, opt);\n    },\n\n    // Rotate element by `angle` degrees, optionally around `origin` point.\n    // If `origin` is not provided, it is considered to be the center of the element.\n    // If `absolute` is `true`, the `angle` is considered is absolute, i.e. it is not\n    // the difference from the previous angle.\n    rotate: function(angle, absolute, origin, opt) {\n\n        if (origin) {\n\n            var center = this.getBBox().center();\n            var size = this.get('size');\n            var position = this.get('position');\n            center.rotate(origin, this.get('angle') - angle);\n            var dx = center.x - size.width / 2 - position.x;\n            var dy = center.y - size.height / 2 - position.y;\n            this.startBatch('rotate', { angle: angle, absolute: absolute, origin: origin });\n            this.position(position.x + dx, position.y + dy, opt);\n            this.rotate(angle, absolute, null, opt);\n            this.stopBatch('rotate');\n\n        } else {\n\n            this.set('angle', absolute ? angle : (this.get('angle') + angle) % 360, opt);\n        }\n\n        return this;\n    },\n\n    angle: function() {\n        return normalizeAngle(this.get('angle') || 0);\n    },\n\n    getBBox: function(opt = {}) {\n\n        const { graph, attributes } = this;\n        const { deep, rotate } = opt;\n\n        if (deep && graph) {\n            // Get all the embedded elements using breadth first algorithm.\n            const elements = this.getEmbeddedCells({ deep: true, breadthFirst: true });\n            // Add the model itself.\n            elements.push(this);\n            // Note: the default of getCellsBBox() is rotate=true and can't be\n            // changed without a breaking change\n            return graph.getCellsBBox(elements, opt);\n        }\n\n        const { angle = 0, position: { x, y }, size: { width, height }} = attributes;\n        const bbox = new Rect(x, y, width, height);\n        if (rotate) {\n            bbox.rotateAroundCenter(angle);\n        }\n        return bbox;\n    },\n\n    getPointFromConnectedLink: function(link, endType) {\n        // Center of the model\n        var bbox = this.getBBox();\n        var center = bbox.center();\n        // Center of a port\n        var endDef = link.get(endType);\n        if (!endDef) return center;\n        var portId = endDef.port;\n        if (!portId || !this.hasPort(portId)) return center;\n        var portGroup = this.portProp(portId, ['group']);\n        var portsPositions = this.getPortsPositions(portGroup);\n        var portCenter = new Point(portsPositions[portId]).offset(bbox.origin());\n        var angle = this.angle();\n        if (angle) portCenter.rotate(center, -angle);\n        return portCenter;\n    }\n});\n\nassign(Element.prototype, elementPortPrototype);\n\n"],"names":[],"mappings":";;;AAAA;AAEA;AADA;AACA;AADA;AAAA;AAEA;;;;;AAKO,MAAM,UAAU,sJAAA,CAAA,OAAI,CAAC,MAAM,CAAC;IAE/B,UAAU;QACN,UAAU;YAAE,GAAG;YAAG,GAAG;QAAE;QACvB,MAAM;YAAE,OAAO;YAAG,QAAQ;QAAE;QAC5B,OAAO;IACX;IAEA,YAAY;QAER,IAAI,CAAC,gBAAgB;QACrB,sJAAA,CAAA,OAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE;IAC1C;IAEA;;KAEC,GACD,kBAAkB;IACd,0BAA0B;IAC9B;IAEA,eAAe;IACX,0BAA0B;IAC9B;IAEA,WAAW;QAEP,OAAO;IACX;IAEA,UAAU,SAAS,CAAC,EAAE,CAAC,EAAE,GAAG;QAExB,MAAM,WAAW,CAAA,GAAA,8JAAA,CAAA,WAAQ,AAAD,EAAE;QAC1B,MAAM,CAAC,WAAW,MAAM,CAAC,KAAK,CAAC;QAC/B,MAAM,EAAE,cAAc,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG;QAGjD,qFAAqF;QACrF,IAAI;QACJ,IAAI,gBAAgB;YAEhB,yDAAyD;YACzD,oCAAoC;YACpC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,IAAI,MAAM;YAEjC,MAAM,SAAS,IAAI,CAAC,aAAa;YACjC,IAAI,UAAU,CAAC,OAAO,MAAM,IAAI;gBAC5B,iBAAiB,OAAO,GAAG,CAAC;YAChC;QACJ;QAEA,IAAI,UAAU;YAEV,IAAI,gBAAgB;gBAChB,KAAK,eAAe,CAAC;gBACrB,KAAK,eAAe,CAAC;YACzB;YAEA,IAAI,QAAQ,gBAAgB;gBACxB,MAAM,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;gBAClC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,IAAI;YACnC,OAAO;gBACH,IAAI,CAAC,GAAG,CAAC,YAAY;oBAAE;oBAAG;gBAAE,GAAG;YACnC;YAEA,OAAO,IAAI;QAEf,OAAO;YAEH,MAAM,kBAAkB,CAAA,GAAA,qJAAA,CAAA,QAAK,AAAD,EAAE,IAAI,CAAC,GAAG,CAAC;YACvC,OAAO,iBACD,gBAAgB,UAAU,CAAC,kBAC3B;QACV;IACJ;IAEA,WAAW,SAAS,EAAE,EAAE,EAAE,EAAE,GAAG;QAE3B,KAAK,MAAM;QACX,KAAK,MAAM;QAEX,IAAI,OAAO,KAAK,OAAO,GAAG;YACtB,6BAA6B;YAC7B,OAAO,IAAI;QACf;QAEA,MAAM,OAAO,CAAC;QACd,yCAAyC;QACzC,IAAI,WAAW,GAAG,IAAI,WAAW,IAAI,IAAI,CAAC,EAAE;QAE5C,IAAI,WAAW,IAAI,CAAC,GAAG,CAAC,eAAe;YAAE,GAAG;YAAG,GAAG;QAAE;QACpD,IAAI,KAAK,IAAI,cAAc;QAC3B,IAAI,MAAM,IAAI,WAAW,KAAK,IAAI,CAAC,EAAE,EAAE;YAEnC,IAAI,OAAO,OAAO,YAAY;gBAE1B,IAAI,cAAc,GAAG,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI;gBAElE,KAAK,YAAY,CAAC,GAAG,SAAS,CAAC;gBAC/B,KAAK,YAAY,CAAC,GAAG,SAAS,CAAC;YAEnC,OAAQ;gBACJ,yEAAyE;gBACzE,4DAA4D;gBAC5D,sEAAsE;gBACtE,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC;oBAAE,MAAM;gBAAK;gBACrC,4CAA4C;gBAC5C,6BAA6B;gBAC7B,YAAY;gBACZ,6BAA6B;gBAC7B,yBAAyB;gBACzB,6BAA6B;gBAC7B,oBAAoB;gBACpB,6BAA6B;gBAC7B,8DAA8D;gBAC9D,oDAAoD;gBACpD,kDAAkD;gBAClD,IAAI,KAAK,SAAS,CAAC,GAAG,KAAK,CAAC;gBAC5B,IAAI,KAAK,SAAS,CAAC,GAAG,KAAK,CAAC;gBAC5B,0EAA0E;gBAC1E,mCAAmC;gBACnC,IAAI,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,GAAG,KAAK,KAAK,KAAK,EAAE,SAAS,CAAC,GAAG;gBACrF,IAAI,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,MAAM,GAAG,KAAK,KAAK,MAAM,EAAE,SAAS,CAAC,GAAG;gBACvF,oEAAoE;gBACpE,KAAK,IAAI,SAAS,CAAC;gBACnB,KAAK,IAAI,SAAS,CAAC;YACvB;QACJ;QAEA,IAAI,qBAAqB;YACrB,GAAG,SAAS,CAAC,GAAG;YAChB,GAAG,SAAS,CAAC,GAAG;QACpB;QAEA,yFAAyF;QACzF,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;QAET,IAAI,IAAI,UAAU,EAAE;YAEhB,IAAI,CAAC,CAAA,GAAA,8JAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,UAAU,GAAG,IAAI,UAAU,GAAG,CAAC;YAEjD,IAAI,CAAC,UAAU,CAAC,YAAY,oBAAoB,CAAA,GAAA,8JAAA,CAAA,SAAM,AAAD,EAAE,CAAC,GAAG,IAAI,UAAU,EAAE;gBACvE,eAAe,uKAAA,CAAA,cAAW,CAAC,MAAM;YACrC;YAEA,0DAA0D;YAC1D,CAAA,GAAA,8JAAA,CAAA,SAAM,AAAD,EAAE,IAAI,CAAC,gBAAgB,IAAI,aAAa,IAAI,IAAI;QAEzD,OAAO;YAEH,IAAI,CAAC,UAAU,CAAC,aAAa;YAC7B,IAAI,CAAC,GAAG,CAAC,YAAY,oBAAoB;YACzC,CAAA,GAAA,8JAAA,CAAA,SAAM,AAAD,EAAE,IAAI,CAAC,gBAAgB,IAAI,aAAa,IAAI,IAAI;YACrD,IAAI,CAAC,SAAS,CAAC,aAAa;QAChC;QAEA,OAAO,IAAI;IACf;IAEA,MAAM,SAAS,KAAK,EAAE,MAAM,EAAE,GAAG;QAE7B,IAAI,cAAc,IAAI,CAAC,GAAG,CAAC;QAC3B,SAAS;QACT,eAAe;QACf,IAAI,UAAU,WAAW;YACrB,OAAO;gBACH,OAAO,YAAY,KAAK;gBACxB,QAAQ,YAAY,MAAM;YAC9B;QACJ;QACA,SAAS;QACT,wBAAwB;QACxB,IAAI,CAAA,GAAA,8JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ;YACjB,MAAM;YACN,SAAS,CAAA,GAAA,8JAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,MAAM,IAAI,MAAM,MAAM,GAAG,YAAY,MAAM;YACnE,QAAQ,CAAA,GAAA,8JAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,KAAK,IAAI,MAAM,KAAK,GAAG,YAAY,KAAK;QACnE;QAEA,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,QAAQ;IACtC;IAEA,QAAQ,SAAS,KAAK,EAAE,MAAM,EAAE,GAAG;QAE/B,MAAM,OAAO,CAAC;QAEd,IAAI,CAAC,UAAU,CAAC,UAAU;QAE1B,IAAI,IAAI,SAAS,EAAE;YAEf,IAAI,cAAc,IAAI,CAAC,GAAG,CAAC;YAE3B,OAAQ,IAAI,SAAS;gBAEjB,KAAK;gBACL,KAAK;oBACD,kDAAkD;oBAClD,SAAS,YAAY,MAAM;oBAC3B;gBAEJ,KAAK;gBACL,KAAK;oBACD,+CAA+C;oBAC/C,QAAQ,YAAY,KAAK;oBACzB;YACR;YAEA,+DAA+D;YAC/D,IAAI,QAAQ,CAAA,GAAA,mKAAA,CAAA,iBAAc,AAAD,EAAE,IAAI,CAAC,GAAG,CAAC,YAAY;YAEhD,yDAAyD;YACzD,IAAI,OAAO,IAAI,CAAC,OAAO;YAEvB,IAAI;YAEJ,IAAI,OAAO;gBAEP,IAAI,WAAW;oBACX,aAAa;oBACb,SAAS;oBACT,YAAY;oBACZ,OAAO;oBACP,eAAe;oBACf,QAAQ;oBACR,gBAAgB;oBAChB,UAAU;gBACd,CAAC,CAAC,IAAI,SAAS,CAAC;gBAEhB,IAAI,IAAI,QAAQ,EAAE;oBAEd,oDAAoD;oBACpD,YAAY,KAAK,KAAK,CAAC,CAAC,QAAQ,EAAE,IAAI;oBACtC,YAAY;gBAChB;gBAEA,oFAAoF;gBACpF,sBAAsB;gBACtB,IAAI,aAAa,IAAI,CAAC;oBAAC;oBAAc;oBAAU;oBAAY;iBAAS,CAAC,SAAS,CAAC;gBAE/E,kFAAkF;gBAClF,wCAAwC;gBACxC,IAAI,kBAAkB,CAAA,GAAA,qJAAA,CAAA,QAAK,AAAD,EAAE,YAAY,MAAM,CAAC,KAAK,MAAM,IAAI,CAAC;gBAE/D,iFAAiF;gBACjF,oFAAoF;gBACpF,4FAA4F;gBAC5F,uFAAuF;gBACvF,uCAAuC;gBACvC,wFAAwF;gBACxF,IAAI,SAAS,KAAK,IAAI,CAAC,AAAC,QAAQ,QAAU,SAAS,UAAW;gBAE9D,+FAA+F;gBAC/F,uEAAuE;gBAEvE,mFAAmF;gBACnF,4FAA4F;gBAC5F,EAAE;gBACF,QAAQ;gBACR,2DAA2D;gBAC3D,QAAQ;gBACR,EAAE;gBACF,IAAI,QAAQ,WAAW,KAAK,EAAE,GAAG;gBAEjC,kGAAkG;gBAClG,0GAA0G;gBAC1G,2EAA2E;gBAC3E,SAAS,KAAK,IAAI,CAAC,WAAW,KAAK,IAAI,SAAS,QAAQ,QAAQ;gBAEhE,wFAAwF;gBACxF,SAAS,CAAA,GAAA,mKAAA,CAAA,QAAK,AAAD,EAAE;gBAEf,6FAA6F;gBAC7F,+DAA+D;gBAC/D,IAAI,SAAS,qJAAA,CAAA,QAAK,CAAC,SAAS,CAAC,QAAQ,OAAO;gBAE5C,mFAAmF;gBACnF,qFAAqF;gBACrF,uBAAuB;gBACvB,SAAS,CAAA,GAAA,qJAAA,CAAA,QAAK,AAAD,EAAE,QAAQ,MAAM,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC;YAExD,OAAO;gBACH,4EAA4E;gBAC5E,SAAS,KAAK,OAAO;gBAErB,OAAQ,IAAI,SAAS;oBACjB,KAAK;oBACL,KAAK;wBACD,OAAO,MAAM,CAAC,GAAG,KAAK,MAAM,GAAG;wBAC/B;oBACJ,KAAK;oBACL,KAAK;wBACD,OAAO,MAAM,CAAC,KAAK,KAAK,GAAE,OAAO;wBACjC;oBACJ,KAAK;wBACD,OAAO,MAAM,CAAC,KAAK,KAAK,GAAG,OAAO,KAAK,MAAM,GAAG;wBAChD;gBACR;YACJ;YAEA,iDAAiD;YACjD,IAAI,CAAC,GAAG,CAAC,QAAQ;gBAAE,OAAO;gBAAO,QAAQ;YAAO,GAAG;YAEnD,oCAAoC;YACpC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,EAAE;QAEtC,OAAO;YAEH,sBAAsB;YACtB,IAAI,CAAC,GAAG,CAAC,QAAQ;gBAAE,OAAO;gBAAO,QAAQ;YAAO,GAAG;QACvD;QAEA,IAAI,CAAC,SAAS,CAAC,UAAU;QAEzB,OAAO,IAAI;IACf;IAEA,OAAO,SAAS,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG;QAE/B,IAAI,aAAa,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,IAAI;QAC9C,IAAI,CAAC,UAAU,CAAC,SAAS;QACzB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,EAAE;QAC1C,IAAI,CAAC,MAAM,CAAC,WAAW,KAAK,EAAE,WAAW,MAAM,EAAE;QACjD,IAAI,CAAC,SAAS,CAAC;QACf,OAAO,IAAI;IACf;IAEA,WAAW,SAAS,GAAG;QAEnB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC9B;IAEA,eAAe,SAAS,MAAM,CAAC,CAAC;QAE5B,oEAAoE;QACpE,sDAAsD;QACtD,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI;QACtB,IAAI,CAAC,OAAO,MAAM,IAAI,MAAM;QAE5B,MAAM,gBAAgB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,CAAA,OAAQ,KAAK,SAAS;QAC3E,IAAI,cAAc,MAAM,KAAK,GAAG,OAAO,IAAI;QAE3C,IAAI,CAAC,UAAU,CAAC,cAAc;QAE9B,IAAI,IAAI,IAAI,EAAE;YACV,oDAAoD;YACpD,wGAAwG;YACxG,uHAAuH;YACvH,CAAA,GAAA,8JAAA,CAAA,SAAM,AAAD,EAAE,eAAe,iBAAiB;QAC3C;QAEA,uDAAuD;QACvD,oCAAoC;QACpC,oCAAoC;QACpC,IAAI,CAAC,cAAc,CAAC,OAAO,MAAM,CAAC;YAAE,UAAU;QAAc,GAAG;QAE/D,IAAI,CAAC,SAAS,CAAC;QAEf,OAAO,IAAI;IACf;IAEA,WAAW,SAAS,MAAM,CAAC,CAAC;QAExB,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI;QACtB,IAAI,CAAC,OAAO,MAAM,IAAI,MAAM;QAE5B,sFAAsF;QACtF,kIAAkI;QAClI,IAAI,IAAI,IAAI,IAAI,IAAI,UAAU,IAAI,CAAC,AAAC,IAAI,UAAU,KAAK,IAAI,IAAM,IAAI,UAAU,KAAK,IAAI,CAAC,EAAE,AAAC,GAAG,OAAO,IAAI;QAE1G,MAAM,gBAAgB,IAAI,CAAC,aAAa;QACxC,IAAI,CAAC,iBAAiB,CAAC,cAAc,SAAS,IAAI,OAAO,IAAI;QAE7D,iFAAiF;QACjF,MAAM,kBAAkB,cAAc,gBAAgB,GAAG,MAAM,CAAC,CAAA,OAAQ,KAAK,SAAS;QACtF,IAAI,gBAAgB,MAAM,KAAK,GAAG,OAAO,IAAI;QAE7C,IAAI,CAAC,UAAU,CAAC,cAAc;QAE9B,yDAAyD;QACzD,iGAAiG;QACjG,oCAAoC;QACpC,cAAc,cAAc,CAAC,OAAO,MAAM,CAAC;YAAE,UAAU;QAAgB,GAAG;QAE1E,IAAI,IAAI,IAAI,EAAE;YACV,4EAA4E;YAC5E,iGAAiG;YACjG,uHAAuH;YACvH,cAAc,SAAS,CAAC;QAC5B;QAEA,IAAI,CAAC,SAAS,CAAC;QAEf,OAAO,IAAI;IACf;IAEA,+CAA+C;IAC/C,gBAAgB,SAAS,MAAM,CAAC,CAAC;QAE7B,MAAM,eAAe,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,QAAQ;QACzD,kDAAkD;QAClD,IAAI,CAAC,cAAc;QAEnB,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG;QACnC,+CAA+C;QAC/C,IAAI,cAAc,YAAY;QAE9B,4DAA4D;QAC5D,sCAAsC;QACtC,yEAAyE;QACzE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG;QAC9B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,uKAAA,CAAA,iBAAc,AAAD,EAAE,IAAI,OAAO;QAC/D,KAAK;QACL,KAAK;QACL,SAAS,OAAO;QAChB,UAAU,SAAS;QACnB,IAAI,aAAa,IAAI,oJAAA,CAAA,OAAI,CAAC,GAAG,GAAG,OAAO;QAEvC,IAAI,YAAY;YACZ,qHAAqH;YACrH,aAAa,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAEtC,OAAO,IAAI,YAAY;YACnB,4HAA4H;YAC5H,MAAM,mBAAmB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YAClD,gIAAgI;YAChI,IAAI,CAAC,kBAAkB;YAEvB,aAAc;QAClB;QAEA,iDAAiD;QACjD,IAAI,CAAC,GAAG,CAAC;YACL,UAAU;gBAAE,GAAG,WAAW,CAAC;gBAAE,GAAG,WAAW,CAAC;YAAC;YAC7C,MAAM;gBAAE,OAAO,WAAW,KAAK;gBAAE,QAAQ,WAAW,MAAM;YAAC;QAC/D,GAAG;IACP;IAEA,uEAAuE;IACvE,iFAAiF;IACjF,iFAAiF;IACjF,0CAA0C;IAC1C,QAAQ,SAAS,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG;QAEzC,IAAI,QAAQ;YAER,IAAI,SAAS,IAAI,CAAC,OAAO,GAAG,MAAM;YAClC,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC;YACpB,IAAI,WAAW,IAAI,CAAC,GAAG,CAAC;YACxB,OAAO,MAAM,CAAC,QAAQ,IAAI,CAAC,GAAG,CAAC,WAAW;YAC1C,IAAI,KAAK,OAAO,CAAC,GAAG,KAAK,KAAK,GAAG,IAAI,SAAS,CAAC;YAC/C,IAAI,KAAK,OAAO,CAAC,GAAG,KAAK,MAAM,GAAG,IAAI,SAAS,CAAC;YAChD,IAAI,CAAC,UAAU,CAAC,UAAU;gBAAE,OAAO;gBAAO,UAAU;gBAAU,QAAQ;YAAO;YAC7E,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI;YAChD,IAAI,CAAC,MAAM,CAAC,OAAO,UAAU,MAAM;YACnC,IAAI,CAAC,SAAS,CAAC;QAEnB,OAAO;YAEH,IAAI,CAAC,GAAG,CAAC,SAAS,WAAW,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,KAAK,IAAI,KAAK;QAC5E;QAEA,OAAO,IAAI;IACf;IAEA,OAAO;QACH,OAAO,CAAA,GAAA,mKAAA,CAAA,iBAAc,AAAD,EAAE,IAAI,CAAC,GAAG,CAAC,YAAY;IAC/C;IAEA,SAAS,SAAS,MAAM,CAAC,CAAC;QAEtB,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,IAAI;QAClC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG;QAEzB,IAAI,QAAQ,OAAO;YACf,+DAA+D;YAC/D,MAAM,WAAW,IAAI,CAAC,gBAAgB,CAAC;gBAAE,MAAM;gBAAM,cAAc;YAAK;YACxE,wBAAwB;YACxB,SAAS,IAAI,CAAC,IAAI;YAClB,kEAAkE;YAClE,oCAAoC;YACpC,OAAO,MAAM,YAAY,CAAC,UAAU;QACxC;QAEA,MAAM,EAAE,QAAQ,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,EAAC,GAAG;QAClE,MAAM,OAAO,IAAI,oJAAA,CAAA,OAAI,CAAC,GAAG,GAAG,OAAO;QACnC,IAAI,QAAQ;YACR,KAAK,kBAAkB,CAAC;QAC5B;QACA,OAAO;IACX;IAEA,2BAA2B,SAAS,IAAI,EAAE,OAAO;QAC7C,sBAAsB;QACtB,IAAI,OAAO,IAAI,CAAC,OAAO;QACvB,IAAI,SAAS,KAAK,MAAM;QACxB,mBAAmB;QACnB,IAAI,SAAS,KAAK,GAAG,CAAC;QACtB,IAAI,CAAC,QAAQ,OAAO;QACpB,IAAI,SAAS,OAAO,IAAI;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,OAAO;QAC7C,IAAI,YAAY,IAAI,CAAC,QAAQ,CAAC,QAAQ;YAAC;SAAQ;QAC/C,IAAI,iBAAiB,IAAI,CAAC,iBAAiB,CAAC;QAC5C,IAAI,aAAa,IAAI,qJAAA,CAAA,QAAK,CAAC,cAAc,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,MAAM;QACrE,IAAI,QAAQ,IAAI,CAAC,KAAK;QACtB,IAAI,OAAO,WAAW,MAAM,CAAC,QAAQ,CAAC;QACtC,OAAO;IACX;AACJ;AAEA,CAAA,GAAA,8JAAA,CAAA,SAAM,AAAD,EAAE,QAAQ,SAAS,EAAE,uJAAA,CAAA,uBAAoB","ignoreList":[0]}},
    {"offset": {"line": 5464, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5470, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/ElementView.mjs"],"sourcesContent":["import { assign, isFunction, toArray } from '../util/index.mjs';\nimport { CellView } from './CellView.mjs';\nimport { Cell } from './Cell.mjs';\nimport V from '../V/index.mjs';\nimport { elementViewPortPrototype } from './ports.mjs';\nimport { Rect, snapToGrid } from '../g/index.mjs';\n\nconst Flags = {\n    TOOLS: CellView.Flags.TOOLS,\n    UPDATE: 'UPDATE',\n    TRANSLATE: 'TRANSLATE',\n    RESIZE: 'RESIZE',\n    PORTS: 'PORTS',\n    ROTATE: 'ROTATE',\n    RENDER: 'RENDER'\n};\n\nconst DragActions = {\n    MOVE: 'move',\n    MAGNET: 'magnet',\n};\n// Element base view and controller.\n// -------------------------------------------\n\nexport const ElementView = CellView.extend({\n\n    /**\n     * @abstract\n     */\n    _removePorts: function() {\n        // implemented in ports.js\n    },\n\n    /**\n     *\n     * @abstract\n     */\n    _renderPorts: function() {\n        // implemented in ports.js\n    },\n\n    className: function() {\n\n        var classNames = CellView.prototype.className.apply(this).split(' ');\n\n        classNames.push('element');\n\n        return classNames.join(' ');\n    },\n\n    initialize: function() {\n\n        CellView.prototype.initialize.apply(this, arguments);\n\n        this._initializePorts();\n    },\n\n    presentationAttributes: {\n        'attrs': [Flags.UPDATE],\n        'position': [Flags.TRANSLATE, Flags.TOOLS],\n        'size': [Flags.RESIZE, Flags.PORTS, Flags.TOOLS],\n        'angle': [Flags.ROTATE, Flags.TOOLS],\n        'markup': [Flags.RENDER],\n        'ports': [Flags.PORTS],\n    },\n\n    initFlag: [Flags.RENDER],\n\n    UPDATE_PRIORITY: 0,\n\n    confirmUpdate: function(flag, opt) {\n\n        const { useCSSSelectors } = this;\n        if (this.hasFlag(flag, Flags.PORTS)) {\n            this._removePorts();\n            this._cleanPortsCache();\n        }\n        let transformHighlighters = false;\n        if (this.hasFlag(flag, Flags.RENDER)) {\n            this.render();\n            this.updateTools(opt);\n            this.updateHighlighters(true);\n            transformHighlighters = true;\n            flag = this.removeFlag(flag, [Flags.RENDER, Flags.UPDATE, Flags.RESIZE, Flags.TRANSLATE, Flags.ROTATE, Flags.PORTS, Flags.TOOLS]);\n        } else {\n            let updateHighlighters = false;\n\n            // Skip this branch if render is required\n            if (this.hasFlag(flag, Flags.RESIZE)) {\n                this.resize(opt);\n                updateHighlighters = true;\n                // Resize method is calling `update()` internally\n                flag = this.removeFlag(flag, [Flags.RESIZE, Flags.UPDATE]);\n                if (useCSSSelectors) {\n                    // `resize()` rendered the ports when useCSSSelectors are enabled\n                    flag = this.removeFlag(flag, Flags.PORTS);\n                }\n            }\n            if (this.hasFlag(flag, Flags.UPDATE)) {\n                this.update(this.model, null, opt);\n                flag = this.removeFlag(flag, Flags.UPDATE);\n                updateHighlighters = true;\n                if (useCSSSelectors) {\n                    // `update()` will render ports when useCSSSelectors are enabled\n                    flag = this.removeFlag(flag, Flags.PORTS);\n                }\n            }\n            if (this.hasFlag(flag, Flags.TRANSLATE)) {\n                this.translate();\n                flag = this.removeFlag(flag, Flags.TRANSLATE);\n                transformHighlighters = true;\n            }\n            if (this.hasFlag(flag, Flags.ROTATE)) {\n                this.rotate();\n                flag = this.removeFlag(flag, Flags.ROTATE);\n                transformHighlighters = true;\n            }\n            if (this.hasFlag(flag, Flags.PORTS)) {\n                this._renderPorts();\n                updateHighlighters = true;\n                flag = this.removeFlag(flag, Flags.PORTS);\n            }\n\n            if (updateHighlighters) {\n                this.updateHighlighters(false);\n            }\n        }\n\n        if (transformHighlighters) {\n            this.transformHighlighters();\n        }\n\n        if (this.hasFlag(flag, Flags.TOOLS)) {\n            this.updateTools(opt);\n            flag = this.removeFlag(flag, Flags.TOOLS);\n        }\n\n        return flag;\n    },\n\n    /**\n     * @abstract\n     */\n    _initializePorts: function() {\n        // implemented in ports.js\n    },\n\n    update: function(_, renderingOnlyAttrs) {\n\n        this.cleanNodesCache();\n\n        // When CSS selector strings are used, make sure no rule matches port nodes.\n        const { useCSSSelectors } = this;\n        if (useCSSSelectors) this._removePorts();\n\n        var model = this.model;\n        var modelAttrs = model.attr();\n        this.updateDOMSubtreeAttributes(this.el, modelAttrs, {\n            rootBBox: new Rect(model.size()),\n            selectors: this.selectors,\n            scalableNode: this.scalableNode,\n            rotatableNode: this.rotatableNode,\n            // Use rendering only attributes if they differs from the model attributes\n            roAttributes: (renderingOnlyAttrs === modelAttrs) ? null : renderingOnlyAttrs\n        });\n\n        if (useCSSSelectors) {\n            this._renderPorts();\n        }\n    },\n\n    rotatableSelector: 'rotatable',\n    scalableSelector: 'scalable',\n    scalableNode: null,\n    rotatableNode: null,\n\n    // `prototype.markup` is rendered by default. Set the `markup` attribute on the model if the\n    // default markup is not desirable.\n    renderMarkup: function() {\n\n        var element = this.model;\n        var markup = element.get('markup') || element.markup;\n        if (!markup) throw new Error('dia.ElementView: markup required');\n        if (Array.isArray(markup)) return this.renderJSONMarkup(markup);\n        if (typeof markup === 'string') return this.renderStringMarkup(markup);\n        throw new Error('dia.ElementView: invalid markup');\n    },\n\n    renderJSONMarkup: function(markup) {\n\n        var doc = this.parseDOMJSON(markup, this.el);\n        var selectors = this.selectors = doc.selectors;\n        this.rotatableNode = V(selectors[this.rotatableSelector]) || null;\n        this.scalableNode = V(selectors[this.scalableSelector]) || null;\n        // Fragment\n        this.vel.append(doc.fragment);\n    },\n\n    renderStringMarkup: function(markup) {\n\n        var vel = this.vel;\n        vel.append(V(markup));\n        // Cache transformation groups\n        this.rotatableNode = vel.findOne('.rotatable');\n        this.scalableNode = vel.findOne('.scalable');\n\n        var selectors = this.selectors = {};\n        selectors[this.selector] = this.el;\n    },\n\n    render: function() {\n\n        this.vel.empty();\n        this.renderMarkup();\n        if (this.scalableNode) {\n            // Double update is necessary for elements with the scalable group only\n            // Note the resize() triggers the other `update`.\n            this.update();\n        }\n        this.resize();\n        if (this.rotatableNode) {\n            // Translate transformation is applied on `this.el` while the rotation transformation\n            // on `this.rotatableNode`\n            this.rotate();\n            this.translate();\n        } else {\n            this.updateTransformation();\n        }\n        if (!this.useCSSSelectors) this._renderPorts();\n        return this;\n    },\n\n    resize: function(opt) {\n\n        if (this.scalableNode) return this.sgResize(opt);\n        if (this.model.attributes.angle) this.rotate();\n        this.update();\n    },\n\n    translate: function() {\n\n        if (this.rotatableNode) return this.rgTranslate();\n        this.updateTransformation();\n    },\n\n    rotate: function() {\n\n        if (this.rotatableNode) {\n            this.rgRotate();\n            // It's necessary to call the update for the nodes outside\n            // the rotatable group referencing nodes inside the group\n            this.update();\n            return;\n        }\n        this.updateTransformation();\n    },\n\n    updateTransformation: function() {\n\n        var transformation = this.getTranslateString();\n        var rotateString = this.getRotateString();\n        if (rotateString) transformation += ' ' + rotateString;\n        this.vel.attr('transform', transformation);\n    },\n\n    getTranslateString: function() {\n\n        const { x, y } = this.model.position();\n        return `translate(${x},${y})`;\n    },\n\n    getRotateString: function() {\n\n        const angle = this.model.angle();\n        if (!angle) return null;\n        const { width, height } = this.model.size();\n        return `rotate(${angle},${width / 2},${height / 2})`;\n    },\n\n    // Rotatable & Scalable Group\n    // always slower, kept mainly for backwards compatibility\n\n    rgRotate: function() {\n\n        this.rotatableNode.attr('transform', this.getRotateString());\n    },\n\n    rgTranslate: function() {\n\n        this.vel.attr('transform', this.getTranslateString());\n    },\n\n    sgResize: function(opt) {\n\n        var model = this.model;\n        var angle = model.angle();\n        var size = model.size();\n        var scalable = this.scalableNode;\n\n        // Getting scalable group's bbox.\n        // Due to a bug in webkit's native SVG .getBBox implementation, the bbox of groups with path children includes the paths' control points.\n        // To work around the issue, we need to check whether there are any path elements inside the scalable group.\n        var recursive = false;\n        if (scalable.node.getElementsByTagName('path').length > 0) {\n            // If scalable has at least one descendant that is a path, we need to switch to recursive bbox calculation.\n            // If there are no path descendants, group bbox calculation works and so we can use the (faster) native function directly.\n            recursive = true;\n        }\n        var scalableBBox = scalable.getBBox({ recursive: recursive });\n\n        // Make sure `scalableBbox.width` and `scalableBbox.height` are not zero which can happen if the element does not have any content. By making\n        // the width/height 1, we prevent HTML errors of the type `scale(Infinity, Infinity)`.\n        var sx = (size.width / (scalableBBox.width || 1));\n        var sy = (size.height / (scalableBBox.height || 1));\n        scalable.attr('transform', 'scale(' + sx + ',' + sy + ')');\n\n        // Now the interesting part. The goal is to be able to store the object geometry via just `x`, `y`, `angle`, `width` and `height`\n        // Order of transformations is significant but we want to reconstruct the object always in the order:\n        // resize(), rotate(), translate() no matter of how the object was transformed. For that to work,\n        // we must adjust the `x` and `y` coordinates of the object whenever we resize it (because the origin of the\n        // rotation changes). The new `x` and `y` coordinates are computed by canceling the previous rotation\n        // around the center of the resized object (which is a different origin then the origin of the previous rotation)\n        // and getting the top-left corner of the resulting object. Then we clean up the rotation back to what it originally was.\n\n        // Cancel the rotation but now around a different origin, which is the center of the scaled object.\n        var rotatable = this.rotatableNode;\n        var rotation = rotatable && rotatable.attr('transform');\n        if (rotation) {\n\n            rotatable.attr('transform', rotation + ' rotate(' + (-angle) + ',' + (size.width / 2) + ',' + (size.height / 2) + ')');\n            var rotatableBBox = scalable.getBBox({ target: this.paper.cells });\n\n            // Store new x, y and perform rotate() again against the new rotation origin.\n            model.set('position', { x: rotatableBBox.x, y: rotatableBBox.y }, assign({ updateHandled: true }, opt));\n            this.translate();\n            this.rotate();\n        }\n\n        // Update must always be called on non-rotated element. Otherwise, relative positioning\n        // would work with wrong (rotated) bounding boxes.\n        this.update();\n    },\n\n    // Embedding mode methods.\n    // -----------------------\n\n    prepareEmbedding: function(data = {}) {\n\n        const element = data.model || this.model;\n        const paper = data.paper || this.paper;\n        const graph = paper.model;\n\n        const initialZIndices = data.initialZIndices = {};\n        const embeddedCells = element.getEmbeddedCells({ deep: true });\n        const connectedLinks = graph.getConnectedLinks(element, { deep: true, includeEnclosed: true });\n\n        // Note: an embedded cell can be a connect link, but it's fine\n        // to iterate over the cell twice.\n        [\n            element,\n            ...embeddedCells,\n            ...connectedLinks\n        ].forEach(cell => initialZIndices[cell.id] = cell.attributes.z);\n\n        element.startBatch('to-front');\n\n        // Bring the model to the front with all his embeds.\n        element.toFront({ deep: true, ui: true });\n\n        // Note that at this point cells in the collection are not sorted by z index (it's running in the batch, see\n        // the dia.Graph._sortOnChangeZ), so we can't assume that the last cell in the collection has the highest z.\n        const maxZ = graph.getElements().reduce((max, cell) => Math.max(max, cell.attributes.z || 0), 0);\n\n        // Move to front also all the inbound and outbound links that are connected\n        // to any of the element descendant. If we bring to front only embedded elements,\n        // links connected to them would stay in the background.\n        connectedLinks.forEach((link) => {\n            if (link.attributes.z <= maxZ) {\n                link.set('z', maxZ + 1, { ui: true });\n            }\n        });\n\n        element.stopBatch('to-front');\n\n        // Before we start looking for suitable parent we remove the current one.\n        const parentId = element.parent();\n        if (parentId) {\n            const parent = graph.getCell(parentId);\n            parent.unembed(element, { ui: true });\n            data.initialParentId = parentId;\n        } else {\n            data.initialParentId = null;\n        }\n    },\n\n    processEmbedding: function(data = {}, evt, x, y) {\n\n        const model = data.model || this.model;\n        const paper = data.paper || this.paper;\n        const graph = paper.model;\n        const { findParentBy, frontParentOnly, validateEmbedding } = paper.options;\n\n        let candidates;\n        if (isFunction(findParentBy)) {\n            candidates = toArray(findParentBy.call(graph, this, evt, x, y));\n        } else if (findParentBy === 'pointer') {\n            candidates = graph.findElementsAtPoint({ x, y });\n        } else {\n            candidates = graph.findElementsUnderElement(model, { searchBy: findParentBy });\n        }\n\n        candidates = candidates.filter((el) => {\n            return (el instanceof Cell) && (model.id !== el.id) && !el.isEmbeddedIn(model);\n        });\n\n        if (frontParentOnly) {\n            // pick the element with the highest `z` index\n            candidates = candidates.slice(-1);\n        }\n\n        let newCandidateView = null;\n        const prevCandidateView = data.candidateEmbedView;\n\n        // iterate over all candidates starting from the last one (has the highest z-index).\n        for (let i = candidates.length - 1; i >= 0; i--) {\n            const candidate = candidates[i];\n            if (prevCandidateView && prevCandidateView.model.id == candidate.id) {\n                // candidate remains the same\n                newCandidateView = prevCandidateView;\n                break;\n            } else {\n                const view = candidate.findView(paper);\n                if (!isFunction(validateEmbedding) || validateEmbedding.call(paper, this, view)) {\n                    // flip to the new candidate\n                    newCandidateView = view;\n                    break;\n                }\n            }\n        }\n\n        if (newCandidateView && newCandidateView != prevCandidateView) {\n            // A new candidate view found. Highlight the new one.\n            this.clearEmbedding(data);\n            data.candidateEmbedView = newCandidateView.highlight(\n                newCandidateView.findProxyNode(null, 'container'),\n                { embedding: true }\n            );\n        }\n\n        if (!newCandidateView && prevCandidateView) {\n            // No candidate view found. Unhighlight the previous candidate.\n            this.clearEmbedding(data);\n        }\n    },\n\n    clearEmbedding: function(data) {\n\n        data || (data = {});\n\n        var candidateView = data.candidateEmbedView;\n        if (candidateView) {\n            // No candidate view found. Unhighlight the previous candidate.\n            candidateView.unhighlight(\n                candidateView.findProxyNode(null, 'container'),\n                { embedding: true }\n            );\n            data.candidateEmbedView = null;\n        }\n    },\n\n    finalizeEmbedding: function(data = {}) {\n\n        const candidateView = data.candidateEmbedView;\n        const element = data.model || this.model;\n        const paper = data.paper || this.paper;\n\n        if (candidateView) {\n\n            // We finished embedding. Candidate view is chosen to become the parent of the model.\n            candidateView.model.embed(element, { ui: true });\n            candidateView.unhighlight(candidateView.findProxyNode(null, 'container'), { embedding: true });\n\n            data.candidateEmbedView = null;\n\n        } else {\n\n            const { validateUnembedding } = paper.options;\n            const { initialParentId } = data;\n            // The element was originally embedded into another element.\n            // The interaction would unembed the element. Let's validate\n            // if the element can be unembedded.\n            if (\n                initialParentId &&\n                typeof validateUnembedding === 'function' &&\n                !validateUnembedding.call(paper, this)\n            ) {\n                this._disallowUnembed(data);\n                return;\n            }\n        }\n\n        paper.model.getConnectedLinks(element, { deep: true }).forEach(link => {\n            link.reparent({ ui: true });\n        });\n    },\n\n    _disallowUnembed: function(data) {\n        const { model, whenNotAllowed = 'revert' } = data;\n        const element = model || this.model;\n        const paper = data.paper || this.paper;\n        const graph = paper.model;\n        switch (whenNotAllowed) {\n            case 'remove': {\n                element.remove({ ui: true });\n                break;\n            }\n            case 'revert': {\n                const { initialParentId, initialPosition, initialZIndices } = data;\n                // Revert the element's position (and the position of its embedded cells if any)\n                if (initialPosition) {\n                    const { x, y } = initialPosition;\n                    element.position(x, y, { deep: true, ui: true });\n                }\n                // Revert all the z-indices changed during the embedding\n                if (initialZIndices) {\n                    Object.keys(initialZIndices).forEach(id => {\n                        const cell = graph.getCell(id);\n                        if (cell) {\n                            cell.set('z', initialZIndices[id], { ui: true });\n                        }\n                    });\n                }\n                // Revert the original parent\n                const parent = graph.getCell(initialParentId);\n                if (parent) {\n                    parent.embed(element, { ui: true });\n                }\n                break;\n            }\n        }\n    },\n\n    getTargetParentView: function(evt) {\n        const { candidateEmbedView = null } = this.eventData(evt);\n        return candidateEmbedView;\n    },\n\n    getDelegatedView: function() {\n\n        var view = this;\n        var model = view.model;\n        var paper = view.paper;\n\n        while (view) {\n            if (model.isLink()) break;\n            if (!model.isEmbedded() || view.can('stopDelegation')) return view;\n            model = model.getParentCell();\n            view = paper.findViewByModel(model);\n        }\n\n        return null;\n    },\n\n    findProxyNode: function(el, type) {\n        el || (el = this.el);\n        const nodeSelector = el.getAttribute(`${type}-selector`);\n        if (nodeSelector) {\n            const port = this.findAttribute('port', el);\n            if (port) {\n                const proxyPortNode = this.findPortNode(port, nodeSelector);\n                if (proxyPortNode) return proxyPortNode;\n            } else {\n                const proxyNode = this.findNode(nodeSelector);\n                if (proxyNode) return proxyNode;\n            }\n        }\n        return el;\n    },\n\n    // Interaction. The controller part.\n    // ---------------------------------\n\n    notifyPointerdown(evt, x, y) {\n        CellView.prototype.pointerdown.call(this, evt, x, y);\n        this.notify('element:pointerdown', evt, x, y);\n    },\n\n    notifyPointermove(evt, x, y) {\n        CellView.prototype.pointermove.call(this, evt, x, y);\n        this.notify('element:pointermove', evt, x, y);\n    },\n\n    notifyPointerup(evt, x, y) {\n        this.notify('element:pointerup', evt, x, y);\n        CellView.prototype.pointerup.call(this, evt, x, y);\n    },\n\n    pointerdblclick: function(evt, x, y) {\n\n        CellView.prototype.pointerdblclick.apply(this, arguments);\n        this.notify('element:pointerdblclick', evt, x, y);\n    },\n\n    pointerclick: function(evt, x, y) {\n\n        CellView.prototype.pointerclick.apply(this, arguments);\n        this.notify('element:pointerclick', evt, x, y);\n    },\n\n    contextmenu: function(evt, x, y) {\n\n        CellView.prototype.contextmenu.apply(this, arguments);\n        this.notify('element:contextmenu', evt, x, y);\n    },\n\n    pointerdown: function(evt, x, y) {\n\n        this.notifyPointerdown(evt, x, y);\n        this.dragStart(evt, x, y);\n    },\n\n    pointermove: function(evt, x, y) {\n\n        const data = this.eventData(evt);\n        const { targetMagnet, action, delegatedView } = data;\n\n        if (targetMagnet) {\n            this.magnetpointermove(evt, targetMagnet, x, y);\n        }\n\n        switch (action) {\n            case DragActions.MAGNET:\n                this.dragMagnet(evt, x, y);\n                break;\n            case DragActions.MOVE:\n                (delegatedView || this).drag(evt, x, y);\n            // eslint: no-fallthrough=false\n            default:\n                if (data.preventPointerEvents) break;\n                this.notifyPointermove(evt, x, y);\n                break;\n        }\n\n        // Make sure the element view data is passed along.\n        // It could have been wiped out in the handlers above.\n        this.eventData(evt, data);\n    },\n\n    pointerup: function(evt, x, y) {\n\n        const data = this.eventData(evt);\n        const { targetMagnet, action, delegatedView } = data;\n\n        if (targetMagnet) {\n            this.magnetpointerup(evt, targetMagnet, x, y);\n        }\n\n        switch (action) {\n            case DragActions.MAGNET:\n                this.dragMagnetEnd(evt, x, y);\n                break;\n            case DragActions.MOVE:\n                (delegatedView || this).dragEnd(evt, x, y);\n            // eslint: no-fallthrough=false\n            default:\n                if (data.preventPointerEvents) break;\n                this.notifyPointerup(evt, x, y);\n        }\n\n        if (targetMagnet) {\n            this.magnetpointerclick(evt, targetMagnet, x, y);\n        }\n\n        this.checkMouseleave(evt);\n    },\n\n    mouseover: function(evt) {\n\n        CellView.prototype.mouseover.apply(this, arguments);\n        this.notify('element:mouseover', evt);\n    },\n\n    mouseout: function(evt) {\n\n        CellView.prototype.mouseout.apply(this, arguments);\n        this.notify('element:mouseout', evt);\n    },\n\n    mouseenter: function(evt) {\n\n        CellView.prototype.mouseenter.apply(this, arguments);\n        this.notify('element:mouseenter', evt);\n    },\n\n    mouseleave: function(evt) {\n\n        CellView.prototype.mouseleave.apply(this, arguments);\n        this.notify('element:mouseleave', evt);\n    },\n\n    mousewheel: function(evt, x, y, delta) {\n\n        CellView.prototype.mousewheel.apply(this, arguments);\n        this.notify('element:mousewheel', evt, x, y, delta);\n    },\n\n    onmagnet: function(evt, x, y) {\n\n        const { currentTarget: targetMagnet } = evt;\n        this.magnetpointerdown(evt, targetMagnet, x, y);\n        this.eventData(evt, { targetMagnet });\n        this.dragMagnetStart(evt, x, y);\n    },\n\n    magnetpointerdown: function(evt, magnet, x, y) {\n\n        this.notify('element:magnet:pointerdown', evt, magnet, x, y);\n    },\n\n    magnetpointermove: function(evt, magnet, x, y) {\n\n        this.notify('element:magnet:pointermove', evt, magnet, x, y);\n    },\n\n    magnetpointerup: function(evt, magnet, x, y) {\n\n        this.notify('element:magnet:pointerup', evt, magnet, x, y);\n    },\n\n    magnetpointerdblclick: function(evt, magnet, x, y) {\n\n        this.notify('element:magnet:pointerdblclick', evt, magnet, x, y);\n    },\n\n    magnetcontextmenu: function(evt, magnet, x, y) {\n\n        this.notify('element:magnet:contextmenu', evt, magnet, x, y);\n    },\n\n    // Drag Start Handlers\n\n    dragStart: function(evt, x, y) {\n\n        if (this.isDefaultInteractionPrevented(evt)) return;\n\n        var view = this.getDelegatedView();\n        if (!view || !view.can('elementMove')) return;\n\n        this.eventData(evt, {\n            action: DragActions.MOVE,\n            delegatedView: view\n        });\n\n        const position = view.model.position();\n        view.eventData(evt, {\n            initialPosition: position,\n            pointerOffset: position.difference(x, y),\n            restrictedArea: this.paper.getRestrictedArea(view, x, y)\n        });\n    },\n\n    dragMagnetStart: function(evt, x, y) {\n\n        const { paper } = this;\n        const isPropagationAlreadyStopped = evt.isPropagationStopped();\n        if (isPropagationAlreadyStopped) {\n            // Special case when the propagation was already stopped\n            // on the `element:magnet:pointerdown` event.\n            // Do not trigger any `element:pointer*` events\n            // but still start the magnet dragging.\n            this.eventData(evt, { preventPointerEvents: true });\n        }\n\n        if (this.isDefaultInteractionPrevented(evt) || !this.can('addLinkFromMagnet')) {\n            // Stop the default action, which is to start dragging a link.\n            return;\n        }\n\n        const { targetMagnet = evt.currentTarget } = this.eventData(evt);\n        evt.stopPropagation();\n\n        // Invalid (Passive) magnet. Start dragging the element.\n        if (!paper.options.validateMagnet.call(paper, this, targetMagnet, evt)) {\n            if (isPropagationAlreadyStopped) {\n                // Do not trigger `element:pointerdown` and start element dragging\n                // if the propagation was stopped.\n                this.dragStart(evt, x, y);\n                // The `element:pointerdown` event is not triggered because\n                // of `preventPointerEvents` flag.\n            } else {\n                // We need to reset the action\n                // to `MOVE` so that the element is dragged.\n                this.pointerdown(evt, x, y);\n            }\n            return;\n        }\n\n        // Valid magnet. Start dragging a link.\n        if (paper.options.magnetThreshold <= 0) {\n            this.dragLinkStart(evt, targetMagnet, x, y);\n        }\n        this.eventData(evt, { action: DragActions.MAGNET });\n    },\n\n    // Drag Handlers\n\n    drag: function(evt, x, y) {\n\n        var paper = this.paper;\n        var grid = paper.options.gridSize;\n        var element = this.model;\n        var data = this.eventData(evt);\n        var { pointerOffset, restrictedArea, embedding } = data;\n\n        // Make sure the new element's position always snaps to the current grid\n        var elX = snapToGrid(x + pointerOffset.x, grid);\n        var elY = snapToGrid(y + pointerOffset.y, grid);\n\n        element.position(elX, elY, { restrictedArea, deep: true, ui: true });\n\n        if (paper.options.embeddingMode) {\n            if (!embedding) {\n                // Prepare the element for embedding only if the pointer moves.\n                // We don't want to do unnecessary action with the element\n                // if an user only clicks/dblclicks on it.\n                this.prepareEmbedding(data);\n                embedding = true;\n            }\n            this.processEmbedding(data, evt, x, y);\n        }\n\n        this.eventData(evt, {\n            embedding\n        });\n    },\n\n    dragMagnet: function(evt, x, y) {\n        this.dragLink(evt, x, y);\n    },\n\n    // Drag End Handlers\n\n    dragEnd: function(evt, x, y) {\n\n        var data = this.eventData(evt);\n        if (data.embedding) this.finalizeEmbedding(data);\n    },\n\n    dragMagnetEnd: function(evt, x, y) {\n        this.dragLinkEnd(evt, x, y);\n    },\n\n    magnetpointerclick: function(evt, magnet, x, y) {\n        var paper = this.paper;\n        if (paper.eventData(evt).mousemoved > paper.options.clickThreshold) return;\n        this.notify('element:magnet:pointerclick', evt, magnet, x, y);\n    }\n\n}, {\n\n    Flags: Flags,\n});\n\nassign(ElementView.prototype, elementViewPortPrototype);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6242, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6248, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/Link.mjs"],"sourcesContent":["import { Cell } from './Cell.mjs';\nimport { clone, isPlainObject, isFunction, isString, isNumber } from '../util/index.mjs';\nimport { Point, Polyline } from '../g/index.mjs';\n\n// Link base model.\n// --------------------------\n\nexport const Link = Cell.extend({\n\n    // may be overwritten by user to change default label (its markup, size, attrs, position)\n    defaultLabel: undefined,\n\n    // deprecated\n    // may be overwritten by user to change default label markup\n    // lower priority than defaultLabel.markup\n    labelMarkup: undefined,\n\n    // private\n    _builtins: {\n        defaultLabel: {\n            // builtin default markup:\n            // used if neither defaultLabel.markup\n            // nor label.markup is set\n            markup: [\n                {\n                    tagName: 'rect',\n                    selector: 'rect' // faster than tagName CSS selector\n                }, {\n                    tagName: 'text',\n                    selector: 'text' // faster than tagName CSS selector\n                }\n            ],\n            // builtin default attributes:\n            // applied only if builtin default markup is used\n            attrs: {\n                text: {\n                    fill: '#000000',\n                    fontSize: 14,\n                    textAnchor: 'middle',\n                    textVerticalAnchor: 'middle',\n                    pointerEvents: 'none'\n                },\n                rect: {\n                    ref: 'text',\n                    fill: '#ffffff',\n                    rx: 3,\n                    ry: 3,\n                    x: 'calc(x)',\n                    y: 'calc(y)',\n                    width: 'calc(w)',\n                    height: 'calc(h)'\n                }\n            },\n            // builtin default position:\n            // used if neither defaultLabel.position\n            // nor label.position is set\n            position: {\n                distance: 0.5\n            }\n        }\n    },\n\n    defaults: {\n        source: {},\n        target: {}\n    },\n\n    isLink: function() {\n\n        return true;\n    },\n\n    disconnect: function(opt) {\n\n        return this.set({\n            source: { x: 0, y: 0 },\n            target: { x: 0, y: 0 }\n        }, opt);\n    },\n\n    source: function(source, args, opt) {\n\n        // getter\n        if (source === undefined) {\n            return clone(this.get('source'));\n        }\n\n        // setter\n        var setSource;\n        var setOpt;\n\n        // `source` is a cell\n        // take only its `id` and combine with `args`\n        var isCellProvided = source instanceof Cell;\n        if (isCellProvided) { // three arguments\n            setSource = clone(args) || {};\n            setSource.id = source.id;\n            setOpt = opt;\n            return this.set('source', setSource, setOpt);\n        }\n\n        // `source` is a point-like object\n        // for example, a g.Point\n        // take only its `x` and `y` and combine with `args`\n        var isPointProvided = !isPlainObject(source);\n        if (isPointProvided) { // three arguments\n            setSource = clone(args) || {};\n            setSource.x = source.x;\n            setSource.y = source.y;\n            setOpt = opt;\n            return this.set('source', setSource, setOpt);\n        }\n\n        // `source` is an object\n        // no checking\n        // two arguments\n        setSource = source;\n        setOpt = args;\n        return this.set('source', setSource, setOpt);\n    },\n\n    target: function(target, args, opt) {\n\n        // getter\n        if (target === undefined) {\n            return clone(this.get('target'));\n        }\n\n        // setter\n        var setTarget;\n        var setOpt;\n\n        // `target` is a cell\n        // take only its `id` argument and combine with `args`\n        var isCellProvided = target instanceof Cell;\n        if (isCellProvided) { // three arguments\n            setTarget = clone(args) || {};\n            setTarget.id = target.id;\n            setOpt = opt;\n            return this.set('target', setTarget, setOpt);\n        }\n\n        // `target` is a point-like object\n        // for example, a g.Point\n        // take only its `x` and `y` and combine with `args`\n        var isPointProvided = !isPlainObject(target);\n        if (isPointProvided) { // three arguments\n            setTarget = clone(args) || {};\n            setTarget.x = target.x;\n            setTarget.y = target.y;\n            setOpt = opt;\n            return this.set('target', setTarget, setOpt);\n        }\n\n        // `target` is an object\n        // no checking\n        // two arguments\n        setTarget = target;\n        setOpt = args;\n        return this.set('target', setTarget, setOpt);\n    },\n\n    router: function(name, args, opt) {\n\n        // getter\n        if (name === undefined) {\n            var router = this.get('router');\n            if (!router) {\n                return null;\n            }\n            if (typeof router === 'object') return clone(router);\n            return router; // e.g. a function\n        }\n\n        // setter\n        var isRouterProvided = ((typeof name === 'object') || (typeof name === 'function'));\n        var localRouter = isRouterProvided ? name : { name: name, args: args };\n        var localOpt = isRouterProvided ? args : opt;\n\n        return this.set('router', localRouter, localOpt);\n    },\n\n    connector: function(name, args, opt) {\n\n        // getter\n        if (name === undefined) {\n            var connector = this.get('connector');\n            if (!connector) {\n                return null;\n            }\n            if (typeof connector === 'object') return clone(connector);\n            return connector; // e.g. a function\n        }\n\n        // setter\n        var isConnectorProvided = ((typeof name === 'object' || typeof name === 'function'));\n        var localConnector = isConnectorProvided ? name : { name: name, args: args };\n        var localOpt = isConnectorProvided ? args : opt;\n\n        return this.set('connector', localConnector, localOpt);\n    },\n\n    // Labels API\n\n    // A convenient way to set labels. Currently set values will be mixined with `value` if used as a setter.\n    label: function(idx, label, opt) {\n\n        var labels = this.labels();\n\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : 0;\n        if (idx < 0) idx = labels.length + idx;\n\n        // getter\n        if (arguments.length <= 1) return this.prop(['labels', idx]);\n        // setter\n        return this.prop(['labels', idx], label, opt);\n    },\n\n    labels: function(labels, opt) {\n\n        // getter\n        if (arguments.length === 0) {\n            labels = this.get('labels');\n            if (!Array.isArray(labels)) return [];\n            return labels.slice();\n        }\n        // setter\n        if (!Array.isArray(labels)) labels = [];\n        return this.set('labels', labels, opt);\n    },\n\n    hasLabels: function() {\n        const { labels } = this.attributes;\n        return Array.isArray(labels) && labels.length > 0;\n    },\n\n    insertLabel: function(idx, label, opt) {\n\n        if (!label) throw new Error('dia.Link: no label provided');\n\n        var labels = this.labels();\n        var n = labels.length;\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : n;\n        if (idx < 0) idx = n + idx + 1;\n\n        labels.splice(idx, 0, label);\n        return this.labels(labels, opt);\n    },\n\n    // convenience function\n    // add label to end of labels array\n    appendLabel: function(label, opt) {\n\n        return this.insertLabel(-1, label, opt);\n    },\n\n    removeLabel: function(idx, opt) {\n\n        var labels = this.labels();\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : -1;\n\n        labels.splice(idx, 1);\n        return this.labels(labels, opt);\n    },\n\n    // Vertices API\n\n    vertex: function(idx, vertex, opt) {\n\n        var vertices = this.vertices();\n\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : 0;\n        if (idx < 0) idx = vertices.length + idx;\n\n        // getter\n        if (arguments.length <= 1) return this.prop(['vertices', idx]);\n\n        // setter\n        var setVertex = this._normalizeVertex(vertex);\n        return this.prop(['vertices', idx], setVertex, opt);\n    },\n\n    vertices: function(vertices, opt) {\n\n        // getter\n        if (arguments.length === 0) {\n            vertices = this.get('vertices');\n            if (!Array.isArray(vertices)) return [];\n            return vertices.slice();\n        }\n\n        // setter\n        if (!Array.isArray(vertices)) vertices = [];\n        var setVertices = [];\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            var setVertex = this._normalizeVertex(vertex);\n            setVertices.push(setVertex);\n        }\n        return this.set('vertices', setVertices, opt);\n    },\n\n    insertVertex: function(idx, vertex, opt) {\n\n        if (!vertex) throw new Error('dia.Link: no vertex provided');\n\n        var vertices = this.vertices();\n        var n = vertices.length;\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : n;\n        if (idx < 0) idx = n + idx + 1;\n\n        var setVertex = this._normalizeVertex(vertex);\n        vertices.splice(idx, 0, setVertex);\n        return this.vertices(vertices, opt);\n    },\n\n    removeVertex: function(idx, opt) {\n\n        var vertices = this.vertices();\n        idx = (isFinite(idx) && idx !== null) ? (idx | 0) : -1;\n\n        vertices.splice(idx, 1);\n        return this.vertices(vertices, opt);\n    },\n\n    _normalizeVertex: function(vertex) {\n\n        // is vertex a point-like object?\n        // for example, a g.Point\n        var isPointProvided = !isPlainObject(vertex);\n        if (isPointProvided) return { x: vertex.x, y: vertex.y };\n\n        // else: return vertex unchanged\n        return vertex;\n    },\n\n    // Transformations\n\n    translate: function(tx, ty, opt) {\n\n        // enrich the option object\n        opt = opt || {};\n        opt.translateBy = opt.translateBy || this.id;\n        opt.tx = tx;\n        opt.ty = ty;\n\n        return this.applyToPoints(function(p) {\n            return { x: (p.x || 0) + tx, y: (p.y || 0) + ty };\n        }, opt);\n    },\n\n    scale: function(sx, sy, origin, opt) {\n\n        return this.applyToPoints(function(p) {\n            return Point(p).scale(sx, sy, origin).toJSON();\n        }, opt);\n    },\n\n    applyToPoints: function(fn, opt) {\n\n        if (!isFunction(fn)) {\n            throw new TypeError('dia.Link: applyToPoints expects its first parameter to be a function.');\n        }\n\n        var attrs = {};\n\n        var { source, target } = this.attributes;\n        if (!source.id) {\n            attrs.source = fn(source);\n        }\n        if (!target.id) {\n            attrs.target = fn(target);\n        }\n\n        var vertices = this.vertices();\n        if (vertices.length > 0) {\n            attrs.vertices = vertices.map(fn);\n        }\n\n        return this.set(attrs, opt);\n    },\n\n    getSourcePoint: function() {\n        var sourceCell = this.getSourceCell();\n        if (!sourceCell) return new Point(this.source());\n        return sourceCell.getPointFromConnectedLink(this, 'source');\n    },\n\n    getTargetPoint: function() {\n        var targetCell = this.getTargetCell();\n        if (!targetCell) return new Point(this.target());\n        return targetCell.getPointFromConnectedLink(this, 'target');\n    },\n\n    getPointFromConnectedLink: function(/* link, endType */) {\n        return this.getPolyline().pointAt(0.5);\n    },\n\n    getPolyline: function() {\n        const points = [\n            this.getSourcePoint(),\n            ...this.vertices().map(Point),\n            this.getTargetPoint()\n        ];\n        return new Polyline(points);\n    },\n\n    getBBox: function() {\n        return this.getPolyline().bbox();\n    },\n\n    reparent: function(opt) {\n\n        var newParent;\n\n        if (this.graph) {\n\n            var source = this.getSourceElement();\n            var target = this.getTargetElement();\n            var prevParent = this.getParentCell();\n\n            if (source && target) {\n                if (source === target || source.isEmbeddedIn(target)) {\n                    newParent = target;\n                } else if (target.isEmbeddedIn(source)) {\n                    newParent = source;\n                } else {\n                    newParent = this.graph.getCommonAncestor(source, target);\n                }\n            }\n\n            if (prevParent && (!newParent || newParent.id !== prevParent.id)) {\n                // Unembed the link if source and target has no common ancestor\n                // or common ancestor changed\n                prevParent.unembed(this, opt);\n            }\n\n            if (newParent) {\n                newParent.embed(this, opt);\n            }\n        }\n\n        return newParent;\n    },\n\n    hasLoop: function(opt) {\n\n        opt = opt || {};\n\n        var { source, target } = this.attributes;\n        var sourceId = source.id;\n        var targetId = target.id;\n\n        if (!sourceId || !targetId) {\n            // Link \"pinned\" to the paper does not have a loop.\n            return false;\n        }\n\n        var loop = sourceId === targetId;\n\n        // Note that there in the deep mode a link can have a loop,\n        // even if it connects only a parent and its embed.\n        // A loop \"target equals source\" is valid in both shallow and deep mode.\n        if (!loop && opt.deep && this.graph) {\n\n            var sourceElement = this.getSourceCell();\n            var targetElement = this.getTargetCell();\n\n            loop = sourceElement.isEmbeddedIn(targetElement) || targetElement.isEmbeddedIn(sourceElement);\n        }\n\n        return loop;\n    },\n\n    // unlike source(), this method returns null if source is a point\n    getSourceCell: function() {\n\n        const { graph, attributes } = this;\n        var source = attributes.source;\n        return (source && source.id && graph && graph.getCell(source.id)) || null;\n    },\n\n    getSourceElement: function() {\n        var cell = this;\n        var visited = {};\n        do {\n            if (visited[cell.id]) return null;\n            visited[cell.id] = true;\n            cell = cell.getSourceCell();\n        } while (cell && cell.isLink());\n        return cell;\n    },\n\n    // unlike target(), this method returns null if target is a point\n    getTargetCell: function() {\n\n        const { graph, attributes } = this;\n        var target = attributes.target;\n        return (target && target.id && graph && graph.getCell(target.id)) || null;\n    },\n\n    getTargetElement: function() {\n        var cell = this;\n        var visited = {};\n        do {\n            if (visited[cell.id]) return null;\n            visited[cell.id] = true;\n            cell = cell.getTargetCell();\n        } while (cell && cell.isLink());\n        return cell;\n    },\n\n    // Returns the common ancestor for the source element,\n    // target element and the link itself.\n    getRelationshipAncestor: function() {\n\n        var connectionAncestor;\n\n        if (this.graph) {\n\n            var cells = [\n                this,\n                this.getSourceElement(), // null if source is a point\n                this.getTargetElement() // null if target is a point\n            ].filter(function(item) {\n                return !!item;\n            });\n\n            connectionAncestor = this.graph.getCommonAncestor.apply(this.graph, cells);\n        }\n\n        return connectionAncestor || null;\n    },\n\n    // Is source, target and the link itself embedded in a given cell?\n    isRelationshipEmbeddedIn: function(cell) {\n\n        var cellId = (isString(cell) || isNumber(cell)) ? cell : cell.id;\n        var ancestor = this.getRelationshipAncestor();\n\n        return !!ancestor && (ancestor.id === cellId || ancestor.isEmbeddedIn(cellId));\n    },\n\n    // Get resolved default label.\n    _getDefaultLabel: function() {\n\n        var defaultLabel = this.get('defaultLabel') || this.defaultLabel || {};\n\n        var label = {};\n        label.markup = defaultLabel.markup || this.get('labelMarkup') || this.labelMarkup;\n        label.position = defaultLabel.position;\n        label.attrs = defaultLabel.attrs;\n        label.size = defaultLabel.size;\n\n        return label;\n    }\n}, {\n\n    endsEqual: function(a, b) {\n\n        var portsEqual = a.port === b.port || !a.port && !b.port;\n        return a.id === b.id && portsEqual;\n    }\n});\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6727, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6733, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/LinkView.mjs"],"sourcesContent":["import { CellView } from './CellView.mjs';\nimport { Link } from './Link.mjs';\nimport V from '../V/index.mjs';\nimport { addClassNamePrefix, merge, assign, isObject, isFunction, clone, isPercentage, result, isEqual } from '../util/index.mjs';\nimport { Point, Line, Path, normalizeAngle, Rect, Polyline, intersection } from '../g/index.mjs';\nimport * as routers from '../routers/index.mjs';\nimport * as connectors from '../connectors/index.mjs';\nimport { env } from '../env/index.mjs';\n\nconst Flags = {\n    TOOLS: CellView.Flags.TOOLS,\n    RENDER: 'RENDER',\n    UPDATE: 'UPDATE',\n    LABELS: 'LABELS',\n    SOURCE: 'SOURCE',\n    TARGET: 'TARGET',\n    CONNECTOR: 'CONNECTOR'\n};\n\n// Link base view and controller.\n// ----------------------------------------\n\nexport const LinkView = CellView.extend({\n\n    className: function() {\n\n        var classNames = CellView.prototype.className.apply(this).split(' ');\n\n        classNames.push('link');\n\n        return classNames.join(' ');\n    },\n\n    _labelCache: null,\n    _labelSelectors: null,\n    _V: null,\n    _dragData: null, // deprecated\n\n    metrics: null,\n    decimalsRounding: 2,\n\n    initialize: function() {\n\n        CellView.prototype.initialize.apply(this, arguments);\n\n        // `_.labelCache` is a mapping of indexes of labels in the `this.get('labels')` array to\n        // `<g class=\"label\">` nodes wrapped by Vectorizer. This allows for quick access to the\n        // nodes in `updateLabelPosition()` in order to update the label positions.\n        this._labelCache = {};\n\n        // a cache of label selectors\n        this._labelSelectors = {};\n\n        // cache of default markup nodes\n        this._V = {};\n\n        // connection path metrics\n        this.cleanNodesCache();\n    },\n\n    presentationAttributes: {\n        markup: [Flags.RENDER],\n        attrs: [Flags.UPDATE],\n        router: [Flags.UPDATE],\n        connector: [Flags.CONNECTOR],\n        labels: [Flags.LABELS, Flags.TOOLS],\n        labelMarkup: [Flags.LABELS],\n        vertices: [Flags.UPDATE],\n        source: [Flags.SOURCE, Flags.UPDATE],\n        target: [Flags.TARGET, Flags.UPDATE]\n    },\n\n    initFlag: [Flags.RENDER, Flags.SOURCE, Flags.TARGET, Flags.TOOLS],\n\n    UPDATE_PRIORITY: 1,\n    EPSILON: 1e-6,\n\n    confirmUpdate: function(flags, opt) {\n\n        opt || (opt = {});\n\n        if (this.hasFlag(flags, Flags.SOURCE)) {\n            if (!this.updateEndProperties('source')) return flags;\n            flags = this.removeFlag(flags, Flags.SOURCE);\n        }\n\n        if (this.hasFlag(flags, Flags.TARGET)) {\n            if (!this.updateEndProperties('target')) return flags;\n            flags = this.removeFlag(flags, Flags.TARGET);\n        }\n\n        const { paper, sourceView, targetView } = this;\n        if (paper && ((sourceView && !paper.isViewMounted(sourceView)) || (targetView && !paper.isViewMounted(targetView)))) {\n            // Wait for the sourceView and targetView to be rendered\n            return flags;\n        }\n\n        if (this.hasFlag(flags, Flags.RENDER)) {\n            this.render();\n            this.updateHighlighters(true);\n            this.updateTools(opt);\n            flags = this.removeFlag(flags, [Flags.RENDER, Flags.UPDATE, Flags.LABELS, Flags.TOOLS, Flags.CONNECTOR]);\n\n            if (env.test('isSafari')) {\n                this.__fixSafariBug268376();\n            }\n\n            return flags;\n        }\n\n        let updateHighlighters = false;\n\n        const { model } = this;\n        const { attributes } = model;\n        let updateLabels = this.hasFlag(flags, Flags.LABELS);\n\n        if (updateLabels) {\n            this.onLabelsChange(model, attributes.labels, opt);\n            flags = this.removeFlag(flags, Flags.LABELS);\n            updateHighlighters = true;\n        }\n\n        const updateAll = this.hasFlag(flags, Flags.UPDATE);\n        const updateConnector = this.hasFlag(flags, Flags.CONNECTOR);\n        if (updateAll || updateConnector) {\n            if (!updateAll) {\n                // Keep the current route and update the geometry\n                this.updatePath();\n                this.updateDOM();\n            } else if (opt.translateBy && model.isRelationshipEmbeddedIn(opt.translateBy)) {\n                // The link is being translated by an ancestor that will\n                // shift source point, target point and all vertices\n                // by an equal distance.\n                this.translate(opt.tx, opt.ty);\n            } else {\n                this.update();\n            }\n            this.updateTools(opt);\n            flags = this.removeFlag(flags, [Flags.UPDATE, Flags.TOOLS, Flags.CONNECTOR]);\n            updateLabels = false;\n            updateHighlighters = true;\n        }\n\n        if (updateLabels) {\n            this.updateLabelPositions();\n        }\n\n        if (updateHighlighters) {\n            this.updateHighlighters();\n        }\n\n        if (this.hasFlag(flags, Flags.TOOLS)) {\n            this.updateTools(opt);\n            flags = this.removeFlag(flags, Flags.TOOLS);\n        }\n\n        return flags;\n    },\n\n    __fixSafariBug268376: function() {\n        // Safari has a bug where any change after the first render is not reflected in the DOM.\n        // https://bugs.webkit.org/show_bug.cgi?id=268376\n        const { el } = this;\n        const childNodes = Array.from(el.childNodes);\n        const fragment = document.createDocumentFragment();\n        for (let i = 0, n = childNodes.length; i < n; i++) {\n            el.removeChild(childNodes[i]);\n            fragment.appendChild(childNodes[i]);\n        }\n        el.appendChild(fragment);\n    },\n\n    requestConnectionUpdate: function(opt) {\n        this.requestUpdate(this.getFlag(Flags.UPDATE), opt);\n    },\n\n    isLabelsRenderRequired: function(opt = {}) {\n\n        const previousLabels = this.model.previous('labels');\n        if (!previousLabels) return true;\n\n        // Here is an optimization for cases when we know, that change does\n        // not require re-rendering of all labels.\n        if (('propertyPathArray' in opt) && ('propertyValue' in opt)) {\n            // The label is setting by `prop()` method\n            var pathArray = opt.propertyPathArray || [];\n            var pathLength = pathArray.length;\n            if (pathLength > 1) {\n                // We are changing a single label here e.g. 'labels/0/position'\n                var labelExists = !!previousLabels[pathArray[1]];\n                if (labelExists) {\n                    if (pathLength === 2) {\n                        // We are changing the entire label. Need to check if the\n                        // markup is also being changed.\n                        return ('markup' in Object(opt.propertyValue));\n                    } else if (pathArray[2] !== 'markup') {\n                        // We are changing a label property but not the markup\n                        return false;\n                    }\n                }\n            }\n        }\n\n        return true;\n    },\n\n    onLabelsChange: function(_link, _labels, opt) {\n\n        // Note: this optimization works in async=false mode only\n        if (this.isLabelsRenderRequired(opt)) {\n            this.renderLabels();\n        } else {\n            this.updateLabels();\n        }\n    },\n\n    // Rendering.\n    // ----------\n\n    render: function() {\n\n        this.vel.empty();\n        this.unmountLabels();\n        this._V = {};\n        this.renderMarkup();\n        // rendering labels has to be run after the link is appended to DOM tree. (otherwise <Text> bbox\n        // returns zero values)\n        this.renderLabels();\n        this.update();\n\n        return this;\n    },\n\n    renderMarkup: function() {\n\n        var link = this.model;\n        var markup = link.get('markup') || link.markup;\n        if (!markup) throw new Error('dia.LinkView: markup required');\n        if (Array.isArray(markup)) return this.renderJSONMarkup(markup);\n        if (typeof markup === 'string') return this.renderStringMarkup(markup);\n        throw new Error('dia.LinkView: invalid markup');\n    },\n\n    renderJSONMarkup: function(markup) {\n\n        var doc = this.parseDOMJSON(markup, this.el);\n        // Selectors\n        this.selectors = doc.selectors;\n        // Fragment\n        this.vel.append(doc.fragment);\n    },\n\n    renderStringMarkup: function(markup) {\n\n        // A special markup can be given in the `properties.markup` property. This might be handy\n        // if e.g. arrowhead markers should be `<image>` elements or any other element than `<path>`s.\n        // `.connection`, `.connection-wrap`, `.marker-source` and `.marker-target` selectors\n        // of elements with special meaning though. Therefore, those classes should be preserved in any\n        // special markup passed in `properties.markup`.\n        var children = V(markup);\n        // custom markup may contain only one children\n        if (!Array.isArray(children)) children = [children];\n\n        this.vel.append(children);\n    },\n\n    _getLabelMarkup: function(labelMarkup) {\n\n        if (!labelMarkup) return undefined;\n\n        if (Array.isArray(labelMarkup)) return this.parseDOMJSON(labelMarkup, null);\n        if (typeof labelMarkup === 'string') return this._getLabelStringMarkup(labelMarkup);\n        throw new Error('dia.linkView: invalid label markup');\n    },\n\n    _getLabelStringMarkup: function(labelMarkup) {\n\n        var children = V(labelMarkup);\n        var fragment = document.createDocumentFragment();\n\n        if (!Array.isArray(children)) {\n            fragment.appendChild(children.node);\n\n        } else {\n            for (var i = 0, n = children.length; i < n; i++) {\n                var currentChild = children[i].node;\n                fragment.appendChild(currentChild);\n            }\n        }\n\n        return { fragment: fragment, selectors: {}}; // no selectors\n    },\n\n    // Label markup fragment may come wrapped in <g class=\"label\" />, or not.\n    // If it doesn't, add the <g /> container here.\n    _normalizeLabelMarkup: function(markup) {\n\n        if (!markup) return undefined;\n\n        var fragment = markup.fragment;\n        if (!(markup.fragment instanceof DocumentFragment) || !markup.fragment.hasChildNodes()) throw new Error('dia.LinkView: invalid label markup.');\n\n        var vNode;\n        var childNodes = fragment.childNodes;\n\n        if ((childNodes.length > 1) || childNodes[0].nodeName.toUpperCase() !== 'G') {\n            // default markup fragment is not wrapped in <g />\n            // add a <g /> container\n            vNode = V('g').append(fragment);\n        } else {\n            vNode = V(childNodes[0]);\n        }\n\n        vNode.addClass('label');\n\n        return { node: vNode.node, selectors: markup.selectors };\n    },\n\n    renderLabels: function() {\n\n        var cache = this._V;\n        var vLabels = cache.labels;\n        var labelCache = this._labelCache = {};\n        var labelSelectors = this._labelSelectors = {};\n        var model = this.model;\n        var labels = model.attributes.labels || [];\n        var labelsCount = labels.length;\n\n        if (labelsCount === 0) {\n            if (vLabels) vLabels.remove();\n            return this;\n        }\n\n        if (vLabels) {\n            vLabels.empty();\n        }  else {\n            // there is no label container in the markup but some labels are defined\n            // add a <g class=\"labels\" /> container\n            vLabels = cache.labels = V('g').addClass('labels');\n            if (this.options.labelsLayer) {\n                vLabels.addClass(addClassNamePrefix(result(this, 'className')));\n                vLabels.attr('model-id', model.id);\n            }\n        }\n\n        for (var i = 0; i < labelsCount; i++) {\n\n            var label = labels[i];\n            var labelMarkup = this._normalizeLabelMarkup(this._getLabelMarkup(label.markup));\n            var labelNode;\n            var selectors;\n            if (labelMarkup) {\n\n                labelNode = labelMarkup.node;\n                selectors = labelMarkup.selectors;\n\n            } else {\n\n                var builtinDefaultLabel =  model._builtins.defaultLabel;\n                var builtinDefaultLabelMarkup = this._normalizeLabelMarkup(this._getLabelMarkup(builtinDefaultLabel.markup));\n                var defaultLabel = model._getDefaultLabel();\n                var defaultLabelMarkup = this._normalizeLabelMarkup(this._getLabelMarkup(defaultLabel.markup));\n                var defaultMarkup = defaultLabelMarkup || builtinDefaultLabelMarkup;\n\n                labelNode = defaultMarkup.node;\n                selectors = defaultMarkup.selectors;\n            }\n\n            labelNode.setAttribute('label-idx', i); // assign label-idx\n            vLabels.append(labelNode);\n            labelCache[i] = labelNode; // cache node for `updateLabels()` so it can just update label node positions\n\n            var rootSelector = this.selector;\n            if (selectors[rootSelector]) throw new Error('dia.LinkView: ambiguous label root selector.');\n            selectors[rootSelector] = labelNode;\n\n            labelSelectors[i] = selectors; // cache label selectors for `updateLabels()`\n        }\n        if (!vLabels.parent()) {\n            this.mountLabels();\n        }\n\n        this.updateLabels();\n\n        return this;\n    },\n\n    mountLabels: function() {\n        const { el, paper, model, _V, options } = this;\n        const { labels: vLabels } = _V;\n        if (!vLabels || !model.hasLabels()) return;\n        const { node } = vLabels;\n        if (options.labelsLayer) {\n            paper.getLayerView(options.labelsLayer).insertSortedNode(node, model.get('z'));\n        } else {\n            if (node.parentNode !== el) {\n                el.appendChild(node);\n            }\n        }\n    },\n\n    unmountLabels: function() {\n        const { options, _V } = this;\n        if (!_V) return;\n        const { labels: vLabels } = _V;\n        if (vLabels && options.labelsLayer) {\n            vLabels.remove();\n        }\n    },\n\n    findLabelNodes: function(labelIndex, selector) {\n        const labelRoot = this._labelCache[labelIndex];\n        if (!labelRoot) return [];\n        const labelSelectors = this._labelSelectors[labelIndex];\n        return this.findBySelector(selector, labelRoot, labelSelectors);\n    },\n\n    findLabelNode: function(labelIndex, selector) {\n        const [node = null] = this.findLabelNodes(labelIndex, selector);\n        return node;\n    },\n\n    // merge default label attrs into label attrs (or use built-in default label attrs if neither is provided)\n    // keep `undefined` or `null` because `{}` means something else\n    _mergeLabelAttrs: function(hasCustomMarkup, labelAttrs, defaultLabelAttrs, builtinDefaultLabelAttrs) {\n\n        if (labelAttrs === null) return null;\n        if (labelAttrs === undefined) {\n\n            if (defaultLabelAttrs === null) return null;\n            if (defaultLabelAttrs === undefined) {\n\n                if (hasCustomMarkup) return undefined;\n                return builtinDefaultLabelAttrs;\n            }\n\n            if (hasCustomMarkup) return defaultLabelAttrs;\n            return merge({}, builtinDefaultLabelAttrs, defaultLabelAttrs);\n        }\n\n        if (hasCustomMarkup) return merge({}, defaultLabelAttrs, labelAttrs);\n        return merge({}, builtinDefaultLabelAttrs, defaultLabelAttrs, labelAttrs);\n    },\n\n    // merge default label size into label size (no built-in default)\n    // keep `undefined` or `null` because `{}` means something else\n    _mergeLabelSize: function(labelSize, defaultLabelSize) {\n\n        if (labelSize === null) return null;\n        if (labelSize === undefined) {\n\n            if (defaultLabelSize === null) return null;\n            if (defaultLabelSize === undefined) return undefined;\n\n            return defaultLabelSize;\n        }\n\n        return merge({}, defaultLabelSize, labelSize);\n    },\n\n    updateLabels: function() {\n\n        if (!this._V.labels) return this;\n\n        if (!this.paper.options.labelLayer) {\n            // If there is no label layer, the cache needs to be cleared\n            // of the root node because the labels are attached\n            // to it and could affect the bounding box.\n            this.cleanNodeCache(this.el);\n        }\n\n        var model = this.model;\n        var labels = model.get('labels') || [];\n        var canLabelMove = this.can('labelMove');\n\n        var builtinDefaultLabel = model._builtins.defaultLabel;\n        var builtinDefaultLabelAttrs = builtinDefaultLabel.attrs;\n\n        var defaultLabel = model._getDefaultLabel();\n        var defaultLabelMarkup = defaultLabel.markup;\n        var defaultLabelAttrs = defaultLabel.attrs;\n        var defaultLabelSize = defaultLabel.size;\n\n        for (var i = 0, n = labels.length; i < n; i++) {\n\n            var labelNode = this._labelCache[i];\n            labelNode.setAttribute('cursor', (canLabelMove ? 'move' : 'default'));\n\n            var selectors = this._labelSelectors[i];\n\n            var label = labels[i];\n            var labelMarkup = label.markup;\n            var labelAttrs = label.attrs;\n            var labelSize = label.size;\n\n            var attrs = this._mergeLabelAttrs(\n                (labelMarkup || defaultLabelMarkup),\n                labelAttrs,\n                defaultLabelAttrs,\n                builtinDefaultLabelAttrs\n            );\n\n            var size = this._mergeLabelSize(\n                labelSize,\n                defaultLabelSize\n            );\n\n            this.updateDOMSubtreeAttributes(labelNode, attrs, {\n                rootBBox: new Rect(size),\n                selectors: selectors\n            });\n        }\n\n        return this;\n    },\n\n    // remove vertices that lie on (or nearly on) straight lines within the link\n    // return the number of removed points\n    removeRedundantLinearVertices: function(opt) {\n\n        const SIMPLIFY_THRESHOLD = 0.001;\n\n        const link = this.model;\n        const vertices = link.vertices();\n        const routePoints = [this.sourceAnchor, ...vertices, this.targetAnchor];\n        const numRoutePoints = routePoints.length;\n\n        // put routePoints into a polyline and try to simplify\n        const polyline = new Polyline(routePoints);\n        polyline.simplify({ threshold: SIMPLIFY_THRESHOLD });\n        const polylinePoints = polyline.points.map((point) => (point.toJSON())); // JSON of points after simplification\n        const numPolylinePoints = polylinePoints.length; // number of points after simplification\n\n        // shortcut if simplification did not remove any redundant vertices:\n        if (numRoutePoints === numPolylinePoints) return 0;\n\n        // else: set simplified polyline points as link vertices\n        // remove first and last polyline points again (= source/target anchors)\n        link.vertices(polylinePoints.slice(1, numPolylinePoints - 1), opt);\n        return (numRoutePoints - numPolylinePoints);\n    },\n\n    getEndView: function(type) {\n        switch (type) {\n            case 'source':\n                return this.sourceView || null;\n            case 'target':\n                return this.targetView || null;\n            default:\n                throw new Error('dia.LinkView: type parameter required.');\n        }\n    },\n\n    getEndAnchor: function(type) {\n        switch (type) {\n            case 'source':\n                return new Point(this.sourceAnchor);\n            case 'target':\n                return new Point(this.targetAnchor);\n            default:\n                throw new Error('dia.LinkView: type parameter required.');\n        }\n    },\n\n    getEndConnectionPoint: function(type) {\n        switch (type) {\n            case 'source':\n                return new Point(this.sourcePoint);\n            case 'target':\n                return new Point(this.targetPoint);\n            default:\n                throw new Error('dia.LinkView: type parameter required.');\n        }\n    },\n\n    getEndMagnet: function(type) {\n        switch (type) {\n            case 'source':\n                var sourceView = this.sourceView;\n                if (!sourceView) break;\n                return this.sourceMagnet || sourceView.el;\n            case 'target':\n                var targetView = this.targetView;\n                if (!targetView) break;\n                return this.targetMagnet || targetView.el;\n            default:\n                throw new Error('dia.LinkView: type parameter required.');\n        }\n        return null;\n    },\n\n\n    // Updating.\n    // ---------\n\n    update: function() {\n        this.updateRoute();\n        this.updatePath();\n        this.updateDOM();\n        return this;\n    },\n\n    translate: function(tx = 0, ty = 0) {\n        const { route, path } = this;\n        if (!route || !path) return;\n        // translate the route\n        const polyline = new Polyline(route);\n        polyline.translate(tx, ty);\n        this.route = polyline.points;\n        // translate source and target connection and anchor points.\n        this.sourcePoint.offset(tx, ty);\n        this.targetPoint.offset(tx, ty);\n        this.sourceAnchor.offset(tx, ty);\n        this.targetAnchor.offset(tx, ty);\n        // translate the geometry path\n        path.translate(tx, ty);\n        this.updateDOM();\n    },\n\n    updateDOM() {\n        const { el, model, selectors } = this;\n        this.cleanNodesCache();\n        // update SVG attributes defined by 'attrs/'.\n        this.updateDOMSubtreeAttributes(el, model.attr(), { selectors });\n        // update the label position etc.\n        this.updateLabelPositions();\n        // *Deprecated*\n        // Local perpendicular flag (as opposed to one defined on paper).\n        // Could be enabled inside a connector/router. It's valid only\n        // during the update execution.\n        this.options.perpendicular = null;\n    },\n\n    updateRoute: function() {\n        const { model } = this;\n        const vertices = model.vertices();\n        // 1. Find Anchors\n        const anchors = this.findAnchors(vertices);\n        const sourceAnchor = this.sourceAnchor = anchors.source;\n        const targetAnchor = this.targetAnchor = anchors.target;\n        // 2. Find Route\n        const route = this.findRoute(vertices);\n        this.route = route;\n        // 3. Find Connection Points\n        var connectionPoints = this.findConnectionPoints(route, sourceAnchor, targetAnchor);\n        this.sourcePoint = connectionPoints.source;\n        this.targetPoint = connectionPoints.target;\n    },\n\n    updatePath: function() {\n        const { route, sourcePoint, targetPoint } = this;\n        // 4. Find Connection\n        const path = this.findPath(route, sourcePoint.clone(), targetPoint.clone());\n        this.path = path;\n    },\n\n    findAnchorsOrdered: function(firstEndType, firstRef, secondEndType, secondRef) {\n\n        var firstAnchor, secondAnchor;\n        var firstAnchorRef, secondAnchorRef;\n        var model = this.model;\n        var firstDef = model.get(firstEndType);\n        var secondDef = model.get(secondEndType);\n        var firstView = this.getEndView(firstEndType);\n        var secondView = this.getEndView(secondEndType);\n        var firstMagnet = this.getEndMagnet(firstEndType);\n        var secondMagnet = this.getEndMagnet(secondEndType);\n\n        // Anchor first\n        if (firstView) {\n            if (firstRef) {\n                firstAnchorRef = new Point(firstRef);\n            } else if (secondView) {\n                firstAnchorRef = secondMagnet;\n            } else {\n                firstAnchorRef = new Point(secondDef);\n            }\n            firstAnchor = this.getAnchor(firstDef.anchor, firstView, firstMagnet, firstAnchorRef, firstEndType);\n        } else {\n            firstAnchor = new Point(firstDef);\n        }\n\n        // Anchor second\n        if (secondView) {\n            secondAnchorRef = new Point(secondRef || firstAnchor);\n            secondAnchor = this.getAnchor(secondDef.anchor, secondView, secondMagnet, secondAnchorRef, secondEndType);\n        } else {\n            secondAnchor = new Point(secondDef);\n        }\n\n        var res = {};\n        res[firstEndType] = firstAnchor;\n        res[secondEndType] = secondAnchor;\n        return res;\n    },\n\n    findAnchors: function(vertices) {\n\n        var model = this.model;\n        var firstVertex = vertices[0];\n        var lastVertex = vertices[vertices.length - 1];\n\n        if (model.target().priority && !model.source().priority) {\n            // Reversed order\n            return this.findAnchorsOrdered('target', lastVertex, 'source', firstVertex);\n        }\n\n        // Usual order\n        return this.findAnchorsOrdered('source', firstVertex, 'target', lastVertex);\n    },\n\n    findConnectionPoints: function(route, sourceAnchor, targetAnchor) {\n\n        var firstWaypoint = route[0];\n        var lastWaypoint = route[route.length - 1];\n        var model = this.model;\n        var sourceDef = model.get('source');\n        var targetDef = model.get('target');\n        var sourceView = this.sourceView;\n        var targetView = this.targetView;\n        var paperOptions = this.paper.options;\n        var sourceMagnet, targetMagnet;\n\n        // Connection Point Source\n        var sourcePoint;\n        if (sourceView && !sourceView.isNodeConnection(this.sourceMagnet)) {\n            sourceMagnet = (this.sourceMagnet || sourceView.el);\n            var sourceConnectionPointDef = sourceDef.connectionPoint || paperOptions.defaultConnectionPoint;\n            var sourcePointRef = firstWaypoint || targetAnchor;\n            var sourceLine = new Line(sourcePointRef, sourceAnchor);\n            sourcePoint = this.getConnectionPoint(\n                sourceConnectionPointDef,\n                sourceView,\n                sourceMagnet,\n                sourceLine,\n                'source'\n            );\n        } else {\n            sourcePoint = sourceAnchor;\n        }\n        // Connection Point Target\n        var targetPoint;\n        if (targetView && !targetView.isNodeConnection(this.targetMagnet)) {\n            targetMagnet = (this.targetMagnet || targetView.el);\n            var targetConnectionPointDef = targetDef.connectionPoint || paperOptions.defaultConnectionPoint;\n            var targetPointRef = lastWaypoint || sourceAnchor;\n            var targetLine = new Line(targetPointRef, targetAnchor);\n            targetPoint = this.getConnectionPoint(\n                targetConnectionPointDef,\n                targetView,\n                targetMagnet,\n                targetLine,\n                'target'\n            );\n        } else {\n            targetPoint = targetAnchor;\n        }\n\n        return {\n            source: sourcePoint,\n            target: targetPoint\n        };\n    },\n\n    getAnchor: function(anchorDef, cellView, magnet, ref, endType) {\n\n        var isConnection = cellView.isNodeConnection(magnet);\n        var paperOptions = this.paper.options;\n        if (!anchorDef) {\n            if (isConnection) {\n                anchorDef = paperOptions.defaultLinkAnchor;\n            } else {\n                if (this.options.perpendicular) {\n                    // Backwards compatibility\n                    // See `manhattan` router for more details\n                    anchorDef = { name: 'perpendicular' };\n                } else {\n                    anchorDef = paperOptions.defaultAnchor;\n                }\n            }\n        }\n\n        if (!anchorDef) throw new Error('Anchor required.');\n        var anchorFn;\n        if (typeof anchorDef === 'function') {\n            anchorFn = anchorDef;\n        } else {\n            var anchorName = anchorDef.name;\n            var anchorNamespace = isConnection ? 'linkAnchorNamespace' : 'anchorNamespace';\n            anchorFn = paperOptions[anchorNamespace][anchorName];\n            if (typeof anchorFn !== 'function') throw new Error('Unknown anchor: ' + anchorName);\n        }\n        var anchor = anchorFn.call(\n            this,\n            cellView,\n            magnet,\n            ref,\n            anchorDef.args || {},\n            endType,\n            this\n        );\n        if (!anchor) return new Point();\n        return anchor.round(this.decimalsRounding);\n    },\n\n\n    getConnectionPoint: function(connectionPointDef, view, magnet, line, endType) {\n\n        var connectionPoint;\n        var anchor = line.end;\n        var paperOptions = this.paper.options;\n\n        if (!connectionPointDef) return anchor;\n        var connectionPointFn;\n        if (typeof connectionPointDef === 'function') {\n            connectionPointFn = connectionPointDef;\n        } else {\n            var connectionPointName = connectionPointDef.name;\n            connectionPointFn = paperOptions.connectionPointNamespace[connectionPointName];\n            if (typeof connectionPointFn !== 'function') throw new Error('Unknown connection point: ' + connectionPointName);\n        }\n        connectionPoint = connectionPointFn.call(this, line, view, magnet, connectionPointDef.args || {}, endType, this);\n        if (!connectionPoint) return anchor;\n        return connectionPoint.round(this.decimalsRounding);\n    },\n\n    isIntersecting: function(geometryShape, geometryData) {\n        const connection = this.getConnection();\n        if (!connection) return false;\n        return intersection.exists(\n            geometryShape,\n            connection,\n            geometryData,\n            { segmentSubdivisions: this.getConnectionSubdivisions() },\n        );\n    },\n\n    isEnclosedIn: function(geometryRect) {\n        const connection = this.getConnection();\n        if (!connection) return false;\n        const bbox = connection.bbox();\n        if (!bbox) return false;\n        return geometryRect.containsRect(bbox);\n    },\n\n    isAtPoint: function(point /*, options */) {\n        // Note: `strict` option is not applicable for links.\n        // There is currently no method to determine if a path contains a point.\n        const area = new Rect(point);\n        // Intersection with a zero-size area is not possible.\n        area.inflate(this.EPSILON);\n        return this.isIntersecting(area);\n    },\n\n    // combine default label position with built-in default label position\n    _getDefaultLabelPositionProperty: function() {\n\n        var model = this.model;\n\n        var builtinDefaultLabel = model._builtins.defaultLabel;\n        var builtinDefaultLabelPosition = builtinDefaultLabel.position;\n\n        var defaultLabel = model._getDefaultLabel();\n        var defaultLabelPosition = this._normalizeLabelPosition(defaultLabel.position);\n\n        return merge({}, builtinDefaultLabelPosition, defaultLabelPosition);\n    },\n\n    // if label position is a number, normalize it to a position object\n    // this makes sure that label positions can be merged properly\n    _normalizeLabelPosition: function(labelPosition) {\n\n        if (typeof labelPosition === 'number') return { distance: labelPosition, offset: null, angle: 0, args: null };\n        return labelPosition;\n    },\n\n    // expects normalized position properties\n    // e.g. `this._normalizeLabelPosition(labelPosition)` and `this._getDefaultLabelPositionProperty()`\n    _mergeLabelPositionProperty: function(normalizedLabelPosition, normalizedDefaultLabelPosition) {\n\n        if (normalizedLabelPosition === null) return null;\n        if (normalizedLabelPosition === undefined) {\n\n            if (normalizedDefaultLabelPosition === null) return null;\n            return normalizedDefaultLabelPosition;\n        }\n\n        return merge({}, normalizedDefaultLabelPosition, normalizedLabelPosition);\n    },\n\n    updateLabelPositions: function() {\n\n        if (!this._V.labels) return this;\n\n        var path = this.path;\n        if (!path) return this;\n\n        // This method assumes all the label nodes are stored in the `this._labelCache` hash table\n        // by their indices in the `this.get('labels')` array. This is done in the `renderLabels()` method.\n\n        var model = this.model;\n        var labels = model.get('labels') || [];\n        if (!labels.length) return this;\n\n        var defaultLabelPosition = this._getDefaultLabelPositionProperty();\n\n        for (var idx = 0, n = labels.length; idx < n; idx++) {\n            var labelNode = this._labelCache[idx];\n            if (!labelNode) continue;\n            var label = labels[idx];\n            var labelPosition = this._normalizeLabelPosition(label.position);\n            var position = this._mergeLabelPositionProperty(labelPosition, defaultLabelPosition);\n            var transformationMatrix = this._getLabelTransformationMatrix(position);\n            labelNode.setAttribute('transform', V.matrixToTransformString(transformationMatrix));\n            this._cleanLabelMatrices(idx);\n        }\n\n        return this;\n    },\n\n    _cleanLabelMatrices: function(index) {\n        // Clean magnetMatrix for all nodes of the label.\n        // Cached BoundingRect does not need to updated when the position changes\n        // TODO: this doesn't work for labels with XML String markups.\n        const { metrics, _labelSelectors } = this;\n        const selectors = _labelSelectors[index];\n        if (!selectors) return;\n        for (let selector in selectors) {\n            const { id } = selectors[selector];\n            if (id && (id in metrics)) delete metrics[id].magnetMatrix;\n        }\n    },\n\n    updateEndProperties: function(endType) {\n\n        const { model, paper } = this;\n        const endViewProperty = `${endType}View`;\n        const endDef = model.get(endType);\n        const endId = endDef && endDef.id;\n\n        if (!endId) {\n            // the link end is a point ~ rect 0x0\n            this[endViewProperty] = null;\n            this.updateEndMagnet(endType);\n            return true;\n        }\n\n        const endModel = paper.getModelById(endId);\n        if (!endModel) throw new Error('LinkView: invalid ' + endType + ' cell.');\n\n        const endView = endModel.findView(paper);\n        if (!endView) {\n            // A view for a model should always exist\n            return false;\n        }\n\n        this[endViewProperty] = endView;\n        this.updateEndMagnet(endType);\n        return true;\n    },\n\n    updateEndMagnet: function(endType) {\n\n        const endMagnetProperty = `${endType}Magnet`;\n        const endView = this.getEndView(endType);\n        if (endView) {\n            let connectedMagnet = endView.getMagnetFromLinkEnd(this.model.get(endType));\n            if (connectedMagnet === endView.el) connectedMagnet = null;\n            this[endMagnetProperty] = connectedMagnet;\n        } else {\n            this[endMagnetProperty] = null;\n        }\n    },\n\n    _getLabelPositionProperty: function(idx) {\n\n        return (this.model.label(idx).position || {});\n    },\n\n    _getLabelPositionAngle: function(idx) {\n\n        var labelPosition = this._getLabelPositionProperty(idx);\n        return (labelPosition.angle || 0);\n    },\n\n    _getLabelPositionArgs: function(idx) {\n\n        var labelPosition = this._getLabelPositionProperty(idx);\n        return labelPosition.args;\n    },\n\n    _getDefaultLabelPositionArgs: function() {\n\n        var defaultLabel = this.model._getDefaultLabel();\n        var defaultLabelPosition = defaultLabel.position || {};\n        return defaultLabelPosition.args;\n    },\n\n    // merge default label position args into label position args\n    // keep `undefined` or `null` because `{}` means something else\n    _mergeLabelPositionArgs: function(labelPositionArgs, defaultLabelPositionArgs) {\n\n        if (labelPositionArgs === null) return null;\n        if (labelPositionArgs === undefined) {\n\n            if (defaultLabelPositionArgs === null) return null;\n            return defaultLabelPositionArgs;\n        }\n\n        return merge({}, defaultLabelPositionArgs, labelPositionArgs);\n    },\n\n    // Add default label at given position at end of `labels` array.\n    // Four signatures:\n    // - obj, obj = point, opt\n    // - obj, num, obj = point, angle, opt\n    // - num, num, obj = x, y, opt\n    // - num, num, num, obj = x, y, angle, opt\n    // Assigns relative coordinates by default:\n    // `opt.absoluteDistance` forces absolute coordinates.\n    // `opt.reverseDistance` forces reverse absolute coordinates (if absoluteDistance = true).\n    // `opt.absoluteOffset` forces absolute coordinates for offset.\n    // Additional args:\n    // `opt.keepGradient` auto-adjusts the angle of the label to match path gradient at position.\n    // `opt.ensureLegibility` rotates labels so they are never upside-down.\n    addLabel: function(p1, p2, p3, p4) {\n\n        // normalize data from the four possible signatures\n        var localX;\n        var localY;\n        var localAngle = 0;\n        var localOpt;\n        if (typeof p1 !== 'number') {\n            // {x, y} object provided as first parameter\n            localX = p1.x;\n            localY = p1.y;\n            if (typeof p2 === 'number') {\n                // angle and opt provided as second and third parameters\n                localAngle = p2;\n                localOpt = p3;\n            } else {\n                // opt provided as second parameter\n                localOpt = p2;\n            }\n        } else {\n            // x and y provided as first and second parameters\n            localX = p1;\n            localY = p2;\n            if (typeof p3 === 'number') {\n                // angle and opt provided as third and fourth parameters\n                localAngle = p3;\n                localOpt = p4;\n            } else {\n                // opt provided as third parameter\n                localOpt = p3;\n            }\n        }\n\n        // merge label position arguments\n        var defaultLabelPositionArgs = this._getDefaultLabelPositionArgs();\n        var labelPositionArgs = localOpt;\n        var positionArgs = this._mergeLabelPositionArgs(labelPositionArgs, defaultLabelPositionArgs);\n\n        // append label to labels array\n        var label = { position: this.getLabelPosition(localX, localY, localAngle, positionArgs) };\n        var idx = -1;\n        this.model.insertLabel(idx, label, localOpt);\n        return idx;\n    },\n\n    // Add a new vertex at calculated index to the `vertices` array.\n    addVertex: function(x, y, opt) {\n\n        // accept input in form `{ x, y }, opt` or `x, y, opt`\n        var isPointProvided = (typeof x !== 'number');\n        var localX = isPointProvided ? x.x : x;\n        var localY = isPointProvided ? x.y : y;\n        var localOpt = isPointProvided ? y : opt;\n\n        var vertex = { x: localX, y: localY };\n        var idx = this.getVertexIndex(localX, localY);\n        this.model.insertVertex(idx, vertex, localOpt);\n        return idx;\n    },\n\n    // Send a token (an SVG element, usually a circle) along the connection path.\n    // Example: `link.findView(paper).sendToken(V('circle', { r: 7, fill: 'green' }).node)`\n    // `opt.duration` is optional and is a time in milliseconds that the token travels from the source to the target of the link. Default is `1000`.\n    // `opt.direction` is optional and it determines whether the token goes from source to target or other way round (`reverse`)\n    // `opt.connection` is an optional selector to the connection path.\n    // `callback` is optional and is a function to be called once the token reaches the target.\n    sendToken: function(token, opt, callback) {\n\n        function onAnimationEnd(vToken, callback) {\n            return function() {\n                vToken.remove();\n                if (typeof callback === 'function') {\n                    callback();\n                }\n            };\n        }\n\n        var duration, isReversed, selector;\n        if (isObject(opt)) {\n            duration = opt.duration;\n            isReversed = (opt.direction === 'reverse');\n            selector = opt.connection;\n        } else {\n            // Backwards compatibility\n            duration = opt;\n            isReversed = false;\n            selector = null;\n        }\n\n        duration = duration || 1000;\n\n        var animationAttributes = {\n            dur: duration + 'ms',\n            repeatCount: 1,\n            calcMode: 'linear',\n            fill: 'freeze'\n        };\n\n        if (isReversed) {\n            animationAttributes.keyPoints = '1;0';\n            animationAttributes.keyTimes = '0;1';\n        }\n\n        var vToken = V(token);\n        var connection;\n        if (typeof selector === 'string') {\n            // Use custom connection path.\n            connection = this.findNode(selector);\n        } else {\n            // Select connection path automatically.\n            var cache = this._V;\n            connection = (cache.connection) ? cache.connection.node : this.el.querySelector('path');\n        }\n\n        if (!(connection instanceof SVGPathElement)) {\n            throw new Error('dia.LinkView: token animation requires a valid connection path.');\n        }\n\n        vToken\n            .appendTo(this.paper.cells)\n            .animateAlongPath(animationAttributes, connection);\n\n        setTimeout(onAnimationEnd(vToken, callback), duration);\n    },\n\n    findRoute: function(vertices) {\n\n        vertices || (vertices = []);\n\n        var namespace = this.paper.options.routerNamespace || routers;\n        var router = this.model.router();\n        var defaultRouter = this.paper.options.defaultRouter;\n\n        if (!router) {\n            if (defaultRouter) router = defaultRouter;\n            else return vertices.map(Point); // no router specified\n        }\n\n        var routerFn = isFunction(router) ? router : namespace[router.name];\n        if (!isFunction(routerFn)) {\n            throw new Error('dia.LinkView: unknown router: \"' + router.name + '\".');\n        }\n\n        var args = router.args || {};\n\n        var route = routerFn.call(\n            this, // context\n            vertices, // vertices\n            args, // options\n            this // linkView\n        );\n\n        if (!route) return vertices.map(Point);\n        return route;\n    },\n\n    // Return the `d` attribute value of the `<path>` element representing the link\n    // between `source` and `target`.\n    findPath: function(route, sourcePoint, targetPoint) {\n\n        var namespace = this.paper.options.connectorNamespace || connectors;\n        var connector = this.model.connector();\n        var defaultConnector = this.paper.options.defaultConnector;\n\n        if (!connector) {\n            connector = defaultConnector || {};\n        }\n\n        var connectorFn = isFunction(connector) ? connector : namespace[connector.name];\n        if (!isFunction(connectorFn)) {\n            throw new Error('dia.LinkView: unknown connector: \"' + connector.name + '\".');\n        }\n\n        var args = clone(connector.args || {});\n        args.raw = true; // Request raw g.Path as the result.\n\n        var path = connectorFn.call(\n            this, // context\n            sourcePoint, // start point\n            targetPoint, // end point\n            route, // vertices\n            args, // options\n            this // linkView\n        );\n\n        if (typeof path === 'string') {\n            // Backwards compatibility for connectors not supporting `raw` option.\n            path = new Path(V.normalizePathData(path));\n        }\n\n        return path;\n    },\n\n    // Public API.\n    // -----------\n\n    getConnection: function() {\n\n        var path = this.path;\n        if (!path) return null;\n\n        return path.clone();\n    },\n\n    getSerializedConnection: function() {\n\n        var path = this.path;\n        if (!path) return null;\n\n        var metrics = this.metrics;\n        if (metrics.hasOwnProperty('data')) return metrics.data;\n        var data = path.serialize();\n        metrics.data = data;\n        return data;\n    },\n\n    getConnectionSubdivisions: function() {\n\n        var path = this.path;\n        if (!path) return null;\n\n        var metrics = this.metrics;\n        if (metrics.hasOwnProperty('segmentSubdivisions')) return metrics.segmentSubdivisions;\n        var subdivisions = path.getSegmentSubdivisions();\n        metrics.segmentSubdivisions = subdivisions;\n        return subdivisions;\n    },\n\n    getConnectionLength: function() {\n\n        var path = this.path;\n        if (!path) return 0;\n\n        var metrics = this.metrics;\n        if (metrics.hasOwnProperty('length')) return metrics.length;\n        var length = path.length({ segmentSubdivisions: this.getConnectionSubdivisions() });\n        metrics.length = length;\n        return length;\n    },\n\n    getPointAtLength: function(length) {\n\n        var path = this.path;\n        if (!path) return null;\n\n        return path.pointAtLength(length, { segmentSubdivisions: this.getConnectionSubdivisions() });\n    },\n\n    getPointAtRatio: function(ratio) {\n\n        var path = this.path;\n        if (!path) return null;\n        if (isPercentage(ratio)) ratio = parseFloat(ratio) / 100;\n        return path.pointAt(ratio, { segmentSubdivisions: this.getConnectionSubdivisions() });\n    },\n\n    getTangentAtLength: function(length) {\n\n        var path = this.path;\n        if (!path) return null;\n\n        return path.tangentAtLength(length, { segmentSubdivisions: this.getConnectionSubdivisions() });\n    },\n\n    getTangentAtRatio: function(ratio) {\n\n        var path = this.path;\n        if (!path) return null;\n\n        return path.tangentAt(ratio, { segmentSubdivisions: this.getConnectionSubdivisions() });\n    },\n\n    getClosestPoint: function(point) {\n\n        var path = this.path;\n        if (!path) return null;\n\n        return path.closestPoint(point, { segmentSubdivisions: this.getConnectionSubdivisions() });\n    },\n\n    getClosestPointLength: function(point) {\n\n        var path = this.path;\n        if (!path) return null;\n\n        return path.closestPointLength(point, { segmentSubdivisions: this.getConnectionSubdivisions() });\n    },\n\n    getClosestPointRatio: function(point) {\n\n        var path = this.path;\n        if (!path) return null;\n\n        return path.closestPointNormalizedLength(point, { segmentSubdivisions: this.getConnectionSubdivisions() });\n    },\n\n    // Get label position object based on two provided coordinates, x and y.\n    // (Used behind the scenes when user moves labels around.)\n    // Two signatures:\n    // - num, num, obj = x, y, options\n    // - num, num, num, obj = x, y, angle, options\n    // Accepts distance/offset options = `absoluteDistance: boolean`, `reverseDistance: boolean`, `absoluteOffset: boolean`\n    // - `absoluteOffset` is necessary in order to move beyond connection endpoints\n    // Additional options = `keepGradient: boolean`, `ensureLegibility: boolean`\n    getLabelPosition: function(x, y, p3, p4) {\n\n        var position = {};\n\n        // normalize data from the two possible signatures\n        var localAngle = 0;\n        var localOpt;\n        if (typeof p3 === 'number') {\n            // angle and opt provided as third and fourth argument\n            localAngle = p3;\n            localOpt = p4;\n        } else {\n            // opt provided as third argument\n            localOpt = p3;\n        }\n\n        // save localOpt as `args` of the position object that is passed along\n        if (localOpt) position.args = localOpt;\n\n        // identify distance/offset settings\n        var isDistanceRelative = !(localOpt && localOpt.absoluteDistance); // relative by default\n        var isDistanceAbsoluteReverse = (localOpt && localOpt.absoluteDistance && localOpt.reverseDistance); // non-reverse by default\n        var isOffsetAbsolute = localOpt && localOpt.absoluteOffset; // offset is non-absolute by default\n\n        // find closest point t\n        var path = this.path;\n        var pathOpt = { segmentSubdivisions: this.getConnectionSubdivisions() };\n        var labelPoint = new Point(x, y);\n        var t = path.closestPointT(labelPoint, pathOpt);\n\n        // DISTANCE:\n        var labelDistance = path.lengthAtT(t, pathOpt);\n        if (isDistanceRelative) labelDistance = (labelDistance / this.getConnectionLength()) || 0; // fix to prevent NaN for 0 length\n        if (isDistanceAbsoluteReverse) labelDistance = (-1 * (this.getConnectionLength() - labelDistance)) || 1; // fix for end point (-0 => 1)\n        position.distance = labelDistance;\n\n        // OFFSET:\n        // use absolute offset if:\n        // - opt.absoluteOffset is true,\n        // - opt.absoluteOffset is not true but there is no tangent\n        var tangent;\n        if (!isOffsetAbsolute) tangent = path.tangentAtT(t);\n        var labelOffset;\n        if (tangent) {\n            labelOffset = tangent.pointOffset(labelPoint);\n        } else {\n            var closestPoint = path.pointAtT(t);\n            var labelOffsetDiff = labelPoint.difference(closestPoint);\n            labelOffset = { x: labelOffsetDiff.x, y: labelOffsetDiff.y };\n        }\n        position.offset = labelOffset;\n\n        // ANGLE:\n        position.angle = localAngle;\n\n        return position;\n    },\n\n    _getLabelTransformationMatrix: function(labelPosition) {\n\n        var labelDistance;\n        var labelAngle = 0;\n        var args = {};\n        if (typeof labelPosition === 'number') {\n            labelDistance = labelPosition;\n        } else if (typeof labelPosition.distance === 'number') {\n            args = labelPosition.args || {};\n            labelDistance = labelPosition.distance;\n            labelAngle = labelPosition.angle || 0;\n        } else {\n            throw new Error('dia.LinkView: invalid label position distance.');\n        }\n\n        var isDistanceRelative = ((labelDistance > 0) && (labelDistance <= 1));\n\n        var labelOffset = 0;\n        var labelOffsetCoordinates = { x: 0, y: 0 };\n        if (labelPosition.offset) {\n            var positionOffset = labelPosition.offset;\n            if (typeof positionOffset === 'number') labelOffset = positionOffset;\n            if (positionOffset.x) labelOffsetCoordinates.x = positionOffset.x;\n            if (positionOffset.y) labelOffsetCoordinates.y = positionOffset.y;\n        }\n\n        var isOffsetAbsolute = ((labelOffsetCoordinates.x !== 0) || (labelOffsetCoordinates.y !== 0) || labelOffset === 0);\n\n        var isKeepGradient = args.keepGradient;\n        var isEnsureLegibility = args.ensureLegibility;\n\n        var path = this.path;\n        var pathOpt = { segmentSubdivisions: this.getConnectionSubdivisions() };\n\n        var distance = isDistanceRelative ? (labelDistance * this.getConnectionLength()) : labelDistance;\n        var tangent = path.tangentAtLength(distance, pathOpt);\n\n        var translation;\n        var angle = labelAngle;\n        if (tangent) {\n            if (isOffsetAbsolute) {\n                translation = tangent.start.clone();\n                translation.offset(labelOffsetCoordinates);\n            } else {\n                var normal = tangent.clone();\n                normal.rotate(tangent.start, -90);\n                normal.setLength(labelOffset);\n                translation = normal.end;\n            }\n\n            if (isKeepGradient) {\n                angle = (tangent.angle() + labelAngle);\n                if (isEnsureLegibility) {\n                    angle = normalizeAngle(((angle + 90) % 180) - 90);\n                }\n            }\n\n        } else {\n            // fallback - the connection has zero length\n            translation = path.start.clone();\n            if (isOffsetAbsolute) translation.offset(labelOffsetCoordinates);\n        }\n\n        return V.createSVGMatrix()\n            .translate(translation.x, translation.y)\n            .rotate(angle);\n    },\n\n    getLabelCoordinates: function(labelPosition) {\n\n        var transformationMatrix = this._getLabelTransformationMatrix(labelPosition);\n        return new Point(transformationMatrix.e, transformationMatrix.f);\n    },\n\n    getVertexIndex: function(x, y) {\n\n        var model = this.model;\n        var vertices = model.vertices();\n\n        var vertexLength = this.getClosestPointLength(new Point(x, y));\n\n        var idx = 0;\n        for (var n = vertices.length; idx < n; idx++) {\n            var currentVertex = vertices[idx];\n            var currentVertexLength = this.getClosestPointLength(currentVertex);\n            if (vertexLength < currentVertexLength) break;\n        }\n\n        return idx;\n    },\n\n    // Interaction. The controller part.\n    // ---------------------------------\n\n    notifyPointerdown(evt, x, y) {\n        CellView.prototype.pointerdown.call(this, evt, x, y);\n        this.notify('link:pointerdown', evt, x, y);\n    },\n\n    notifyPointermove(evt, x, y) {\n        CellView.prototype.pointermove.call(this, evt, x, y);\n        this.notify('link:pointermove', evt, x, y);\n    },\n\n    notifyPointerup(evt, x, y) {\n        this.notify('link:pointerup', evt, x, y);\n        CellView.prototype.pointerup.call(this, evt, x, y);\n    },\n\n    pointerdblclick: function(evt, x, y) {\n\n        CellView.prototype.pointerdblclick.apply(this, arguments);\n        this.notify('link:pointerdblclick', evt, x, y);\n    },\n\n    pointerclick: function(evt, x, y) {\n\n        CellView.prototype.pointerclick.apply(this, arguments);\n        this.notify('link:pointerclick', evt, x, y);\n    },\n\n    contextmenu: function(evt, x, y) {\n\n        CellView.prototype.contextmenu.apply(this, arguments);\n        this.notify('link:contextmenu', evt, x, y);\n    },\n\n    pointerdown: function(evt, x, y) {\n\n        this.notifyPointerdown(evt, x, y);\n        this.dragStart(evt, x, y);\n    },\n\n    pointermove: function(evt, x, y) {\n\n        // Backwards compatibility\n        var dragData = this._dragData;\n        if (dragData) this.eventData(evt, dragData);\n\n        var data = this.eventData(evt);\n        switch (data.action) {\n\n            case 'label-move':\n                this.dragLabel(evt, x, y);\n                break;\n\n            case 'arrowhead-move':\n                this.dragArrowhead(evt, x, y);\n                break;\n\n            case 'move':\n                this.drag(evt, x, y);\n                break;\n        }\n\n        // Backwards compatibility\n        if (dragData) assign(dragData, this.eventData(evt));\n\n        this.notifyPointermove(evt, x, y);\n    },\n\n    pointerup: function(evt, x, y) {\n\n        // Backwards compatibility\n        var dragData = this._dragData;\n        if (dragData) {\n            this.eventData(evt, dragData);\n            this._dragData = null;\n        }\n\n        var data = this.eventData(evt);\n        switch (data.action) {\n\n            case 'label-move':\n                this.dragLabelEnd(evt, x, y);\n                break;\n\n            case 'arrowhead-move':\n                this.dragArrowheadEnd(evt, x, y);\n                break;\n\n            case 'move':\n                this.dragEnd(evt, x, y);\n        }\n\n        this.notifyPointerup(evt, x, y);\n        this.checkMouseleave(evt);\n    },\n\n    mouseover: function(evt) {\n\n        CellView.prototype.mouseover.apply(this, arguments);\n        this.notify('link:mouseover', evt);\n    },\n\n    mouseout: function(evt) {\n\n        CellView.prototype.mouseout.apply(this, arguments);\n        this.notify('link:mouseout', evt);\n    },\n\n    mouseenter: function(evt) {\n\n        CellView.prototype.mouseenter.apply(this, arguments);\n        this.notify('link:mouseenter', evt);\n    },\n\n    mouseleave: function(evt) {\n\n        CellView.prototype.mouseleave.apply(this, arguments);\n        this.notify('link:mouseleave', evt);\n    },\n\n    mousewheel: function(evt, x, y, delta) {\n\n        CellView.prototype.mousewheel.apply(this, arguments);\n        this.notify('link:mousewheel', evt, x, y, delta);\n    },\n\n    onlabel: function(evt, x, y) {\n\n        this.notifyPointerdown(evt, x, y);\n\n        this.dragLabelStart(evt, x, y);\n\n        var stopPropagation = this.eventData(evt).stopPropagation;\n        if (stopPropagation) evt.stopPropagation();\n    },\n\n    // Drag Start Handlers\n\n    dragLabelStart: function(evt, x, y) {\n\n        if (this.can('labelMove')) {\n\n            if (this.isDefaultInteractionPrevented(evt)) return;\n\n            var labelNode = evt.currentTarget;\n            var labelIdx = parseInt(labelNode.getAttribute('label-idx'), 10);\n\n            var defaultLabelPosition = this._getDefaultLabelPositionProperty();\n            var initialLabelPosition = this._normalizeLabelPosition(this._getLabelPositionProperty(labelIdx));\n            var position = this._mergeLabelPositionProperty(initialLabelPosition, defaultLabelPosition);\n\n            var coords = this.getLabelCoordinates(position);\n            var dx = coords.x - x; // how much needs to be added to cursor x to get to label x\n            var dy = coords.y - y; // how much needs to be added to cursor y to get to label y\n\n            var positionAngle = this._getLabelPositionAngle(labelIdx);\n            var labelPositionArgs = this._getLabelPositionArgs(labelIdx);\n            var defaultLabelPositionArgs = this._getDefaultLabelPositionArgs();\n            var positionArgs = this._mergeLabelPositionArgs(labelPositionArgs, defaultLabelPositionArgs);\n\n            this.eventData(evt, {\n                action: 'label-move',\n                labelIdx: labelIdx,\n                dx: dx,\n                dy: dy,\n                positionAngle: positionAngle,\n                positionArgs: positionArgs,\n                stopPropagation: true\n            });\n\n        } else {\n\n            // Backwards compatibility:\n            // If labels can't be dragged no default action is triggered.\n            this.eventData(evt, { stopPropagation: true });\n        }\n\n        this.paper.delegateDragEvents(this, evt.data);\n    },\n\n    dragArrowheadStart: function(evt, x, y) {\n\n        if (!this.can('arrowheadMove')) return;\n\n        var arrowheadNode = evt.target;\n        var arrowheadType = arrowheadNode.getAttribute('end');\n        var data = this.startArrowheadMove(arrowheadType, { ignoreBackwardsCompatibility: true });\n\n        this.eventData(evt, data);\n    },\n\n    dragStart: function(evt, x, y) {\n\n        if (this.isDefaultInteractionPrevented(evt)) return;\n\n        if (!this.can('linkMove')) return;\n\n        this.eventData(evt, {\n            action: 'move',\n            dx: x,\n            dy: y\n        });\n    },\n\n    // Drag Handlers\n    dragLabel: function(evt, x, y) {\n\n        var data = this.eventData(evt);\n        var label = { position: this.getLabelPosition((x + data.dx), (y + data.dy), data.positionAngle, data.positionArgs) };\n        if (this.paper.options.snapLabels) delete label.position.offset;\n        // The `touchmove' events are not fired\n        // when the original event target is removed from the DOM.\n        // The labels are currently re-rendered completely when only\n        // the position changes. This is why we need to make sure that\n        // the label is updated synchronously.\n        // TODO: replace `touchmove` with `pointermove` (breaking change).\n        const setOptions = { ui: true };\n        if (this.paper.isAsync() && evt.type === 'touchmove') {\n            setOptions.async = false;\n        }\n        this.model.label(data.labelIdx, label, setOptions);\n    },\n\n    dragArrowhead: function(evt, x, y) {\n        if (this.paper.options.snapLinks) {\n            const isSnapped = this._snapArrowhead(evt, x, y);\n            if (!isSnapped && this.paper.options.snapLinksSelf) {\n                this._snapArrowheadSelf(evt, x, y);\n            }\n        } else {\n            if (this.paper.options.snapLinksSelf) {\n                this._snapArrowheadSelf(evt, x, y);\n            } else {\n                this._connectArrowhead(this.getEventTarget(evt), x, y, this.eventData(evt));\n            }\n        }\n    },\n\n    drag: function(evt, x, y) {\n\n        var data = this.eventData(evt);\n        this.model.translate(x - data.dx, y - data.dy, { ui: true });\n        this.eventData(evt, {\n            dx: x,\n            dy: y\n        });\n    },\n\n    // Drag End Handlers\n\n    dragLabelEnd: function() {\n        // noop\n    },\n\n    dragArrowheadEnd: function(evt, x, y) {\n\n        var data = this.eventData(evt);\n        var paper = this.paper;\n\n        if (paper.options.snapLinks) {\n            this._snapArrowheadEnd(data);\n        } else {\n            this._connectArrowheadEnd(data, x, y);\n        }\n\n        if (!paper.linkAllowed(this)) {\n            // If the changed link is not allowed, revert to its previous state.\n            this._disallow(data);\n        } else {\n            this._finishEmbedding(data);\n            this._notifyConnectEvent(data, evt);\n        }\n\n        this._afterArrowheadMove(data);\n    },\n\n    dragEnd: function() {\n        // noop\n    },\n\n    _disallow: function(data) {\n\n        switch (data.whenNotAllowed) {\n\n            case 'remove':\n                this.model.remove({ ui: true });\n                break;\n\n            case 'revert':\n            default:\n                this.model.set(data.arrowhead, data.initialEnd, { ui: true });\n                break;\n        }\n    },\n\n    _finishEmbedding: function(data) {\n\n        // Reparent the link if embedding is enabled\n        if (this.paper.options.embeddingMode && this.model.reparent()) {\n            // Make sure we don't reverse to the original 'z' index (see afterArrowheadMove()).\n            data.z = null;\n        }\n    },\n\n    _notifyConnectEvent: function(data, evt) {\n\n        var arrowhead = data.arrowhead;\n        var initialEnd = data.initialEnd;\n        var currentEnd = this.model.prop(arrowhead);\n        var endChanged = currentEnd && !Link.endsEqual(initialEnd, currentEnd);\n        if (endChanged) {\n            var paper = this.paper;\n            if (initialEnd.id) {\n                this.notify('link:disconnect', evt, paper.findViewByModel(initialEnd.id), data.initialMagnet, arrowhead);\n            }\n            if (currentEnd.id) {\n                this.notify('link:connect', evt, paper.findViewByModel(currentEnd.id), data.magnetUnderPointer, arrowhead);\n            }\n        }\n    },\n\n    _snapToPoints: function(snapPoint, points, radius) {\n        let closestPointX = null;\n        let closestDistanceX = Infinity;\n\n        let closestPointY = null;\n        let closestDistanceY = Infinity;\n\n        let x = snapPoint.x;\n        let y = snapPoint.y;\n\n        for (let i = 0; i < points.length; i++) {\n            const distX = Math.abs(points[i].x - snapPoint.x);\n            if (distX < closestDistanceX) {\n                closestDistanceX = distX;\n                closestPointX = points[i];\n            }\n\n            const distY = Math.abs(points[i].y - snapPoint.y);\n            if (distY < closestDistanceY) {\n                closestDistanceY = distY;\n                closestPointY = points[i];\n            }\n        }\n\n        if (closestDistanceX < radius) {\n            x = closestPointX.x;\n        }\n        if (closestDistanceY < radius) {\n            y = closestPointY.y;\n        }\n\n        return { x, y };\n    },\n\n    _snapArrowheadSelf: function(evt, x, y) {\n\n        const { paper, model } = this;\n        const { snapLinksSelf } = paper.options;\n        const data = this.eventData(evt);\n        const radius = snapLinksSelf.radius || 20;\n\n        const anchor = this.getEndAnchor(data.arrowhead === 'source' ? 'target' : 'source');\n        const vertices = model.vertices();\n        const points = [anchor, ...vertices];\n\n        const snapPoint = this._snapToPoints({ x: x, y: y }, points, radius);\n\n        const point = paper.localToClientPoint(snapPoint);\n        this._connectArrowhead(document.elementFromPoint(point.x, point.y), snapPoint.x, snapPoint.y, this.eventData(evt));\n    },\n\n    _snapArrowhead: function(evt, x, y) {\n\n        const { paper } = this;\n        const { snapLinks, connectionStrategy } = paper.options;\n        const data = this.eventData(evt);\n        let isSnapped = false;\n        // checking view in close area of the pointer\n\n        var r = snapLinks.radius || 50;\n        var viewsInArea = paper.findElementViewsInArea(\n            { x: x - r, y: y - r, width: 2 * r, height: 2 * r },\n            snapLinks.findInAreaOptions\n        );\n\n        var prevClosestView = data.closestView || null;\n        var prevClosestMagnet = data.closestMagnet || null;\n        var prevMagnetProxy = data.magnetProxy || null;\n\n        data.closestView = data.closestMagnet = data.magnetProxy = null;\n\n        var minDistance = Number.MAX_VALUE;\n        var pointer = new Point(x, y);\n\n        viewsInArea.forEach(function(view) {\n            const candidates = [];\n            // skip connecting to the element in case '.': { magnet: false } attribute present\n            if (view.el.getAttribute('magnet') !== 'false') {\n                candidates.push({\n                    bbox: view.model.getBBox(),\n                    magnet: view.el\n                });\n            }\n\n            view.$('[magnet]').toArray().forEach(magnet => {\n                candidates.push({\n                    bbox: view.getNodeBBox(magnet),\n                    magnet\n                });\n            });\n\n            candidates.forEach(candidate => {\n                const { magnet, bbox } = candidate;\n                // find distance from the center of the model to pointer coordinates\n                const distance = bbox.center().squaredDistance(pointer);\n                // the connection is looked up in a circle area by `distance < r`\n                if (distance < minDistance) {\n                    const isAlreadyValidated = prevClosestMagnet === magnet;\n                    if (isAlreadyValidated || paper.options.validateConnection.apply(\n                        paper, data.validateConnectionArgs(view, (view.el === magnet) ? null : magnet)\n                    )) {\n                        minDistance = distance;\n                        data.closestView = view;\n                        data.closestMagnet = magnet;\n                    }\n                }\n            });\n\n        }, this);\n\n        var end;\n        var magnetProxy = null;\n        var closestView = data.closestView;\n        var closestMagnet = data.closestMagnet;\n        if (closestMagnet) {\n            magnetProxy = data.magnetProxy = closestView.findProxyNode(closestMagnet, 'highlighter');\n        }\n        var endType = data.arrowhead;\n        var newClosestMagnet = (prevClosestMagnet !== closestMagnet);\n        if (prevClosestView && newClosestMagnet) {\n            prevClosestView.unhighlight(prevMagnetProxy, {\n                connecting: true,\n                snapping: true\n            });\n        }\n\n        if (closestView) {\n            const { prevEnd, prevX, prevY } = data;\n            data.prevX = x;\n            data.prevY = y;\n            isSnapped = true;\n\n            if (!newClosestMagnet)  {\n                if (typeof connectionStrategy !== 'function' || (prevX === x && prevY === y)) {\n                    // the magnet has not changed and the link's end does not depend on the x and y\n                    return isSnapped;\n                }\n            }\n\n            end = closestView.getLinkEnd(closestMagnet, x, y, this.model, endType);\n            if (!newClosestMagnet && isEqual(prevEnd, end)) {\n                // the source/target json has not changed\n                return isSnapped;\n            }\n\n            data.prevEnd = end;\n\n            if (newClosestMagnet) {\n                closestView.highlight(magnetProxy, {\n                    connecting: true,\n                    snapping: true\n                });\n            }\n\n        } else {\n\n            end = { x: x, y: y };\n        }\n\n        this.model.set(endType, end || { x: x, y: y }, { ui: true });\n\n        if (prevClosestView) {\n            this.notify('link:snap:disconnect', evt, prevClosestView, prevClosestMagnet, endType);\n        }\n        if (closestView) {\n            this.notify('link:snap:connect', evt, closestView, closestMagnet, endType);\n        }\n\n        return isSnapped;\n    },\n\n    _snapArrowheadEnd: function(data) {\n\n        // Finish off link snapping.\n        // Everything except view unhighlighting was already done on pointermove.\n        var closestView = data.closestView;\n        var closestMagnet = data.closestMagnet;\n        if (closestView && closestMagnet) {\n\n            closestView.unhighlight(data.magnetProxy, { connecting: true, snapping: true });\n            data.magnetUnderPointer = closestView.findMagnet(closestMagnet);\n        }\n\n        data.closestView = data.closestMagnet = null;\n    },\n\n    _connectArrowhead: function(target, x, y, data) {\n\n        // checking views right under the pointer\n        const { paper, model } = this;\n\n        if (data.eventTarget !== target) {\n            // Unhighlight the previous view under pointer if there was one.\n            if (data.magnetProxy) {\n                data.viewUnderPointer.unhighlight(data.magnetProxy, {\n                    connecting: true\n                });\n            }\n\n            const viewUnderPointer = data.viewUnderPointer = paper.findView(target);\n            if (viewUnderPointer) {\n                // If we found a view that is under the pointer, we need to find the closest\n                // magnet based on the real target element of the event.\n                const magnetUnderPointer = data.magnetUnderPointer = viewUnderPointer.findMagnet(target);\n                const magnetProxy = data.magnetProxy = viewUnderPointer.findProxyNode(magnetUnderPointer, 'highlighter');\n\n                if (magnetUnderPointer && this.paper.options.validateConnection.apply(\n                    paper,\n                    data.validateConnectionArgs(viewUnderPointer, magnetUnderPointer)\n                )) {\n                    // If there was no magnet found, do not highlight anything and assume there\n                    // is no view under pointer we're interested in reconnecting to.\n                    // This can only happen if the overall element has the attribute `'.': { magnet: false }`.\n                    if (magnetProxy) {\n                        viewUnderPointer.highlight(magnetProxy, {\n                            connecting: true\n                        });\n                    }\n                } else {\n                    // This type of connection is not valid. Disregard this magnet.\n                    data.magnetUnderPointer = null;\n                    data.magnetProxy = null;\n                }\n            } else {\n                // Make sure we'll unset previous magnet.\n                data.magnetUnderPointer = null;\n                data.magnetProxy = null;\n            }\n        }\n\n        data.eventTarget = target;\n\n        model.set(data.arrowhead, { x: x, y: y }, { ui: true });\n    },\n\n    _connectArrowheadEnd: function(data = {}, x, y) {\n\n        const { model } = this;\n        const { viewUnderPointer, magnetUnderPointer, magnetProxy, arrowhead } = data;\n\n        if (!magnetUnderPointer || !magnetProxy || !viewUnderPointer) return;\n\n        viewUnderPointer.unhighlight(magnetProxy, { connecting: true });\n\n        // The link end is taken from the magnet under the pointer, not the proxy.\n        const end = viewUnderPointer.getLinkEnd(magnetUnderPointer, x, y, model, arrowhead);\n        model.set(arrowhead, end, { ui: true });\n    },\n\n    _beforeArrowheadMove: function(data) {\n\n        data.z = this.model.get('z');\n        this.model.toFront();\n\n        // Let the pointer propagate through the link view elements so that\n        // the `evt.target` is another element under the pointer, not the link itself.\n        var style = this.el.style;\n        data.pointerEvents = style.pointerEvents;\n        style.pointerEvents = 'none';\n\n        if (this.paper.options.markAvailable) {\n            this._markAvailableMagnets(data);\n        }\n    },\n\n    _afterArrowheadMove: function(data) {\n\n        if (data.z !== null) {\n            this.model.set('z', data.z, { ui: true });\n            data.z = null;\n        }\n\n        // Put `pointer-events` back to its original value. See `_beforeArrowheadMove()` for explanation.\n        this.el.style.pointerEvents = data.pointerEvents;\n\n        if (this.paper.options.markAvailable) {\n            this._unmarkAvailableMagnets(data);\n        }\n    },\n\n    _createValidateConnectionArgs: function(arrowhead) {\n        // It makes sure the arguments for validateConnection have the following form:\n        // (source view, source magnet, target view, target magnet and link view)\n        var args = [];\n\n        args[4] = arrowhead;\n        args[5] = this;\n\n        var oppositeArrowhead;\n        var i = 0;\n        var j = 0;\n\n        if (arrowhead === 'source') {\n            i = 2;\n            oppositeArrowhead = 'target';\n        } else {\n            j = 2;\n            oppositeArrowhead = 'source';\n        }\n\n        var end = this.model.get(oppositeArrowhead);\n\n        if (end.id) {\n            var view = args[i] = this.paper.findViewByModel(end.id);\n            var magnet = view.getMagnetFromLinkEnd(end);\n            if (magnet === view.el) magnet = undefined;\n            args[i + 1] = magnet;\n        }\n\n        function validateConnectionArgs(cellView, magnet) {\n            args[j] = cellView;\n            args[j + 1] = cellView.el === magnet ? undefined : magnet;\n            return args;\n        }\n\n        return validateConnectionArgs;\n    },\n\n    _markAvailableMagnets: function(data) {\n\n        function isMagnetAvailable(view, magnet) {\n            var paper = view.paper;\n            var validate = paper.options.validateConnection;\n            return validate.apply(paper, this.validateConnectionArgs(view, magnet));\n        }\n\n        var paper = this.paper;\n        var elements = paper.model.getCells();\n        data.marked = {};\n\n        for (var i = 0, n = elements.length; i < n; i++) {\n            var view = elements[i].findView(paper);\n\n            if (!view) {\n                continue;\n            }\n\n            var magnets = Array.prototype.slice.call(view.el.querySelectorAll('[magnet]'));\n            if (view.el.getAttribute('magnet') !== 'false') {\n                // Element wrapping group is also a magnet\n                magnets.push(view.el);\n            }\n\n            var availableMagnets = magnets.filter(isMagnetAvailable.bind(data, view));\n\n            if (availableMagnets.length > 0) {\n                // highlight all available magnets\n                for (var j = 0, m = availableMagnets.length; j < m; j++) {\n                    view.highlight(availableMagnets[j], { magnetAvailability: true });\n                }\n                // highlight the entire view\n                view.highlight(null, { elementAvailability: true });\n\n                data.marked[view.model.id] = availableMagnets;\n            }\n        }\n    },\n\n    _unmarkAvailableMagnets: function(data) {\n\n        var markedKeys = Object.keys(data.marked);\n        var id;\n        var markedMagnets;\n\n        for (var i = 0, n = markedKeys.length; i < n; i++) {\n            id = markedKeys[i];\n            markedMagnets = data.marked[id];\n\n            var view = this.paper.findViewByModel(id);\n            if (view) {\n                for (var j = 0, m = markedMagnets.length; j < m; j++) {\n                    view.unhighlight(markedMagnets[j], { magnetAvailability: true });\n                }\n                view.unhighlight(null, { elementAvailability: true });\n            }\n        }\n\n        data.marked = null;\n    },\n\n    startArrowheadMove: function(end, opt) {\n\n        opt || (opt = {});\n\n        // Allow to delegate events from an another view to this linkView in order to trigger arrowhead\n        // move without need to click on the actual arrowhead dom element.\n        var data = {\n            action: 'arrowhead-move',\n            arrowhead: end,\n            whenNotAllowed: opt.whenNotAllowed || 'revert',\n            initialMagnet: this[end + 'Magnet'] || (this[end + 'View'] ? this[end + 'View'].el : null),\n            initialEnd: clone(this.model.get(end)),\n            validateConnectionArgs: this._createValidateConnectionArgs(end)\n        };\n\n        this._beforeArrowheadMove(data);\n\n        if (opt.ignoreBackwardsCompatibility !== true) {\n            this._dragData = data;\n        }\n\n        return data;\n    },\n\n    // Lifecycle methods\n\n    onMount: function() {\n        CellView.prototype.onMount.apply(this, arguments);\n        this.mountLabels();\n    },\n\n    onDetach: function() {\n        CellView.prototype.onDetach.apply(this, arguments);\n        this.unmountLabels();\n    },\n\n    onRemove: function() {\n        CellView.prototype.onRemove.apply(this, arguments);\n        this.unmountLabels();\n    }\n\n}, {\n\n    Flags: Flags,\n});\n\nObject.defineProperty(LinkView.prototype, 'sourceBBox', {\n\n    enumerable: true,\n\n    get: function() {\n        var sourceView = this.sourceView;\n        if (!sourceView) {\n            var sourceDef = this.model.source();\n            return new Rect(sourceDef.x, sourceDef.y);\n        }\n        var sourceMagnet = this.sourceMagnet;\n        if (sourceView.isNodeConnection(sourceMagnet)) {\n            return new Rect(this.sourceAnchor);\n        }\n        return sourceView.getNodeBBox(sourceMagnet || sourceView.el);\n    }\n\n});\n\nObject.defineProperty(LinkView.prototype, 'targetBBox', {\n\n    enumerable: true,\n\n    get: function() {\n        var targetView = this.targetView;\n        if (!targetView) {\n            var targetDef = this.model.target();\n            return new Rect(targetDef.x, targetDef.y);\n        }\n        var targetMagnet = this.targetMagnet;\n        if (targetView.isNodeConnection(targetMagnet)) {\n            return new Rect(this.targetAnchor);\n        }\n        return targetView.getNodeBBox(targetMagnet || targetView.el);\n    }\n});\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8640, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8646, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/layers/GridLayer.mjs"],"sourcesContent":["import { PaperLayer } from '../PaperLayer.mjs';\nimport {\n    isFunction,\n    isString,\n    defaults,\n    omit,\n    assign,\n    merge,\n} from '../../util/index.mjs';\nimport V from '../../V/index.mjs';\n\nexport const GridLayer = PaperLayer.extend({\n\n    style: {\n        'pointer-events': 'none'\n    },\n\n    _gridCache: null,\n    _gridSettings: null,\n\n    init() {\n        PaperLayer.prototype.init.apply(this, arguments);\n        const { options: { paper }} = this;\n        this._gridCache = null;\n        this._gridSettings = [];\n        this.listenTo(paper, 'transform resize', this.updateGrid);\n    },\n\n    setGrid(drawGrid) {\n        this._gridSettings = this.getGridSettings(drawGrid);\n        this.renderGrid();\n    },\n\n    getGridSettings(drawGrid) {\n        const gridSettings = [];\n        if (drawGrid) {\n            const optionsList = Array.isArray(drawGrid) ? drawGrid : [drawGrid || {}];\n            optionsList.forEach((item) => {\n                gridSettings.push(...this._resolveDrawGridOption(item));\n            });\n        }\n        return gridSettings;\n    },\n\n    removeGrid() {\n        const { _gridCache: grid } = this;\n        if (!grid) return;\n        grid.root.remove();\n        this._gridCache = null;\n    },\n\n    renderGrid() {\n\n        const { options: { paper }} = this;\n        const { _gridSettings: gridSettings } = this;\n\n        this.removeGrid();\n\n        if (gridSettings.length === 0) return;\n\n        const gridSize = paper.options.drawGridSize || paper.options.gridSize;\n        if (gridSize <= 1) {\n            return;\n        }\n\n        const refs = this._getGridRefs();\n\n        gridSettings.forEach((gridLayerSetting, index) => {\n\n            const id = this._getPatternId(index);\n            const options = merge({}, gridLayerSetting);\n            const { scaleFactor = 1 } = options;\n            options.width = gridSize * scaleFactor || 1;\n            options.height = gridSize * scaleFactor || 1;\n\n            let vPattern;\n            if (!refs.exist(id)) {\n                vPattern = V('pattern', { id: id, patternUnits: 'userSpaceOnUse' }, V(options.markup));\n                refs.add(id, vPattern);\n            } else {\n                vPattern = refs.get(id);\n            }\n\n            if (isFunction(options.render)) {\n                options.render(vPattern.node.firstChild, options, paper);\n            }\n            vPattern.attr({\n                width: options.width,\n                height: options.height\n            });\n        });\n\n        refs.root.appendTo(this.el);\n        this.updateGrid();\n    },\n\n    updateGrid() {\n\n        const { _gridCache: grid, _gridSettings: gridSettings, options: { paper }} = this;\n        if (!grid) return;\n        const { root: vSvg, patterns } = grid;\n        const { x, y, width, height } = paper.getArea();\n        vSvg.attr({ x, y, width, height });\n        for (const patternId in patterns) {\n            const vPattern = patterns[patternId];\n            vPattern.attr({ x: -x, y: -y });\n        }\n        gridSettings.forEach((options, index) => {\n            if (isFunction(options.update)) {\n                const vPattern = patterns[this._getPatternId(index)];\n                options.update(vPattern.node.firstChild, options, paper);\n            }\n        });\n    },\n\n    _getPatternId(index) {\n        return `pattern_${this.options.paper.cid}_${index}`;\n    },\n\n    _getGridRefs() {\n        let { _gridCache: grid } = this;\n        if (grid) return grid;\n        const defsVEl = V('defs');\n        const svgVEl = V('svg', { width: '100%', height: '100%' }, [defsVEl]);\n        grid = this._gridCache = {\n            root: svgVEl,\n            patterns: {},\n            add: function(id, patternVEl) {\n                const rectVEl = V('rect', { width: '100%', height: '100%', fill: `url(#${id})` });\n                defsVEl.append(patternVEl);\n                svgVEl.append(rectVEl);\n                this.patterns[id] = patternVEl;\n            },\n            get: function(id) {\n                return this.patterns[id];\n            },\n            exist: function(id) {\n                return this.patterns[id] !== undefined;\n            }\n        };\n        return grid;\n    },\n\n    _resolveDrawGridOption(opt) {\n\n        var namespace = this.options.patterns;\n        if (isString(opt) && Array.isArray(namespace[opt])) {\n            return namespace[opt].map(function(item) {\n                return assign({}, item);\n            });\n        }\n\n        var options = opt || { args: [{}] };\n        var isArray = Array.isArray(options);\n        var name = options.name;\n\n        if (!isArray && !name && !options.markup) {\n            name = 'dot';\n        }\n\n        if (name && Array.isArray(namespace[name])) {\n            var pattern = namespace[name].map(function(item) {\n                return assign({}, item);\n            });\n\n            var args = Array.isArray(options.args) ? options.args : [options.args || {}];\n\n            defaults(args[0], omit(opt, 'args'));\n            for (var i = 0; i < args.length; i++) {\n                if (pattern[i]) {\n                    assign(pattern[i], args[i]);\n                }\n            }\n            return pattern;\n        }\n\n        return isArray ? options : [options];\n    },\n\n});\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8824, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8830, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/Paper.mjs"],"sourcesContent":["import V from '../V/index.mjs';\nimport {\n    isNumber,\n    assign,\n    nextFrame,\n    isObject,\n    cancelFrame,\n    defaults,\n    defaultsDeep,\n    addClassNamePrefix,\n    normalizeSides,\n    isFunction,\n    isPlainObject,\n    getByPath,\n    sortElements,\n    isString,\n    guid,\n    normalizeEvent,\n    normalizeWheel,\n    cap,\n    debounce,\n    omit,\n    result,\n    camelCase,\n    cloneDeep,\n    invoke,\n    hashCode,\n    filter as _filter,\n    parseDOMJSON,\n    toArray,\n    has\n} from '../util/index.mjs';\nimport { ViewBase } from '../mvc/ViewBase.mjs';\nimport { Rect, Point, toRad } from '../g/index.mjs';\nimport { View, views } from '../mvc/index.mjs';\nimport { CellView } from './CellView.mjs';\nimport { ElementView } from './ElementView.mjs';\nimport { LinkView } from './LinkView.mjs';\nimport { Cell } from './Cell.mjs';\nimport { Graph } from './Graph.mjs';\nimport { LayersNames, PaperLayer } from './PaperLayer.mjs';\nimport * as highlighters from '../highlighters/index.mjs';\nimport * as linkAnchors from '../linkAnchors/index.mjs';\nimport * as connectionPoints from '../connectionPoints/index.mjs';\nimport * as anchors from '../anchors/index.mjs';\n\nimport $ from '../mvc/Dom/index.mjs';\nimport { GridLayer } from './layers/GridLayer.mjs';\n\nconst sortingTypes = {\n    NONE: 'sorting-none',\n    APPROX: 'sorting-approximate',\n    EXACT: 'sorting-exact'\n};\n\nconst WHEEL_CAP = 50;\nconst WHEEL_WAIT_MS = 20;\nconst MOUNT_BATCH_SIZE = 1000;\nconst UPDATE_BATCH_SIZE = Infinity;\nconst MIN_PRIORITY = 9007199254740991; // Number.MAX_SAFE_INTEGER\n\nconst HighlightingTypes = CellView.Highlighting;\n\nconst defaultHighlighting = {\n    [HighlightingTypes.DEFAULT]: {\n        name: 'stroke',\n        options: {\n            padding: 3\n        }\n    },\n    [HighlightingTypes.MAGNET_AVAILABILITY]: {\n        name: 'addClass',\n        options: {\n            className: 'available-magnet'\n        }\n    },\n    [HighlightingTypes.ELEMENT_AVAILABILITY]: {\n        name: 'addClass',\n        options: {\n            className: 'available-cell'\n        }\n    }\n};\n\nconst defaultLayers = [{\n    name: LayersNames.GRID,\n}, {\n    name: LayersNames.BACK,\n}, {\n    name: LayersNames.CELLS,\n}, {\n    name: LayersNames.LABELS,\n}, {\n    name: LayersNames.FRONT\n}, {\n    name: LayersNames.TOOLS\n}];\n\nexport const Paper = View.extend({\n\n    className: 'paper',\n\n    options: {\n\n        width: 800,\n        height: 600,\n        gridSize: 1,\n        // Whether or not to draw the grid lines on the paper's DOM element.\n        // e.g drawGrid: true, drawGrid: { color: 'red', thickness: 2 }\n        drawGrid: false,\n        // If not set, the size of the visual grid is the same as the `gridSize`.\n        drawGridSize: null,\n\n        // Whether or not to draw the background on the paper's DOM element.\n        // e.g. background: { color: 'lightblue', image: '/paper-background.png', repeat: 'flip-xy' }\n        background: false,\n\n        elementView: ElementView,\n        linkView: LinkView,\n        snapLabels: false, // false, true\n        snapLinks: false, // false, true, { radius: value }\n        snapLinksSelf: false, // false, true, { radius: value }\n\n        // Should the link labels be rendered into its own layer?\n        // `false` - the labels are part of the links\n        // `true` - the labels are appended to LayersName.LABELS\n        // [LayersName] - the labels are appended to the layer specified\n        labelsLayer: false,\n\n        // When set to FALSE, an element may not have more than 1 link with the same source and target element.\n        multiLinks: true,\n\n        // For adding custom guard logic.\n        guard: function(evt, view) {\n\n            // FALSE means the event isn't guarded.\n            return false;\n        },\n\n        highlighting: defaultHighlighting,\n\n        // Prevent the default context menu from being displayed.\n        preventContextMenu: true,\n\n        // Prevent the default action for blank:pointer<action>.\n        preventDefaultBlankAction: true,\n\n        // Prevent the default action for cell:pointer<action>.\n        preventDefaultViewAction: true,\n\n        // Restrict the translation of elements by given bounding box.\n        // Option accepts a boolean:\n        //  true - the translation is restricted to the paper area\n        //  false - no restrictions\n        // A method:\n        // restrictTranslate: function(elementView) {\n        //     var parentId = elementView.model.get('parent');\n        //     return parentId && this.model.getCell(parentId).getBBox();\n        // },\n        // Or a bounding box:\n        // restrictTranslate: { x: 10, y: 10, width: 790, height: 590 }\n        restrictTranslate: false,\n\n        // Marks all available magnets with 'available-magnet' class name and all available cells with\n        // 'available-cell' class name. Marks them when dragging a link is started and unmark\n        // when the dragging is stopped.\n        markAvailable: false,\n\n        // Defines what link model is added to the graph after an user clicks on an active magnet.\n        // Value could be the mvc.model or a function returning the mvc.model\n        // defaultLink: (elementView, magnet) => {\n        //   return condition ? new customLink1() : new customLink2()\n        // }\n        defaultLink: function() {\n            // Do not create hard dependency on the joint.shapes.standard namespace (by importing the standard.Link model directly)\n            const { cellNamespace } = this.model.get('cells');\n            const ctor = getByPath(cellNamespace, ['standard', 'Link']);\n            if (!ctor) throw new Error('dia.Paper: no default link model found. Use `options.defaultLink` to specify a default link model.');\n            return new ctor();\n        },\n\n        // A connector that is used by links with no connector defined on the model.\n        // e.g. { name: 'rounded', args: { radius: 5 }} or a function\n        defaultConnector: { name: 'normal' },\n\n        // A router that is used by links with no router defined on the model.\n        // e.g. { name: 'oneSide', args: { padding: 10 }} or a function\n        defaultRouter: { name: 'normal' },\n\n        defaultAnchor: { name: 'center' },\n\n        defaultLinkAnchor: { name: 'connectionRatio' },\n\n        defaultConnectionPoint: { name: 'boundary' },\n\n        /* CONNECTING */\n\n        connectionStrategy: null,\n\n        // Check whether to add a new link to the graph when user clicks on an a magnet.\n        validateMagnet: function(_cellView, magnet, _evt) {\n            return magnet.getAttribute('magnet') !== 'passive';\n        },\n\n        // Check whether to allow or disallow the link connection while an arrowhead end (source/target)\n        // being changed.\n        validateConnection: function(cellViewS, _magnetS, cellViewT, _magnetT, end, _linkView) {\n            return (end === 'target' ? cellViewT : cellViewS) instanceof ElementView;\n        },\n\n        /* EMBEDDING */\n\n        // Enables embedding. Re-parent the dragged element with elements under it and makes sure that\n        // all links and elements are visible taken the level of embedding into account.\n        embeddingMode: false,\n\n        // Check whether to allow or disallow the element embedding while an element being translated.\n        validateEmbedding: function(childView, parentView) {\n            // by default all elements can be in relation child-parent\n            return true;\n        },\n\n        // Check whether to allow or disallow an embedded element to be unembedded / to become a root.\n        validateUnembedding: function(childView) {\n            // by default all elements can become roots\n            return true;\n        },\n\n        // Determines the way how a cell finds a suitable parent when it's dragged over the paper.\n        // The cell with the highest z-index (visually on the top) will be chosen.\n        findParentBy: 'bbox', // 'bbox'|'center'|'origin'|'corner'|'topRight'|'bottomLeft'\n\n        // If enabled only the element on the very front is taken into account for the embedding.\n        // If disabled the elements under the dragged view are tested one by one\n        // (from front to back) until a valid parent found.\n        frontParentOnly: true,\n\n        // Interactive flags. See online docs for the complete list of interactive flags.\n        interactive: {\n            labelMove: false\n        },\n\n        // When set to true the links can be pinned to the paper.\n        // i.e. link source/target can be a point e.g. link.get('source') ==> { x: 100, y: 100 };\n        linkPinning: true,\n\n        // Custom validation after an interaction with a link ends.\n        // Recognizes a function. If `false` is returned, the link is disallowed (removed or reverted)\n        // (linkView, paper) => boolean\n        allowLink: null,\n\n        // Allowed number of mousemove events after which the pointerclick event will be still triggered.\n        clickThreshold: 0,\n\n        // Number of required mousemove events before the first pointermove event will be triggered.\n        moveThreshold: 0,\n\n        // Number of required mousemove events before a link is created out of the magnet.\n        // Or string `onleave` so the link is created when the pointer leaves the magnet\n        magnetThreshold: 0,\n\n        // Rendering Options\n\n        sorting: sortingTypes.APPROX,\n\n        frozen: false,\n\n        autoFreeze: false,\n\n        // no docs yet\n        onViewUpdate: function(view, flag, priority, opt, paper) {\n            // Do not update connected links when:\n            // 1. the view was just inserted (added to the graph and rendered)\n            // 2. the view was just mounted (added back to the paper by viewport function)\n            // 3. the change was marked as `isolate`.\n            // 4. the view model was just removed from the graph\n            if ((flag & (view.FLAG_INSERT | view.FLAG_REMOVE)) || opt.mounting || opt.isolate) return;\n            paper.requestConnectedLinksUpdate(view, priority, opt);\n        },\n\n        // no docs yet\n        onViewPostponed: function(view, flag, paper) {\n            return paper.forcePostponedViewUpdate(view, flag);\n        },\n\n        beforeRender: null, // function(opt, paper) { },\n\n        afterRender: null, // function(stats, opt, paper) {\n\n        viewport: null,\n\n        // Default namespaces\n\n        cellViewNamespace: null,\n\n        routerNamespace: null,\n\n        connectorNamespace: null,\n\n        highlighterNamespace: highlighters,\n\n        anchorNamespace: anchors,\n\n        linkAnchorNamespace: linkAnchors,\n\n        connectionPointNamespace: connectionPoints,\n\n        overflow: false\n    },\n\n    events: {\n        'dblclick': 'pointerdblclick',\n        'dbltap': 'pointerdblclick',\n        'contextmenu': 'contextmenu',\n        'mousedown': 'pointerdown',\n        'touchstart': 'pointerdown',\n        'mouseover': 'mouseover',\n        'mouseout': 'mouseout',\n        'mouseenter': 'mouseenter',\n        'mouseleave': 'mouseleave',\n        'wheel': 'mousewheel',\n        'mouseenter .joint-cell': 'mouseenter',\n        'mouseleave .joint-cell': 'mouseleave',\n        'mouseenter .joint-tools': 'mouseenter',\n        'mouseleave .joint-tools': 'mouseleave',\n        'dblclick .joint-cell [magnet]': 'magnetpointerdblclick',\n        'contextmenu .joint-cell [magnet]': 'magnetcontextmenu',\n        'mousedown .joint-link .label': 'onlabel', // interaction with link label\n        'touchstart .joint-link .label': 'onlabel',\n        'dragstart .joint-cell image': 'onImageDragStart' // firefox fix\n    },\n\n    documentEvents: {\n        'mousemove': 'pointermove',\n        'touchmove': 'pointermove',\n        'mouseup': 'pointerup',\n        'touchend': 'pointerup',\n        'touchcancel': 'pointerup'\n    },\n\n    /* CSS within the SVG document\n    * 1. Adding vector-effect: non-scaling-stroke; to prevent the stroke width from scaling for\n    *    elements that use the `scalable` group.\n    */\n    stylesheet: /*css*/`\n        .joint-element .scalable * {\n            vector-effect: non-scaling-stroke;\n        }\n    `,\n\n    svg: null,\n    viewport: null,\n    defs: null,\n    tools: null,\n    layers: null,\n\n    // For storing the current transformation matrix (CTM) of the paper's viewport.\n    _viewportMatrix: null,\n    // For verifying whether the CTM is up-to-date. The viewport transform attribute\n    // could have been manipulated directly.\n    _viewportTransformString: null,\n    // Updates data (priorities, unmounted views etc.)\n    _updates: null,\n    // Paper Layers\n    _layers: null,\n\n    SORT_DELAYING_BATCHES: ['add', 'to-front', 'to-back'],\n    UPDATE_DELAYING_BATCHES: ['translate'],\n    // If you interact with these elements,\n    // the default interaction such as `element move` is prevented.\n    FORM_CONTROL_TAG_NAMES: ['TEXTAREA', 'INPUT', 'BUTTON', 'SELECT', 'OPTION'] ,\n    // If you interact with these elements, the events are not propagated to the paper\n    // i.e. paper events such as `element:pointerdown` are not triggered.\n    GUARDED_TAG_NAMES: [\n        // Guard <select> for consistency. When you click on it:\n        // Chrome: triggers `pointerdown`, `pointerup`, `pointerclick` to open\n        // Firefox: triggers `pointerdown` on open, `pointerup` (and `pointerclick` only if you haven't moved).\n        //          on close. However, if you open and then close by clicking elsewhere on the page,\n        //           no other event is triggered.\n        // Safari: when you open it, it triggers `pointerdown`. That's it.\n        'SELECT',\n    ],\n    MIN_SCALE: 1e-6,\n\n    // Default find buffer for the findViewsInArea and findViewsAtPoint methods.\n    // The find buffer is used to extend the area of the search\n    // to mitigate the differences between the model and view geometry.\n    DEFAULT_FIND_BUFFER: 200,\n\n    init: function() {\n\n        const { options } = this;\n        if (!options.cellViewNamespace) {\n            /* eslint-disable no-undef */\n            options.cellViewNamespace = typeof joint !== 'undefined' && has(joint, 'shapes') ? joint.shapes : null;\n            /* eslint-enable no-undef */\n        }\n\n        const model = this.model = options.model || new Graph;\n\n        // Layers (SVGGroups)\n        this._layers = {};\n\n        this.cloneOptions();\n        this.render();\n        this._setDimensions();\n        this.startListening();\n\n        // Hash of all cell views.\n        this._views = {};\n\n        // Mouse wheel events buffer\n        this._mw_evt_buffer = {\n            event: null,\n            deltas: [],\n        };\n\n        // Render existing cells in the graph\n        this.resetViews(model.attributes.cells.models);\n        // Start the Rendering Loop\n        if (!this.isFrozen() && this.isAsync()) this.updateViewsAsync();\n    },\n\n    _resetUpdates: function() {\n        if (this._updates && this._updates.id) cancelFrame(this._updates.id);\n\n        return this._updates = {\n            id: null,\n            priorities: [{}, {}, {}],\n            unmountedCids: [],\n            mountedCids: [],\n            unmounted: {},\n            mounted: {},\n            count: 0,\n            keyFrozen: false,\n            freezeKey: null,\n            sort: false,\n            disabled: false,\n            idle: false\n        };\n    },\n\n    startListening: function() {\n        var model = this.model;\n        this.listenTo(model, 'add', this.onCellAdded)\n            .listenTo(model, 'remove', this.onCellRemoved)\n            .listenTo(model, 'change', this.onCellChange)\n            .listenTo(model, 'reset', this.onGraphReset)\n            .listenTo(model, 'sort', this.onGraphSort)\n            .listenTo(model, 'batch:stop', this.onGraphBatchStop);\n        this.on('cell:highlight', this.onCellHighlight)\n            .on('cell:unhighlight', this.onCellUnhighlight)\n            .on('transform', this.update);\n    },\n\n    onCellAdded: function(cell, _, opt) {\n        var position = opt.position;\n        if (this.isAsync() || !isNumber(position)) {\n            this.renderView(cell, opt);\n        } else {\n            if (opt.maxPosition === position) this.freeze({ key: 'addCells' });\n            this.renderView(cell, opt);\n            if (position === 0) this.unfreeze({ key: 'addCells' });\n        }\n    },\n\n    onCellRemoved: function(cell, _, opt) {\n        const view = this.findViewByModel(cell);\n        if (view) this.requestViewUpdate(view, view.FLAG_REMOVE, view.UPDATE_PRIORITY, opt);\n    },\n\n    onCellChange: function(cell, opt) {\n        if (cell === this.model.attributes.cells) return;\n        if (cell.hasChanged('z') && this.options.sorting === sortingTypes.APPROX) {\n            const view = this.findViewByModel(cell);\n            if (view) this.requestViewUpdate(view, view.FLAG_INSERT, view.UPDATE_PRIORITY, opt);\n        }\n    },\n\n    onGraphReset: function(collection, opt) {\n        this.resetLayers();\n        this.resetViews(collection.models, opt);\n    },\n\n    onGraphSort: function() {\n        if (this.model.hasActiveBatch(this.SORT_DELAYING_BATCHES)) return;\n        this.sortViews();\n    },\n\n    onGraphBatchStop: function(data) {\n        if (this.isFrozen()) return;\n        var name = data && data.batchName;\n        var graph = this.model;\n        if (!this.isAsync()) {\n            var updateDelayingBatches = this.UPDATE_DELAYING_BATCHES;\n            if (updateDelayingBatches.includes(name) && !graph.hasActiveBatch(updateDelayingBatches)) {\n                this.updateViews(data);\n            }\n        }\n        var sortDelayingBatches = this.SORT_DELAYING_BATCHES;\n        if (sortDelayingBatches.includes(name) && !graph.hasActiveBatch(sortDelayingBatches)) {\n            this.sortViews();\n        }\n    },\n\n    cloneOptions: function() {\n\n        const { options } = this;\n        const {\n            defaultConnector,\n            defaultRouter,\n            defaultConnectionPoint,\n            defaultAnchor,\n            defaultLinkAnchor,\n            highlighting,\n            cellViewNamespace,\n            interactive\n        } = options;\n\n        // Default cellView namespace for ES5\n        /* eslint-disable no-undef */\n        if (!cellViewNamespace && typeof joint !== 'undefined' && has(joint, 'shapes')) {\n            options.cellViewNamespace = joint.shapes;\n        }\n        /* eslint-enable no-undef */\n\n        // Here if a function was provided, we can not clone it, as this would result in loosing the function.\n        // If the default is used, the cloning is necessary in order to prevent modifying the options on prototype.\n        if (!isFunction(defaultConnector)) {\n            options.defaultConnector = cloneDeep(defaultConnector);\n        }\n        if (!isFunction(defaultRouter)) {\n            options.defaultRouter = cloneDeep(defaultRouter);\n        }\n        if (!isFunction(defaultConnectionPoint)) {\n            options.defaultConnectionPoint = cloneDeep(defaultConnectionPoint);\n        }\n        if (!isFunction(defaultAnchor)) {\n            options.defaultAnchor = cloneDeep(defaultAnchor);\n        }\n        if (!isFunction(defaultLinkAnchor)) {\n            options.defaultLinkAnchor = cloneDeep(defaultLinkAnchor);\n        }\n        if (isPlainObject(interactive)) {\n            options.interactive = assign({}, interactive);\n        }\n        if (isPlainObject(highlighting)) {\n            // Return the default highlighting options into the user specified options.\n            options.highlighting = defaultsDeep({}, highlighting, defaultHighlighting);\n        }\n    },\n\n    children: function() {\n        var ns = V.namespace;\n        return [{\n            namespaceURI: ns.xhtml,\n            tagName: 'div',\n            className: addClassNamePrefix('paper-background'),\n            selector: 'background',\n            style: {\n                position: 'absolute',\n                inset: 0\n            }\n        }, {\n            namespaceURI: ns.svg,\n            tagName: 'svg',\n            attributes: {\n                'width': '100%',\n                'height': '100%',\n                'xmlns:xlink': ns.xlink\n            },\n            selector: 'svg',\n            style: {\n                position: 'absolute',\n                inset: 0\n            },\n            children: [{\n                // Append `<defs>` element to the SVG document. This is useful for filters and gradients.\n                // It's desired to have the defs defined before the viewport (e.g. to make a PDF document pick up defs properly).\n                tagName: 'defs',\n                selector: 'defs'\n            }, {\n                tagName: 'g',\n                className: addClassNamePrefix('layers'),\n                selector: 'layers'\n            }]\n        }];\n    },\n\n    hasLayerView(layerName) {\n        return  (layerName in this._layers);\n    },\n\n    getLayerView(layerName) {\n        const { _layers } = this;\n        if (layerName in _layers) return _layers[layerName];\n        throw new Error(`dia.Paper: Unknown layer \"${layerName}\"`);\n    },\n\n    getLayerNode(layerName) {\n        return this.getLayerView(layerName).el;\n    },\n\n    render: function() {\n\n        this.renderChildren();\n        const { el, childNodes, options, stylesheet } = this;\n        const { svg, defs, layers } = childNodes;\n\n        el.style.position = 'relative';\n        svg.style.overflow = options.overflow ? 'visible' : 'hidden';\n\n        this.svg = svg;\n        this.defs = defs;\n        this.layers = layers;\n\n        this.renderLayers();\n\n        V.ensureId(svg);\n\n        this.addStylesheet(stylesheet);\n\n        if (options.background) {\n            this.drawBackground(options.background);\n        }\n\n        if (options.drawGrid) {\n            this.setGrid(options.drawGrid);\n        }\n\n        return this;\n    },\n\n    addStylesheet: function(css) {\n        if (!css) return;\n        V(this.svg).prepend(V.createSVGStyle(css));\n    },\n\n    createLayer(name) {\n        switch (name) {\n            case LayersNames.GRID:\n                return new GridLayer({ name, paper: this, patterns: this.constructor.gridPatterns });\n            default:\n                return new PaperLayer({ name });\n        }\n    },\n\n    renderLayers: function(layers = defaultLayers) {\n        this.removeLayers();\n        // TODO: Layers to be read from the graph `layers` attribute\n        layers.forEach(({ name, sorted }) => {\n            const layerView = this.createLayer(name);\n            this.layers.appendChild(layerView.el);\n            this._layers[name] = layerView;\n        });\n        // Throws an exception if doesn't exist\n        const cellsLayerView = this.getLayerView(LayersNames.CELLS);\n        const toolsLayerView = this.getLayerView(LayersNames.TOOLS);\n        const labelsLayerView = this.getLayerView(LayersNames.LABELS);\n        // backwards compatibility\n        this.tools = toolsLayerView.el;\n        this.cells = this.viewport = cellsLayerView.el;\n        // user-select: none;\n        cellsLayerView.vel.addClass(addClassNamePrefix('viewport'));\n        labelsLayerView.vel.addClass(addClassNamePrefix('viewport'));\n        cellsLayerView.el.style.webkitUserSelect = 'none';\n        cellsLayerView.el.style.userSelect = 'none';\n        labelsLayerView.el.style.webkitUserSelect = 'none';\n        labelsLayerView.el.style.userSelect = 'none';\n    },\n\n    removeLayers: function() {\n        const { _layers } = this;\n        Object.keys(_layers).forEach(name => {\n            _layers[name].remove();\n            delete _layers[name];\n        });\n    },\n\n    resetLayers: function() {\n        const { _layers } = this;\n        Object.keys(_layers).forEach(name => {\n            _layers[name].removePivots();\n        });\n    },\n\n    update: function() {\n\n        if (this._background) {\n            this.updateBackgroundImage(this._background);\n        }\n\n        return this;\n    },\n\n    scale: function(sx, sy, data) {\n        const ctm = this.matrix();\n        // getter\n        if (sx === undefined) {\n            return V.matrixToScale(ctm);\n        }\n        // setter\n        if (sy === undefined) {\n            sy = sx;\n        }\n        sx = Math.max(sx || 0, this.MIN_SCALE);\n        sy = Math.max(sy || 0, this.MIN_SCALE);\n        ctm.a = sx;\n        ctm.d = sy;\n        this.matrix(ctm, data);\n        return this;\n    },\n\n    scaleUniformAtPoint: function(scale, point, data) {\n        const { a: sx, d: sy, e: tx, f: ty } = this.matrix();\n        scale = Math.max(scale || 0, this.MIN_SCALE);\n        if (scale === sx && scale === sy) {\n            // The scale is the same as the current one.\n            return this;\n        }\n        const matrix = V.createSVGMatrix()\n            .translate(\n                tx - point.x * (scale - sx),\n                ty - point.y * (scale - sy)\n            )\n            .scale(scale, scale);\n        this.matrix(matrix, data);\n        return this;\n    },\n\n    translate: function(tx, ty, data) {\n        const ctm = this.matrix();\n        // getter\n        if (tx === undefined) {\n            return V.matrixToTranslate(ctm);\n        }\n        // setter\n        tx || (tx = 0);\n        ty || (ty = 0);\n        if (ctm.e === tx && ctm.f === ty) return this;\n        ctm.e = tx;\n        ctm.f = ty;\n        this.matrix(ctm, data);\n        return this;\n    },\n\n    matrix: function(ctm, data = {}) {\n\n        var viewport = this.layers;\n\n        // Getter:\n        if (ctm === undefined) {\n\n            var transformString = viewport.getAttribute('transform');\n\n            if ((this._viewportTransformString || null) === transformString) {\n                // It's ok to return the cached matrix. The transform attribute has not changed since\n                // the matrix was stored.\n                ctm = this._viewportMatrix;\n            } else {\n                // The viewport transform attribute has changed. Measure the matrix and cache again.\n                ctm = viewport.getCTM();\n                this._viewportMatrix = ctm;\n                this._viewportTransformString = transformString;\n            }\n\n            // Clone the cached current transformation matrix.\n            // If no matrix previously stored the identity matrix is returned.\n            return V.createSVGMatrix(ctm);\n        }\n\n        // Setter:\n        const prev = this.matrix();\n        const current = V.createSVGMatrix(ctm);\n        const currentTransformString = this._viewportTransformString;\n        const ctmString = V.matrixToTransformString(current);\n        if (ctmString === currentTransformString) {\n            // The new transform string is the same as the current one.\n            // No need to update the transform attribute.\n            return this;\n        }\n        if (!currentTransformString && V.matrixToTransformString() === ctmString) {\n            // The current transform string is empty and the new one is an identity matrix.\n            // No need to update the transform attribute.\n            return this;\n        }\n\n        const { a, d, e, f } = current;\n\n        viewport.setAttribute('transform', ctmString);\n        this._viewportMatrix = current;\n        this._viewportTransformString = viewport.getAttribute('transform');\n\n        // scale event\n        if (a !== prev.a || d !== prev.d) {\n            this.trigger('scale', a, d, data);\n        }\n\n        // translate event\n        if (e !== prev.e || f !== prev.f) {\n            this.trigger('translate', e, f, data);\n        }\n\n        this.trigger('transform', current, data);\n        return this;\n    },\n\n    clientMatrix: function() {\n\n        return V.createSVGMatrix(this.cells.getScreenCTM());\n    },\n\n    requestConnectedLinksUpdate: function(view, priority, opt) {\n        if (view instanceof CellView) {\n            var model = view.model;\n            var links = this.model.getConnectedLinks(model);\n            for (var j = 0, n = links.length; j < n; j++) {\n                var link = links[j];\n                var linkView = this.findViewByModel(link);\n                if (!linkView) continue;\n                var flagLabels = ['UPDATE'];\n                if (link.getTargetCell() === model) flagLabels.push('TARGET');\n                if (link.getSourceCell() === model) flagLabels.push('SOURCE');\n                var nextPriority = Math.max(priority + 1, linkView.UPDATE_PRIORITY);\n                this.scheduleViewUpdate(linkView, linkView.getFlag(flagLabels), nextPriority, opt);\n            }\n        }\n    },\n\n    forcePostponedViewUpdate: function(view, flag) {\n        if (!view || !(view instanceof CellView)) return false;\n        var model = view.model;\n        if (model.isElement()) return false;\n        if ((flag & view.getFlag(['SOURCE', 'TARGET'])) === 0) {\n            var dumpOptions = { silent: true };\n            // LinkView is waiting for the target or the source cellView to be rendered\n            // This can happen when the cells are not in the viewport.\n            var sourceFlag = 0;\n            var sourceView = this.findViewByModel(model.getSourceCell());\n            if (sourceView && !this.isViewMounted(sourceView)) {\n                sourceFlag = this.dumpView(sourceView, dumpOptions);\n                view.updateEndMagnet('source');\n            }\n            var targetFlag = 0;\n            var targetView = this.findViewByModel(model.getTargetCell());\n            if (targetView && !this.isViewMounted(targetView)) {\n                targetFlag = this.dumpView(targetView, dumpOptions);\n                view.updateEndMagnet('target');\n            }\n            if (sourceFlag === 0 && targetFlag === 0) {\n                // If leftover flag is 0, all view updates were done.\n                return !this.dumpView(view, dumpOptions);\n            }\n        }\n        return false;\n    },\n\n    requestViewUpdate: function(view, flag, priority, opt) {\n        opt || (opt = {});\n        this.scheduleViewUpdate(view, flag, priority, opt);\n        var isAsync = this.isAsync();\n        if (this.isFrozen() || (isAsync && opt.async !== false)) return;\n        if (this.model.hasActiveBatch(this.UPDATE_DELAYING_BATCHES)) return;\n        var stats = this.updateViews(opt);\n        if (isAsync) this.notifyAfterRender(stats, opt);\n    },\n\n    scheduleViewUpdate: function(view, type, priority, opt) {\n        const { _updates: updates, options } = this;\n        if (updates.idle) {\n            if (options.autoFreeze) {\n                updates.idle = false;\n                this.unfreeze();\n            }\n        }\n        const { FLAG_REMOVE, FLAG_INSERT, UPDATE_PRIORITY, cid } = view;\n        let priorityUpdates = updates.priorities[priority];\n        if (!priorityUpdates) priorityUpdates = updates.priorities[priority] = {};\n        // Move higher priority updates to this priority\n        if (priority > UPDATE_PRIORITY) {\n            // Not the default priority for this view. It's most likely a link view\n            // connected to another link view, which triggered the update.\n            // TODO: If there is an update scheduled with a lower priority already, we should\n            // change the requested priority to the lowest one. Does not seem to be critical\n            // right now, as it \"only\" results in multiple updates on the same view.\n            for (let i = priority - 1; i >= UPDATE_PRIORITY; i--) {\n                const prevPriorityUpdates = updates.priorities[i];\n                if (!prevPriorityUpdates || !(cid in prevPriorityUpdates)) continue;\n                priorityUpdates[cid] |= prevPriorityUpdates[cid];\n                delete prevPriorityUpdates[cid];\n            }\n        }\n        let currentType = priorityUpdates[cid] || 0;\n        // Prevent cycling\n        if ((currentType & type) === type) return;\n        if (!currentType) updates.count++;\n        if (type & FLAG_REMOVE && currentType & FLAG_INSERT) {\n            // When a view is removed we need to remove the insert flag as this is a reinsert\n            priorityUpdates[cid] ^= FLAG_INSERT;\n        } else if (type & FLAG_INSERT && currentType & FLAG_REMOVE) {\n            // When a view is added we need to remove the remove flag as this is view was previously removed\n            priorityUpdates[cid] ^= FLAG_REMOVE;\n        }\n        priorityUpdates[cid] |= type;\n        const viewUpdateFn = options.onViewUpdate;\n        if (typeof viewUpdateFn === 'function') viewUpdateFn.call(this, view, type, priority, opt || {}, this);\n    },\n\n    dumpViewUpdate: function(view) {\n        if (!view) return 0;\n        var updates = this._updates;\n        var cid = view.cid;\n        var priorityUpdates = updates.priorities[view.UPDATE_PRIORITY];\n        var flag = this.registerMountedView(view) | priorityUpdates[cid];\n        delete priorityUpdates[cid];\n        return flag;\n    },\n\n    dumpView: function(view, opt = {}) {\n        const flag = this.dumpViewUpdate(view);\n        if (!flag) return 0;\n        const shouldNotify = !opt.silent;\n        if (shouldNotify) this.notifyBeforeRender(opt);\n        const leftover = this.updateView(view, flag, opt);\n        if (shouldNotify) {\n            const stats = { updated: 1, priority: view.UPDATE_PRIORITY };\n            this.notifyAfterRender(stats, opt);\n        }\n        return leftover;\n    },\n\n    updateView: function(view, flag, opt) {\n        if (!view) return 0;\n        const { FLAG_REMOVE, FLAG_INSERT, FLAG_INIT, model } = view;\n        if (view instanceof CellView) {\n            if (flag & FLAG_REMOVE) {\n                this.removeView(model);\n                return 0;\n            }\n            if (flag & FLAG_INSERT) {\n                const isInitialInsert = !!(flag & FLAG_INIT);\n                if (isInitialInsert) {\n                    flag ^= FLAG_INIT;\n                }\n                this.insertView(view, isInitialInsert);\n                flag ^= FLAG_INSERT;\n            }\n        }\n        if (!flag) return 0;\n        return view.confirmUpdate(flag, opt || {});\n    },\n\n    requireView: function(model, opt) {\n        var view = this.findViewByModel(model);\n        if (!view) return null;\n        this.dumpView(view, opt);\n        return view;\n    },\n\n    registerUnmountedView: function(view) {\n        var cid = view.cid;\n        var updates = this._updates;\n        if (cid in updates.unmounted) return 0;\n        var flag = updates.unmounted[cid] |= view.FLAG_INSERT;\n        updates.unmountedCids.push(cid);\n        delete updates.mounted[cid];\n        return flag;\n    },\n\n    registerMountedView: function(view) {\n        var cid = view.cid;\n        var updates = this._updates;\n        if (cid in updates.mounted) return 0;\n        updates.mounted[cid] = true;\n        updates.mountedCids.push(cid);\n        var flag = updates.unmounted[cid] || 0;\n        delete updates.unmounted[cid];\n        return flag;\n    },\n\n    isViewMounted: function(view) {\n        if (!view) return false;\n        var cid = view.cid;\n        var updates = this._updates;\n        return (cid in updates.mounted);\n    },\n\n    dumpViews: function(opt) {\n        var passingOpt = defaults({}, opt, { viewport: null });\n        this.checkViewport(passingOpt);\n        this.updateViews(passingOpt);\n    },\n\n    // Synchronous views update\n    updateViews: function(opt) {\n        this.notifyBeforeRender(opt);\n        let batchStats;\n        let updateCount = 0;\n        let batchCount = 0;\n        let priority = MIN_PRIORITY;\n        do {\n            batchCount++;\n            batchStats = this.updateViewsBatch(opt);\n            updateCount += batchStats.updated;\n            priority = Math.min(batchStats.priority, priority);\n        } while (!batchStats.empty);\n        const stats = { updated: updateCount, batches: batchCount, priority };\n        this.notifyAfterRender(stats, opt);\n        return stats;\n    },\n\n    hasScheduledUpdates: function() {\n        const priorities = this._updates.priorities;\n        const priorityIndexes = Object.keys(priorities); // convert priorities to a dense array\n        let i = priorityIndexes.length;\n        while (i > 0 && i--) {\n            // a faster way how to check if an object is empty\n            for (let _key in priorities[priorityIndexes[i]]) return true;\n        }\n        return false;\n    },\n\n    updateViewsAsync: function(opt, data) {\n        opt || (opt = {});\n        data || (data = { processed: 0, priority: MIN_PRIORITY });\n        const { _updates: updates, options } = this;\n        const id = updates.id;\n        if (id) {\n            cancelFrame(id);\n            if (data.processed === 0 && this.hasScheduledUpdates()) {\n                this.notifyBeforeRender(opt);\n            }\n            const stats = this.updateViewsBatch(opt);\n            const passingOpt = defaults({}, opt, {\n                mountBatchSize: MOUNT_BATCH_SIZE - stats.mounted,\n                unmountBatchSize: MOUNT_BATCH_SIZE - stats.unmounted\n            });\n            const checkStats = this.checkViewport(passingOpt);\n            const unmountCount = checkStats.unmounted;\n            const mountCount = checkStats.mounted;\n            let processed = data.processed;\n            const total = updates.count;\n            if (stats.updated > 0) {\n                // Some updates have been just processed\n                processed += stats.updated + stats.unmounted;\n                stats.processed = processed;\n                data.priority = Math.min(stats.priority, data.priority);\n                if (stats.empty && mountCount === 0) {\n                    stats.unmounted += unmountCount;\n                    stats.mounted += mountCount;\n                    stats.priority = data.priority;\n                    this.notifyAfterRender(stats, opt);\n                    data.processed = 0;\n                    data.priority = MIN_PRIORITY;\n                    updates.count = 0;\n                } else {\n                    data.processed = processed;\n                }\n            } else {\n                if (!updates.idle) {\n                    if (options.autoFreeze) {\n                        this.freeze();\n                        updates.idle = true;\n                        this.trigger('render:idle', opt);\n                    }\n                }\n            }\n            // Progress callback\n            const progressFn = opt.progress;\n            if (total && typeof progressFn === 'function') {\n                progressFn.call(this, stats.empty, processed, total, stats, this);\n            }\n            // The current frame could have been canceled in a callback\n            if (updates.id !== id) return;\n        }\n        if (updates.disabled) {\n            throw new Error('dia.Paper: can not unfreeze the paper after it was removed');\n        }\n        updates.id = nextFrame(this.updateViewsAsync, this, opt, data);\n    },\n\n    notifyBeforeRender: function(opt = {}) {\n        let beforeFn = opt.beforeRender;\n        if (typeof beforeFn !== 'function') {\n            beforeFn = this.options.beforeRender;\n            if (typeof beforeFn !== 'function') return;\n        }\n        beforeFn.call(this, opt, this);\n    },\n\n    notifyAfterRender: function(stats, opt = {}) {\n        let afterFn = opt.afterRender;\n        if (typeof afterFn !== 'function') {\n            afterFn = this.options.afterRender;\n        }\n        if (typeof afterFn === 'function') {\n            afterFn.call(this, stats, opt, this);\n        }\n        this.trigger('render:done', stats, opt);\n    },\n\n    updateViewsBatch: function(opt) {\n        opt || (opt = {});\n        var batchSize = opt.batchSize || UPDATE_BATCH_SIZE;\n        var updates = this._updates;\n        var updateCount = 0;\n        var postponeCount = 0;\n        var unmountCount = 0;\n        var mountCount = 0;\n        var maxPriority = MIN_PRIORITY;\n        var empty = true;\n        var options = this.options;\n        var priorities = updates.priorities;\n        var viewportFn = 'viewport' in opt ? opt.viewport : options.viewport;\n        if (typeof viewportFn !== 'function') viewportFn = null;\n        var postponeViewFn = options.onViewPostponed;\n        if (typeof postponeViewFn !== 'function') postponeViewFn = null;\n        var priorityIndexes = Object.keys(priorities); // convert priorities to a dense array\n        main: for (var i = 0, n = priorityIndexes.length; i < n; i++) {\n            var priority = +priorityIndexes[i];\n            var priorityUpdates = priorities[priority];\n            for (var cid in priorityUpdates) {\n                if (updateCount >= batchSize) {\n                    empty = false;\n                    break main;\n                }\n                var view = views[cid];\n                if (!view) {\n                    // This should not occur\n                    delete priorityUpdates[cid];\n                    continue;\n                }\n                var currentFlag = priorityUpdates[cid];\n                if ((currentFlag & view.FLAG_REMOVE) === 0) {\n                    // We should never check a view for viewport if we are about to remove the view\n                    var isDetached = cid in updates.unmounted;\n                    if (view.DETACHABLE && viewportFn && !viewportFn.call(this, view, !isDetached, this)) {\n                        // Unmount View\n                        if (!isDetached) {\n                            this.registerUnmountedView(view);\n                            this.detachView(view);\n                        }\n                        updates.unmounted[cid] |= currentFlag;\n                        delete priorityUpdates[cid];\n                        unmountCount++;\n                        continue;\n                    }\n                    // Mount View\n                    if (isDetached) {\n                        currentFlag |= view.FLAG_INSERT;\n                        mountCount++;\n                    }\n                    currentFlag |= this.registerMountedView(view);\n                }\n                var leftoverFlag = this.updateView(view, currentFlag, opt);\n                if (leftoverFlag > 0) {\n                    // View update has not finished completely\n                    priorityUpdates[cid] = leftoverFlag;\n                    if (!postponeViewFn || !postponeViewFn.call(this, view, leftoverFlag, this) || priorityUpdates[cid]) {\n                        postponeCount++;\n                        empty = false;\n                        continue;\n                    }\n                }\n                if (maxPriority > priority) maxPriority = priority;\n                updateCount++;\n                delete priorityUpdates[cid];\n            }\n        }\n        return {\n            priority: maxPriority,\n            updated: updateCount,\n            postponed: postponeCount,\n            unmounted: unmountCount,\n            mounted: mountCount,\n            empty: empty\n        };\n    },\n\n    getUnmountedViews: function() {\n        const updates = this._updates;\n        const unmountedCids = Object.keys(updates.unmounted);\n        const n = unmountedCids.length;\n        const unmountedViews = new Array(n);\n        for (var i = 0; i < n; i++) {\n            unmountedViews[i] = views[unmountedCids[i]];\n        }\n        return unmountedViews;\n    },\n\n    getMountedViews: function() {\n        const updates = this._updates;\n        const mountedCids = Object.keys(updates.mounted);\n        const n = mountedCids.length;\n        const mountedViews = new Array(n);\n        for (var i = 0; i < n; i++) {\n            mountedViews[i] = views[mountedCids[i]];\n        }\n        return mountedViews;\n    },\n\n    checkUnmountedViews: function(viewportFn, opt) {\n        opt || (opt  = {});\n        var mountCount = 0;\n        if (typeof viewportFn !== 'function') viewportFn = null;\n        var batchSize = 'mountBatchSize' in opt ? opt.mountBatchSize : Infinity;\n        var updates = this._updates;\n        var unmountedCids = updates.unmountedCids;\n        var unmounted = updates.unmounted;\n        for (var i = 0, n = Math.min(unmountedCids.length, batchSize); i < n; i++) {\n            var cid = unmountedCids[i];\n            if (!(cid in unmounted)) continue;\n            var view = views[cid];\n            if (!view) continue;\n            if (view.DETACHABLE && viewportFn && !viewportFn.call(this, view, false, this)) {\n                // Push at the end of all unmounted ids, so this can be check later again\n                unmountedCids.push(cid);\n                continue;\n            }\n            mountCount++;\n            var flag = this.registerMountedView(view);\n            if (flag) this.scheduleViewUpdate(view, flag, view.UPDATE_PRIORITY, { mounting: true });\n        }\n        // Get rid of views, that have been mounted\n        unmountedCids.splice(0, i);\n        return mountCount;\n    },\n\n    checkMountedViews: function(viewportFn, opt) {\n        opt || (opt = {});\n        var unmountCount = 0;\n        if (typeof viewportFn !== 'function') return unmountCount;\n        var batchSize = 'unmountBatchSize' in opt ? opt.unmountBatchSize : Infinity;\n        var updates = this._updates;\n        var mountedCids = updates.mountedCids;\n        var mounted = updates.mounted;\n        for (var i = 0, n = Math.min(mountedCids.length, batchSize); i < n; i++) {\n            var cid = mountedCids[i];\n            if (!(cid in mounted)) continue;\n            var view = views[cid];\n            if (!view) continue;\n            if (!view.DETACHABLE || viewportFn.call(this, view, true, this)) {\n                // Push at the end of all mounted ids, so this can be check later again\n                mountedCids.push(cid);\n                continue;\n            }\n            unmountCount++;\n            var flag = this.registerUnmountedView(view);\n            if (flag) this.detachView(view);\n        }\n        // Get rid of views, that have been unmounted\n        mountedCids.splice(0, i);\n        return unmountCount;\n    },\n\n    checkViewVisibility: function(cellView, opt = {}) {\n        let viewportFn = 'viewport' in opt ? opt.viewport : this.options.viewport;\n        if (typeof viewportFn !== 'function') viewportFn = null;\n        const updates = this._updates;\n        const { mounted, unmounted } = updates;\n        const visible = !cellView.DETACHABLE || !viewportFn || viewportFn.call(this, cellView, false, this);\n\n        let isUnmounted = false;\n        let isMounted = false;\n\n        if (cellView.cid in mounted && !visible) {\n            const flag = this.registerUnmountedView(cellView);\n            if (flag) this.detachView(cellView);\n            const i = updates.mountedCids.indexOf(cellView.cid);\n            updates.mountedCids.splice(i, 1);\n            isUnmounted = true;\n        }\n\n        if (!isUnmounted && cellView.cid in unmounted && visible) {\n            const i = updates.unmountedCids.indexOf(cellView.cid);\n            updates.unmountedCids.splice(i, 1);\n            var flag = this.registerMountedView(cellView);\n            if (flag) this.scheduleViewUpdate(cellView, flag, cellView.UPDATE_PRIORITY, { mounting: true });\n            isMounted = true;\n        }\n\n        return {\n            mounted: isMounted ? 1 : 0,\n            unmounted: isUnmounted ? 1 : 0\n        };\n    },\n\n    checkViewport: function(opt) {\n        var passingOpt = defaults({}, opt, {\n            mountBatchSize: Infinity,\n            unmountBatchSize: Infinity\n        });\n        var viewportFn = 'viewport' in passingOpt ? passingOpt.viewport : this.options.viewport;\n        var unmountedCount = this.checkMountedViews(viewportFn, passingOpt);\n        if (unmountedCount > 0) {\n            // Do not check views, that have been just unmounted and pushed at the end of the cids array\n            var unmountedCids = this._updates.unmountedCids;\n            passingOpt.mountBatchSize = Math.min(unmountedCids.length - unmountedCount, passingOpt.mountBatchSize);\n        }\n        var mountedCount = this.checkUnmountedViews(viewportFn, passingOpt);\n        return {\n            mounted: mountedCount,\n            unmounted: unmountedCount\n        };\n    },\n\n    freeze: function(opt) {\n        opt || (opt = {});\n        var updates = this._updates;\n        var key = opt.key;\n        var isFrozen = this.options.frozen;\n        var freezeKey = updates.freezeKey;\n        if (key && key !== freezeKey)  {\n            // key passed, but the paper is already freezed with another key\n            if (isFrozen && freezeKey) return;\n            updates.freezeKey = key;\n            updates.keyFrozen = isFrozen;\n        }\n        this.options.frozen = true;\n        var id = updates.id;\n        updates.id = null;\n        if (this.isAsync() && id) cancelFrame(id);\n    },\n\n    unfreeze: function(opt) {\n        opt || (opt = {});\n        var updates = this._updates;\n        var key = opt.key;\n        var freezeKey = updates.freezeKey;\n        // key passed, but the paper is already freezed with another key\n        if (key && freezeKey && key !== freezeKey) return;\n        updates.freezeKey = null;\n        // key passed, but the paper is already freezed\n        if (key && key === freezeKey && updates.keyFrozen) return;\n        if (this.isAsync()) {\n            this.freeze();\n            this.updateViewsAsync(opt);\n        } else {\n            this.updateViews(opt);\n        }\n        this.options.frozen = updates.keyFrozen = false;\n        if (updates.sort) {\n            this.sortViews();\n            updates.sort = false;\n        }\n    },\n\n    isAsync: function() {\n        return !!this.options.async;\n    },\n\n    isFrozen: function() {\n        return !!this.options.frozen;\n    },\n\n    isExactSorting: function() {\n        return this.options.sorting === sortingTypes.EXACT;\n    },\n\n    onRemove: function() {\n\n        this.freeze();\n        this._updates.disabled = true;\n        //clean up all DOM elements/views to prevent memory leaks\n        this.removeLayers();\n        this.removeViews();\n    },\n\n    getComputedSize: function() {\n\n        var options = this.options;\n        var w = options.width;\n        var h = options.height;\n        if (!isNumber(w)) w = this.el.clientWidth;\n        if (!isNumber(h)) h = this.el.clientHeight;\n        return { width: w, height: h };\n    },\n\n    setDimensions: function(width, height, data = {}) {\n        const { options } = this;\n        const { width: currentWidth, height: currentHeight } = options;\n        let w = (width === undefined) ? currentWidth : width;\n        let h = (height === undefined) ? currentHeight : height;\n        if (currentWidth === w && currentHeight === h) return;\n        options.width = w;\n        options.height = h;\n        this._setDimensions();\n        const computedSize = this.getComputedSize();\n        this.trigger('resize', computedSize.width, computedSize.height, data);\n    },\n\n    _setDimensions: function() {\n        const { options } = this;\n        let w = options.width;\n        let h = options.height;\n        if (isNumber(w)) w = `${Math.round(w)}px`;\n        if (isNumber(h)) h = `${Math.round(h)}px`;\n        this.$el.css({\n            width: (w === null) ? '' : w,\n            height: (h === null) ? '' : h\n        });\n    },\n\n    // Expand/shrink the paper to fit the content.\n    // Alternatively signature function(opt)\n    fitToContent: function(gridWidth, gridHeight, padding, opt) {\n\n        if (isObject(gridWidth)) {\n            // first parameter is an option object\n            opt = gridWidth;\n        } else {\n            // Support for a deprecated signature\n            opt = assign({ gridWidth, gridHeight, padding }, opt);\n        }\n\n        const { x, y, width, height } = this.getFitToContentArea(opt);\n        const { sx, sy } = this.scale();\n\n        this.translate(-x * sx, -y * sy, opt);\n        this.setDimensions(width * sx, height * sy, opt);\n\n        return new Rect(x, y, width, height);\n    },\n\n    getFitToContentArea: function(opt = {}) {\n\n        // Calculate the paper size to accommodate all the graph's elements.\n\n        const gridWidth = opt.gridWidth || 1;\n        const gridHeight = opt.gridHeight || 1;\n        const padding = normalizeSides(opt.padding || 0);\n\n        const minWidth = Math.max(opt.minWidth || 0, gridWidth);\n        const minHeight = Math.max(opt.minHeight || 0, gridHeight);\n        const maxWidth = opt.maxWidth || Number.MAX_VALUE;\n        const maxHeight = opt.maxHeight || Number.MAX_VALUE;\n        const newOrigin = opt.allowNewOrigin;\n\n        const area = ('contentArea' in opt) ? new Rect(opt.contentArea) : this.getContentArea(opt);\n        const { sx, sy } = this.scale();\n        area.x *= sx;\n        area.y *= sy;\n        area.width *= sx;\n        area.height *= sy;\n\n        let calcWidth = Math.ceil((area.width + area.x) / gridWidth);\n        let calcHeight = Math.ceil((area.height + area.y) / gridHeight);\n        if (!opt.allowNegativeBottomRight) {\n            calcWidth = Math.max(calcWidth, 1);\n            calcHeight = Math.max(calcHeight, 1);\n        }\n        calcWidth *= gridWidth;\n        calcHeight *= gridHeight;\n\n        let tx = 0;\n        if ((newOrigin === 'negative' && area.x < 0) || (newOrigin === 'positive' && area.x >= 0) || newOrigin === 'any') {\n            tx = Math.ceil(-area.x / gridWidth) * gridWidth;\n            tx += padding.left;\n            calcWidth += tx;\n        }\n\n        let ty = 0;\n        if ((newOrigin === 'negative' && area.y < 0) || (newOrigin === 'positive' && area.y >= 0) || newOrigin === 'any') {\n            ty = Math.ceil(-area.y / gridHeight) * gridHeight;\n            ty += padding.top;\n            calcHeight += ty;\n        }\n\n        calcWidth += padding.right;\n        calcHeight += padding.bottom;\n\n        // Make sure the resulting width and height are greater than minimum.\n        calcWidth = Math.max(calcWidth, minWidth);\n        calcHeight = Math.max(calcHeight, minHeight);\n\n        // Make sure the resulting width and height are lesser than maximum.\n        calcWidth = Math.min(calcWidth, maxWidth);\n        calcHeight = Math.min(calcHeight, maxHeight);\n\n        return new Rect(-tx / sx, -ty / sy, calcWidth / sx, calcHeight / sy);\n    },\n\n    transformToFitContent: function(opt) {\n        opt || (opt = {});\n\n        let contentBBox, contentLocalOrigin;\n        if ('contentArea' in opt) {\n            const contentArea = opt.contentArea;\n            contentBBox = this.localToPaperRect(contentArea);\n            contentLocalOrigin = new Point(contentArea);\n        } else {\n            contentBBox = this.getContentBBox(opt);\n            contentLocalOrigin = this.paperToLocalPoint(contentBBox);\n        }\n\n        if (!contentBBox.width || !contentBBox.height) return;\n\n        defaults(opt, {\n            padding: 0,\n            preserveAspectRatio: true,\n            scaleGrid: null,\n            minScale: 0,\n            maxScale: Number.MAX_VALUE,\n            verticalAlign: 'top',\n            horizontalAlign: 'left',\n            //minScaleX\n            //minScaleY\n            //maxScaleX\n            //maxScaleY\n            //fittingBBox\n        });\n\n        const padding = normalizeSides(opt.padding);\n\n        const minScaleX = opt.minScaleX || opt.minScale;\n        const maxScaleX = opt.maxScaleX || opt.maxScale;\n        const minScaleY = opt.minScaleY || opt.minScale;\n        const maxScaleY = opt.maxScaleY || opt.maxScale;\n\n        let fittingBBox;\n        if (opt.fittingBBox) {\n            fittingBBox = opt.fittingBBox;\n        } else {\n            const currentTranslate = this.translate();\n            const computedSize = this.getComputedSize();\n            fittingBBox = {\n                x: currentTranslate.tx,\n                y: currentTranslate.ty,\n                width: computedSize.width,\n                height: computedSize.height\n            };\n        }\n\n        fittingBBox = new Rect(fittingBBox).moveAndExpand({\n            x: padding.left,\n            y: padding.top,\n            width: -padding.left - padding.right,\n            height: -padding.top - padding.bottom\n        });\n\n        const ctm = this.matrix();\n        const { a: sx, d: sy, e: tx, f: ty } = ctm;\n\n        let newSx = fittingBBox.width / contentBBox.width * sx;\n        let newSy = fittingBBox.height / contentBBox.height * sy;\n\n        if (opt.preserveAspectRatio) {\n            newSx = newSy = Math.min(newSx, newSy);\n        }\n\n        // snap scale to a grid\n        if (opt.scaleGrid) {\n\n            const gridSize = opt.scaleGrid;\n\n            newSx = gridSize * Math.floor(newSx / gridSize);\n            newSy = gridSize * Math.floor(newSy / gridSize);\n        }\n\n        // scale min/max boundaries\n        newSx = Math.min(maxScaleX, Math.max(minScaleX, newSx));\n        newSy = Math.min(maxScaleY, Math.max(minScaleY, newSy));\n\n        const scaleDiff = {\n            x: newSx / sx,\n            y: newSy / sy\n        };\n\n        let newOx = fittingBBox.x - contentLocalOrigin.x * newSx - tx;\n        let newOy = fittingBBox.y - contentLocalOrigin.y * newSy - ty;\n\n        switch (opt.verticalAlign) {\n            case 'middle':\n                newOy = newOy + (fittingBBox.height - contentBBox.height * scaleDiff.y) / 2;\n                break;\n            case 'bottom':\n                newOy = newOy + (fittingBBox.height - contentBBox.height * scaleDiff.y);\n                break;\n            case 'top':\n            default:\n                break;\n        }\n\n        switch (opt.horizontalAlign) {\n            case 'middle':\n                newOx = newOx + (fittingBBox.width - contentBBox.width * scaleDiff.x) / 2;\n                break;\n            case 'right':\n                newOx = newOx + (fittingBBox.width - contentBBox.width * scaleDiff.x);\n                break;\n            case 'left':\n            default:\n                break;\n        }\n\n        ctm.a = newSx;\n        ctm.d = newSy;\n        ctm.e = newOx;\n        ctm.f = newOy;\n        this.matrix(ctm, opt);\n    },\n\n    scaleContentToFit: function(opt) {\n        this.transformToFitContent(opt);\n    },\n\n    // Return the dimensions of the content area in local units (without transformations).\n    getContentArea: function(opt) {\n\n        if (opt && opt.useModelGeometry) {\n            return this.model.getBBox() || new Rect();\n        }\n\n        return V(this.cells).getBBox();\n    },\n\n    // Return the dimensions of the content bbox in the paper units (as it appears on screen).\n    getContentBBox: function(opt) {\n\n        return this.localToPaperRect(this.getContentArea(opt));\n    },\n\n    // Returns a geometry rectangle representing the entire\n    // paper area (coordinates from the left paper border to the right one\n    // and the top border to the bottom one).\n    getArea: function() {\n\n        return this.paperToLocalRect(this.getComputedSize());\n    },\n\n    getRestrictedArea: function(...args) {\n\n        const { restrictTranslate } = this.options;\n\n        let restrictedArea;\n        if (isFunction(restrictTranslate)) {\n            // A method returning a bounding box\n            restrictedArea = restrictTranslate.apply(this, args);\n        } else if (restrictTranslate === true) {\n            // The paper area\n            restrictedArea = this.getArea();\n        } else if (!restrictTranslate) {\n            // falsy value\n            restrictedArea = null;\n        } else {\n            // any other value\n            restrictedArea = new Rect(restrictTranslate);\n        }\n\n        return restrictedArea;\n    },\n\n    createViewForModel: function(cell) {\n\n        const { options } = this;\n        // A class taken from the paper options.\n        var optionalViewClass;\n\n        // A default basic class (either dia.ElementView or dia.LinkView)\n        var defaultViewClass;\n\n        // A special class defined for this model in the corresponding namespace.\n        // e.g. joint.shapes.standard.Rectangle searches for joint.shapes.standard.RectangleView\n        var namespace = options.cellViewNamespace;\n        var type = cell.get('type') + 'View';\n        var namespaceViewClass = getByPath(namespace, type, '.');\n\n        if (cell.isLink()) {\n            optionalViewClass = options.linkView;\n            defaultViewClass = LinkView;\n        } else {\n            optionalViewClass = options.elementView;\n            defaultViewClass = ElementView;\n        }\n\n        // a) the paper options view is a class (deprecated)\n        //  1. search the namespace for a view\n        //  2. if no view was found, use view from the paper options\n        // b) the paper options view is a function\n        //  1. call the function from the paper options\n        //  2. if no view was return, search the namespace for a view\n        //  3. if no view was found, use the default\n        var ViewClass = (optionalViewClass.prototype instanceof ViewBase)\n            ? namespaceViewClass || optionalViewClass\n            : optionalViewClass.call(this, cell) || namespaceViewClass || defaultViewClass;\n\n        return new ViewClass({\n            model: cell,\n            interactive: options.interactive,\n            labelsLayer: options.labelsLayer === true ? LayersNames.LABELS : options.labelsLayer\n        });\n    },\n\n    removeView: function(cell) {\n\n        const { id } = cell;\n        const { _views, _updates } = this;\n        const view = _views[id];\n        if (view) {\n            var { cid } = view;\n            const { mounted, unmounted } = _updates;\n            view.remove();\n            delete _views[id];\n            delete mounted[cid];\n            delete unmounted[cid];\n        }\n        return view;\n    },\n\n    renderView: function(cell, opt) {\n\n        const { id } = cell;\n        const views = this._views;\n        let view, flag;\n        let create = true;\n        if (id in views) {\n            view = views[id];\n            if (view.model === cell) {\n                flag = view.FLAG_INSERT;\n                create = false;\n            } else {\n                // The view for this `id` already exist.\n                // The cell is a new instance of the model with identical id\n                // We simply remove the existing view and create a new one\n                this.removeView(cell);\n            }\n        }\n        if (create) {\n            view = views[id] = this.createViewForModel(cell);\n            view.paper = this;\n            flag = this.registerUnmountedView(view) | this.FLAG_INIT | view.getFlag(result(view, 'initFlag'));\n        }\n        this.requestViewUpdate(view, flag, view.UPDATE_PRIORITY, opt);\n        return view;\n    },\n\n    onImageDragStart: function() {\n        // This is the only way to prevent image dragging in Firefox that works.\n        // Setting -moz-user-select: none, draggable=\"false\" attribute or user-drag: none didn't help.\n\n        return false;\n    },\n\n    resetViews: function(cells, opt) {\n        opt || (opt = {});\n        cells || (cells = []);\n        this._resetUpdates();\n        // clearing views removes any event listeners\n        this.removeViews();\n        // Allows to unfreeze normally while in the idle state using autoFreeze option\n        const key = this.options.autoFreeze ? null : 'reset';\n        this.freeze({ key });\n        for (var i = 0, n = cells.length; i < n; i++) {\n            this.renderView(cells[i], opt);\n        }\n        this.unfreeze({ key });\n        this.sortViews();\n    },\n\n    removeViews: function() {\n\n        invoke(this._views, 'remove');\n\n        this._views = {};\n    },\n\n    sortViews: function() {\n\n        if (!this.isExactSorting()) {\n            // noop\n            return;\n        }\n        if (this.isFrozen()) {\n            // sort views once unfrozen\n            this._updates.sort = true;\n            return;\n        }\n        this.sortViewsExact();\n    },\n\n    sortViewsExact: function() {\n\n        // Run insertion sort algorithm in order to efficiently sort DOM elements according to their\n        // associated model `z` attribute.\n\n        var cellNodes = Array.from(this.cells.childNodes).filter(node => node.getAttribute('model-id'));\n        var cells = this.model.get('cells');\n\n        sortElements(cellNodes, function(a, b) {\n            var cellA = cells.get(a.getAttribute('model-id'));\n            var cellB = cells.get(b.getAttribute('model-id'));\n            var zA = cellA.attributes.z || 0;\n            var zB = cellB.attributes.z || 0;\n            return (zA === zB) ? 0 : (zA < zB) ? -1 : 1;\n        });\n    },\n\n    insertView: function(view, isInitialInsert) {\n        const layerView = this.getLayerView(LayersNames.CELLS);\n        const { el, model } = view;\n        switch (this.options.sorting) {\n            case sortingTypes.APPROX:\n                layerView.insertSortedNode(el, model.get('z'));\n                break;\n            case sortingTypes.EXACT:\n            default:\n                layerView.insertNode(el);\n                break;\n        }\n        view.onMount(isInitialInsert);\n    },\n\n    detachView(view) {\n        view.unmount();\n        view.onDetach();\n    },\n\n    // Find the first view climbing up the DOM tree starting at element `el`. Note that `el` can also\n    // be a selector or a jQuery object.\n    findView: function($el) {\n\n        var el = isString($el)\n            ? this.cells.querySelector($el)\n            : $el instanceof $ ? $el[0] : $el;\n\n        var id = this.findAttribute('model-id', el);\n        if (id) return this._views[id];\n\n        return undefined;\n    },\n\n    // Find a view for a model `cell`. `cell` can also be a string or number representing a model `id`.\n    findViewByModel: function(cell) {\n\n        var id = (isString(cell) || isNumber(cell)) ? cell : (cell && cell.id);\n\n        return this._views[id];\n    },\n\n    // Find all views at given point\n    findViewsFromPoint: function(p) {\n\n        p = new Point(p);\n\n        var views = this.model.getElements().map(this.findViewByModel, this);\n\n        return views.filter(function(view) {\n            return view && view.vel.getBBox({ target: this.cells }).containsPoint(p);\n        }, this);\n    },\n\n    // Find all views in given area\n    findViewsInArea: function(rect, opt) {\n\n        opt = defaults(opt || {}, { strict: false });\n        rect = new Rect(rect);\n\n        var views = this.model.getElements().map(this.findViewByModel, this);\n        var method = opt.strict ? 'containsRect' : 'intersect';\n\n        return views.filter(function(view) {\n            return view && rect[method](view.vel.getBBox({ target: this.cells }));\n        }, this);\n    },\n\n    findElementViewsInArea(plainArea, opt) {\n        return this._filterViewsInArea(\n            plainArea,\n            (extArea, findOpt) => this.model.findElementsInArea(extArea, findOpt),\n            opt\n        );\n    },\n\n    findLinkViewsInArea: function(plainArea, opt) {\n        return this._filterViewsInArea(\n            plainArea,\n            (extArea, findOpt) => this.model.findLinksInArea(extArea, findOpt),\n            opt\n        );\n    },\n\n    findCellViewsInArea: function(plainArea, opt) {\n        return this._filterViewsInArea(\n            plainArea,\n            (extArea, findOpt) => this.model.findCellsInArea(extArea, findOpt),\n            opt\n        );\n    },\n\n    findElementViewsAtPoint: function(plainPoint, opt) {\n        return this._filterViewsAtPoint(\n            plainPoint,\n            (extArea) => this.model.findElementsInArea(extArea),\n            opt\n        );\n    },\n\n    findLinkViewsAtPoint: function(plainPoint, opt) {\n        return this._filterViewsAtPoint(\n            plainPoint,\n            (extArea) => this.model.findLinksInArea(extArea),\n            opt,\n        );\n    },\n\n    findCellViewsAtPoint: function(plainPoint, opt) {\n        return this._filterViewsAtPoint(\n            plainPoint,\n            // Note: we do not want to pass `opt` to `findCellsInArea`\n            // because the `strict` option works differently for querying at a point\n            (extArea) => this.model.findCellsInArea(extArea),\n            opt\n        );\n    },\n\n    _findInExtendedArea: function(area, findCellsFn, opt = {}) {\n        const {\n            buffer = this.DEFAULT_FIND_BUFFER,\n        } = opt;\n        const extendedArea = (new Rect(area)).inflate(buffer);\n        const cellsInExtendedArea = findCellsFn(extendedArea, opt);\n        return cellsInExtendedArea.map(element => this.findViewByModel(element));\n    },\n\n    _filterViewsInArea: function(plainArea, findCells, opt = {}) {\n        const area = new Rect(plainArea);\n        const viewsInExtendedArea = this._findInExtendedArea(area, findCells, opt);\n        const viewsInArea = viewsInExtendedArea.filter(view => {\n            if (!view) return false;\n            return view.isInArea(area, opt);\n        });\n        return viewsInArea;\n    },\n\n    _filterViewsAtPoint: function(plainPoint, findCells, opt = {}) {\n        const area = new Rect(plainPoint); // zero-size area\n        const viewsInExtendedArea = this._findInExtendedArea(area, findCells, opt);\n        const viewsAtPoint = viewsInExtendedArea.filter(view => {\n            if (!view) return false;\n            return view.isAtPoint(plainPoint, opt);\n        });\n        return viewsAtPoint;\n    },\n\n    removeTools: function() {\n        this.dispatchToolsEvent('remove');\n        return this;\n    },\n\n    hideTools: function() {\n        this.dispatchToolsEvent('hide');\n        return this;\n    },\n\n    showTools: function() {\n        this.dispatchToolsEvent('show');\n        return this;\n    },\n\n    dispatchToolsEvent: function(event, ...args) {\n        if (typeof event !== 'string') return;\n        this.trigger('tools:event', event, ...args);\n    },\n\n\n    getModelById: function(id) {\n\n        return this.model.getCell(id);\n    },\n\n    snapToGrid: function(x, y) {\n\n        // Convert global coordinates to the local ones of the `viewport`. Otherwise,\n        // improper transformation would be applied when the viewport gets transformed (scaled/rotated).\n        return this.clientToLocalPoint(x, y).snapToGrid(this.options.gridSize);\n    },\n\n    localToPaperPoint: function(x, y) {\n        // allow `x` to be a point and `y` undefined\n        var localPoint = new Point(x, y);\n        var paperPoint = V.transformPoint(localPoint, this.matrix());\n        return paperPoint;\n    },\n\n    localToPaperRect: function(x, y, width, height) {\n        // allow `x` to be a rectangle and rest arguments undefined\n        var localRect = new Rect(x, y, width, height);\n        var paperRect = V.transformRect(localRect, this.matrix());\n        return paperRect;\n    },\n\n    paperToLocalPoint: function(x, y) {\n        // allow `x` to be a point and `y` undefined\n        var paperPoint = new Point(x, y);\n        var localPoint = V.transformPoint(paperPoint, this.matrix().inverse());\n        return localPoint;\n    },\n\n    paperToLocalRect: function(x, y, width, height) {\n        // allow `x` to be a rectangle and rest arguments undefined\n        var paperRect = new Rect(x, y, width, height);\n        var localRect = V.transformRect(paperRect, this.matrix().inverse());\n        return localRect;\n    },\n\n    localToClientPoint: function(x, y) {\n        // allow `x` to be a point and `y` undefined\n        var localPoint = new Point(x, y);\n        var clientPoint = V.transformPoint(localPoint, this.clientMatrix());\n        return clientPoint;\n    },\n\n    localToClientRect: function(x, y, width, height) {\n        // allow `x` to be a point and `y` undefined\n        var localRect = new Rect(x, y, width, height);\n        var clientRect = V.transformRect(localRect, this.clientMatrix());\n        return clientRect;\n    },\n\n    // Transform client coordinates to the paper local coordinates.\n    // Useful when you have a mouse event object and you'd like to get coordinates\n    // inside the paper that correspond to `evt.clientX` and `evt.clientY` point.\n    // Example: var localPoint = paper.clientToLocalPoint({ x: evt.clientX, y: evt.clientY });\n    clientToLocalPoint: function(x, y) {\n        // allow `x` to be a point and `y` undefined\n        var clientPoint = new Point(x, y);\n        var localPoint = V.transformPoint(clientPoint, this.clientMatrix().inverse());\n        return localPoint;\n    },\n\n    clientToLocalRect: function(x, y, width, height) {\n        // allow `x` to be a point and `y` undefined\n        var clientRect = new Rect(x, y, width, height);\n        var localRect = V.transformRect(clientRect, this.clientMatrix().inverse());\n        return localRect;\n    },\n\n    localToPagePoint: function(x, y) {\n\n        return this.localToPaperPoint(x, y).offset(this.pageOffset());\n    },\n\n    localToPageRect: function(x, y, width, height) {\n\n        return this.localToPaperRect(x, y, width, height).offset(this.pageOffset());\n    },\n\n    pageToLocalPoint: function(x, y) {\n\n        var pagePoint = new Point(x, y);\n        var paperPoint = pagePoint.difference(this.pageOffset());\n        return this.paperToLocalPoint(paperPoint);\n    },\n\n    pageToLocalRect: function(x, y, width, height) {\n\n        var pageOffset = this.pageOffset();\n        var paperRect = new Rect(x, y, width, height);\n        paperRect.x -= pageOffset.x;\n        paperRect.y -= pageOffset.y;\n        return this.paperToLocalRect(paperRect);\n    },\n\n    clientOffset: function() {\n\n        var clientRect = this.svg.getBoundingClientRect();\n        return new Point(clientRect.left, clientRect.top);\n    },\n\n    pageOffset: function() {\n\n        return this.clientOffset().offset(window.scrollX, window.scrollY);\n    },\n\n    linkAllowed: function(linkView) {\n\n        if (!(linkView instanceof LinkView)) {\n            throw new Error('Must provide a linkView.');\n        }\n\n        var link = linkView.model;\n        var paperOptions = this.options;\n        var graph = this.model;\n        var ns = graph.constructor.validations;\n\n        if (!paperOptions.multiLinks) {\n            if (!ns.multiLinks.call(this, graph, link)) return false;\n        }\n\n        if (!paperOptions.linkPinning) {\n            // Link pinning is not allowed and the link is not connected to the target.\n            if (!ns.linkPinning.call(this, graph, link)) return false;\n        }\n\n        if (typeof paperOptions.allowLink === 'function') {\n            if (!paperOptions.allowLink.call(this, linkView, this)) return false;\n        }\n\n        return true;\n    },\n\n    getDefaultLink: function(cellView, magnet) {\n\n        return isFunction(this.options.defaultLink)\n        // default link is a function producing link model\n            ? this.options.defaultLink.call(this, cellView, magnet)\n        // default link is the mvc model\n            : this.options.defaultLink.clone();\n    },\n\n    // Cell highlighting.\n    // ------------------\n\n    resolveHighlighter: function(opt = {}) {\n\n        let { highlighter: highlighterDef, type } = opt;\n        const { highlighting,highlighterNamespace  } = this.options;\n\n        /*\n            Expecting opt.highlighter to have the following structure:\n            {\n                name: 'highlighter-name',\n                options: {\n                    some: 'value'\n                }\n            }\n        */\n        if (highlighterDef === undefined) {\n\n            // Is highlighting disabled?\n            if (!highlighting) return false;\n            // check for built-in types\n            if (type) {\n                highlighterDef = highlighting[type];\n                // Is a specific type highlight disabled?\n                if (highlighterDef === false) return false;\n            }\n            if (!highlighterDef) {\n                // Type not defined use default highlight\n                highlighterDef = highlighting['default'];\n            }\n        }\n\n        // Do nothing if opt.highlighter is falsy.\n        // This allows the case to not highlight cell(s) in certain cases.\n        // For example, if you want to NOT highlight when embedding elements\n        // or use a custom highlighter.\n        if (!highlighterDef) return false;\n\n        // Allow specifying a highlighter by name.\n        if (isString(highlighterDef)) {\n            highlighterDef = {\n                name: highlighterDef\n            };\n        }\n\n        const name = highlighterDef.name;\n        const highlighter = highlighterNamespace[name];\n\n        // Highlighter validation\n        if (!highlighter) {\n            throw new Error('Unknown highlighter (\"' + name + '\")');\n        }\n        if (typeof highlighter.highlight !== 'function') {\n            throw new Error('Highlighter (\"' + name + '\") is missing required highlight() method');\n        }\n        if (typeof highlighter.unhighlight !== 'function') {\n            throw new Error('Highlighter (\"' + name + '\") is missing required unhighlight() method');\n        }\n\n        return {\n            highlighter,\n            options: highlighterDef.options || {},\n            name\n        };\n    },\n\n    onCellHighlight: function(cellView, magnetEl, opt) {\n        const highlighterDescriptor = this.resolveHighlighter(opt);\n        if (!highlighterDescriptor) return;\n        const { highlighter, options } = highlighterDescriptor;\n        highlighter.highlight(cellView, magnetEl, options);\n    },\n\n    onCellUnhighlight: function(cellView, magnetEl, opt) {\n        const highlighterDescriptor = this.resolveHighlighter(opt);\n        if (!highlighterDescriptor) return;\n        const { highlighter, options } = highlighterDescriptor;\n        highlighter.unhighlight(cellView, magnetEl, options);\n    },\n\n    // Interaction.\n    // ------------\n\n    pointerdblclick: function(evt) {\n\n        evt.preventDefault();\n\n        // magnetpointerdblclick can stop propagation\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n        if (view) {\n            view.pointerdblclick(evt, localPoint.x, localPoint.y);\n\n        } else {\n            this.trigger('blank:pointerdblclick', evt, localPoint.x, localPoint.y);\n        }\n    },\n\n    pointerclick: function(evt) {\n\n        // magnetpointerclick can stop propagation\n\n        var data = this.eventData(evt);\n        // Trigger event only if mouse has not moved.\n        if (data.mousemoved <= this.options.clickThreshold) {\n\n            evt = normalizeEvent(evt);\n\n            var view = this.findView(evt.target);\n            if (this.guard(evt, view)) return;\n\n            var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n            if (view) {\n                view.pointerclick(evt, localPoint.x, localPoint.y);\n\n            } else {\n                this.trigger('blank:pointerclick', evt, localPoint.x, localPoint.y);\n            }\n        }\n    },\n\n    contextmenu: function(evt) {\n\n        if (this.options.preventContextMenu) evt.preventDefault();\n\n        if (this.contextMenuFired) {\n            this.contextMenuFired = false;\n            return;\n        }\n\n        evt = normalizeEvent(evt);\n\n        this.contextMenuTrigger(evt);\n    },\n\n    contextMenuTrigger: function(evt) {\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n        if (view) {\n            view.contextmenu(evt, localPoint.x, localPoint.y);\n\n        } else {\n            this.trigger('blank:contextmenu', evt, localPoint.x, localPoint.y);\n        }\n    },\n\n    pointerdown: function(evt) {\n\n        evt = normalizeEvent(evt);\n\n        const { target, button } = evt;\n        const view = this.findView(target);\n        const isContextMenu = (button === 2);\n\n        if (view) {\n\n            if (!isContextMenu && this.guard(evt, view)) return;\n\n            const isTargetFormNode = this.FORM_CONTROL_TAG_NAMES.includes(target.tagName);\n\n            if (this.options.preventDefaultViewAction && !isTargetFormNode) {\n                // If the target is a form element, we do not want to prevent the default action.\n                // For example, we want to be able to select text in a text input or\n                // to be able to click on a checkbox.\n                evt.preventDefault();\n            }\n\n            if (isTargetFormNode) {\n                // If the target is a form element, we do not want to start dragging the element.\n                // For example, we want to be able to select text by dragging the mouse.\n                view.preventDefaultInteraction(evt);\n            }\n\n            // Custom event\n            const eventEvt = this.customEventTrigger(evt, view);\n            if (eventEvt) {\n            // `onevent` could have stopped propagation\n                if (eventEvt.isPropagationStopped()) return;\n\n                evt.data = eventEvt.data;\n            }\n\n            // Element magnet\n            const magnetNode = target.closest('[magnet]');\n            if (magnetNode && view.el !== magnetNode && view.el.contains(magnetNode)) {\n                const magnetEvt = normalizeEvent(new $.Event(evt.originalEvent, {\n                    data: evt.data,\n                    // Originally the event listener was attached to the magnet element.\n                    currentTarget: magnetNode\n                }));\n                this.onmagnet(magnetEvt);\n                if (magnetEvt.isDefaultPrevented()) {\n                    evt.preventDefault();\n                }\n                // `onmagnet` stops propagation when `addLinkFromMagnet` is allowed\n                if (magnetEvt.isPropagationStopped()) {\n                    // `magnet:pointermove` and `magnet:pointerup` events must be fired\n                    if (isContextMenu) return;\n                    this.delegateDragEvents(view, magnetEvt.data);\n                    return;\n                }\n                evt.data = magnetEvt.data;\n            }\n        }\n\n        if (isContextMenu) {\n            this.contextMenuFired = true;\n            const contextmenuEvt = new $.Event(evt.originalEvent, { type: 'contextmenu', data: evt.data });\n            this.contextMenuTrigger(contextmenuEvt);\n        } else {\n            const localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n            if (view) {\n                view.pointerdown(evt, localPoint.x, localPoint.y);\n            } else {\n                if (this.options.preventDefaultBlankAction) {\n                    evt.preventDefault();\n                }\n                this.trigger('blank:pointerdown', evt, localPoint.x, localPoint.y);\n            }\n\n            this.delegateDragEvents(view, evt.data);\n        }\n\n    },\n\n    pointermove: function(evt) {\n\n        // mouse moved counter\n        var data = this.eventData(evt);\n        if (!data.mousemoved) {\n            data.mousemoved = 0;\n            // Make sure that events like `mouseenter` and `mouseleave` are\n            // not triggered while the user is dragging a cellView.\n            this.undelegateEvents();\n            // Note: the events are undelegated after the first `pointermove` event.\n            // Not on `pointerdown` to make sure that `dbltap` is recognized.\n        }\n\n        var mousemoved = ++data.mousemoved;\n\n        if (mousemoved <= this.options.moveThreshold) return;\n\n        evt = normalizeEvent(evt);\n\n        var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n\n        var view = data.sourceView;\n        if (view) {\n            view.pointermove(evt, localPoint.x, localPoint.y);\n        } else {\n            this.trigger('blank:pointermove', evt, localPoint.x, localPoint.y);\n        }\n\n        this.eventData(evt, data);\n    },\n\n    pointerup: function(evt) {\n\n        this.undelegateDocumentEvents();\n\n        var normalizedEvt = normalizeEvent(evt);\n\n        var localPoint = this.snapToGrid(normalizedEvt.clientX, normalizedEvt.clientY);\n\n        var view = this.eventData(evt).sourceView;\n        if (view) {\n            view.pointerup(normalizedEvt, localPoint.x, localPoint.y);\n        } else {\n            this.trigger('blank:pointerup', normalizedEvt, localPoint.x, localPoint.y);\n        }\n\n        if (!normalizedEvt.isPropagationStopped()) {\n            this.pointerclick(new $.Event(evt.originalEvent, { type: 'click', data: evt.data }));\n        }\n\n        this.delegateEvents();\n    },\n\n    mouseover: function(evt) {\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        if (view) {\n            view.mouseover(evt);\n\n        } else {\n            if (this.el === evt.target) return; // prevent border of paper from triggering this\n            this.trigger('blank:mouseover', evt);\n        }\n    },\n\n    mouseout: function(evt) {\n\n        evt = normalizeEvent(evt);\n\n        var view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        if (view) {\n            view.mouseout(evt);\n\n        } else {\n            if (this.el === evt.target) return; // prevent border of paper from triggering this\n            this.trigger('blank:mouseout', evt);\n        }\n    },\n\n    mouseenter: function(evt) {\n\n        evt = normalizeEvent(evt);\n\n        const {\n            target, // The EventTarget the pointing device entered to\n            relatedTarget, // The EventTarget the pointing device exited from\n            currentTarget // The EventTarget on which the event listener was registered\n        } = evt;\n        const view = this.findView(target);\n        if (this.guard(evt, view)) return;\n        const relatedView = this.findView(relatedTarget);\n        if (view) {\n            if (relatedView === view) {\n                // Mouse left a cell tool\n                return;\n            }\n            view.mouseenter(evt);\n            if (this.el.contains(relatedTarget)) {\n                // The pointer remains inside the paper.\n                return;\n            }\n        }\n        if (relatedView) {\n            return;\n        }\n        // prevent double `mouseenter` event if the `relatedTarget` is outside the paper\n        // (mouseenter method would be fired twice)\n        if (currentTarget === this.el) {\n            // `paper` (more descriptive), not `blank`\n            this.trigger('paper:mouseenter', evt);\n        }\n    },\n\n    mouseleave: function(evt) {\n\n        evt = normalizeEvent(evt);\n\n        const {\n            target, // The EventTarget the pointing device exited from\n            relatedTarget, // The EventTarget the pointing device entered to\n            currentTarget // The EventTarget on which the event listener was registered\n        } = evt;\n        const view = this.findView(target);\n        if (this.guard(evt, view)) return;\n        const relatedView = this.findView(relatedTarget);\n        if (view) {\n            if (relatedView === view) {\n                // Mouse entered a cell tool\n                return;\n            }\n            view.mouseleave(evt);\n            if (this.el.contains(relatedTarget)) {\n                // The pointer has exited a cellView. The pointer is still inside of the paper.\n                return;\n            }\n        }\n        if (relatedView) {\n            // The pointer has entered a new cellView\n            return;\n        }\n        // prevent double `mouseleave` event if the `relatedTarget` is outside the paper\n        // (mouseleave method would be fired twice)\n        if (currentTarget === this.el) {\n            // There is no cellView under the pointer, nor the blank area of the paper\n            this.trigger('paper:mouseleave', evt);\n        }\n    },\n\n    _processMouseWheelEvtBuf: debounce(function() {\n        const { event, deltas } = this._mw_evt_buffer;\n        const deltaY = deltas.reduce((acc, deltaY) => acc + cap(deltaY, WHEEL_CAP), 0);\n\n        const scale = Math.pow(0.995, deltaY); // 1.005 for inverted pinch/zoom\n        const { x, y } = this.clientToLocalPoint(event.clientX, event.clientY);\n        this.trigger('paper:pinch', event, x, y, scale);\n\n        this._mw_evt_buffer = {\n            event: null,\n            deltas: [],\n        };\n    }, WHEEL_WAIT_MS, { maxWait: WHEEL_WAIT_MS }),\n\n    mousewheel: function(evt) {\n\n        evt = normalizeEvent(evt);\n\n        const view = this.findView(evt.target);\n        if (this.guard(evt, view)) return;\n\n        const originalEvent = evt.originalEvent;\n        const localPoint = this.snapToGrid(originalEvent.clientX, originalEvent.clientY);\n        const { deltaX, deltaY } = normalizeWheel(originalEvent);\n\n        const pinchHandlers = this._events['paper:pinch'];\n\n        // Touchpad devices will send a fake CTRL press when a pinch is performed\n        //\n        // We also check if there are any subscribers to paper:pinch event. If there are none,\n        // just skip the entire block of code (we don't want to blindly call\n        // .preventDefault() if we really don't have to).\n        if (evt.ctrlKey && pinchHandlers && pinchHandlers.length > 0) {\n            // This is a pinch gesture, it's safe to assume that we must call .preventDefault()\n            originalEvent.preventDefault();\n            this._mw_evt_buffer.event = evt;\n            this._mw_evt_buffer.deltas.push(deltaY);\n            this._processMouseWheelEvtBuf();\n        } else {\n            const delta = Math.max(-1, Math.min(1, originalEvent.wheelDelta));\n            if (view) {\n                view.mousewheel(evt, localPoint.x, localPoint.y, delta);\n\n            } else {\n                this.trigger('blank:mousewheel', evt, localPoint.x, localPoint.y, delta);\n            }\n\n            this.trigger('paper:pan', evt, deltaX, deltaY);\n        }\n    },\n\n    onevent: function(evt) {\n\n        var eventNode = evt.currentTarget;\n        var eventName = eventNode.getAttribute('event');\n        if (eventName) {\n            var view = this.findView(eventNode);\n            if (view) {\n\n                evt = normalizeEvent(evt);\n                if (this.guard(evt, view)) return;\n\n                var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n                view.onevent(evt, eventName, localPoint.x, localPoint.y);\n            }\n        }\n    },\n\n    magnetEvent: function(evt, handler) {\n\n        var magnetNode = evt.currentTarget;\n        var magnetValue = magnetNode.getAttribute('magnet');\n        if (magnetValue) {\n            var view = this.findView(magnetNode);\n            if (view) {\n                evt = normalizeEvent(evt);\n                if (this.guard(evt, view)) return;\n                var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n                handler.call(this, view, evt, magnetNode, localPoint.x, localPoint.y);\n            }\n        }\n    },\n\n    onmagnet: function(evt) {\n\n        if (evt.button === 2) {\n            this.contextMenuFired = true;\n            this.magnetContextMenuFired = true;\n            const contextmenuEvt = new $.Event(evt.originalEvent, {\n                type: 'contextmenu',\n                data: evt.data,\n                currentTarget: evt.currentTarget,\n            });\n            this.magnetContextMenuTrigger(contextmenuEvt);\n            if (contextmenuEvt.isPropagationStopped()) {\n                evt.stopPropagation();\n            }\n        } else {\n            this.magnetEvent(evt, function(view, evt, _, x, y) {\n                view.onmagnet(evt, x, y);\n            });\n        }\n    },\n\n    magnetpointerdblclick: function(evt) {\n\n        this.magnetEvent(evt, function(view, evt, magnet, x, y) {\n            view.magnetpointerdblclick(evt, magnet, x, y);\n        });\n    },\n\n    magnetcontextmenu: function(evt) {\n        if (this.options.preventContextMenu) evt.preventDefault();\n\n        if (this.magnetContextMenuFired) {\n            this.magnetContextMenuFired = false;\n            return;\n        }\n\n        this.magnetContextMenuTrigger(evt);\n    },\n\n    magnetContextMenuTrigger: function(evt) {\n        this.magnetEvent(evt, function(view, evt, magnet, x, y) {\n            view.magnetcontextmenu(evt, magnet, x, y);\n        });\n    },\n\n    onlabel: function(evt) {\n\n        var labelNode = evt.currentTarget;\n\n        var view = this.findView(labelNode);\n        if (!view) return;\n\n        evt = normalizeEvent(evt);\n        if (this.guard(evt, view)) return;\n\n        // Custom event\n        const eventEvt = this.customEventTrigger(evt, view, labelNode);\n        if (eventEvt) {\n            // `onevent` could have stopped propagation\n            if (eventEvt.isPropagationStopped()) return;\n\n            evt.data = eventEvt.data;\n        }\n\n        var localPoint = this.snapToGrid(evt.clientX, evt.clientY);\n        view.onlabel(evt, localPoint.x, localPoint.y);\n    },\n\n    getPointerArgs(evt) {\n        const normalizedEvt = normalizeEvent(evt);\n        const { x, y } = this.snapToGrid(normalizedEvt.clientX, normalizedEvt.clientY);\n        return [normalizedEvt, x, y];\n    },\n\n    delegateDragEvents: function(view, data) {\n\n        data || (data = {});\n        this.eventData({ data: data }, { sourceView: view || null, mousemoved: 0 });\n        this.delegateDocumentEvents(null, data);\n    },\n\n    // Guard the specified event. If the event should be ignored, guard returns `true`.\n    // Otherwise, it returns `false`.\n    guard: function(evt, view) {\n\n        if (evt.type === 'mousedown' && evt.button === 2) {\n            // handled as `contextmenu` type\n            return true;\n        }\n\n        if (this.options.guard && this.options.guard(evt, view)) {\n            return true;\n        }\n\n        if (evt.data && evt.data.guarded !== undefined) {\n            return evt.data.guarded;\n        }\n\n        const { target } = evt;\n\n        if (this.GUARDED_TAG_NAMES.includes(target.tagName)) {\n            return true;\n        }\n\n        if (view && view.model && (view.model instanceof Cell)) {\n            return false;\n        }\n\n        if (this.el === target || this.svg.contains(target)) {\n            return false;\n        }\n\n        return true;    // Event guarded. Paper should not react on it in any way.\n    },\n\n    setGridSize: function(gridSize) {\n        const { options } = this;\n        options.gridSize = gridSize;\n        if (options.drawGrid && !options.drawGridSize) {\n            // Do not redraw the grid if the `drawGridSize` is set.\n            this.getLayerView(LayersNames.GRID).renderGrid();\n        }\n        return this;\n    },\n\n    setGrid: function(drawGrid) {\n        this.getLayerView(LayersNames.GRID).setGrid(drawGrid);\n        return this;\n    },\n\n    updateBackgroundImage: function(opt) {\n\n        opt = opt || {};\n\n        var backgroundPosition = opt.position || 'center';\n        var backgroundSize = opt.size || 'auto auto';\n\n        var currentScale = this.scale();\n        var currentTranslate = this.translate();\n\n        // backgroundPosition\n        if (isObject(backgroundPosition)) {\n            var x = currentTranslate.tx + (currentScale.sx * (backgroundPosition.x || 0));\n            var y = currentTranslate.ty + (currentScale.sy * (backgroundPosition.y || 0));\n            backgroundPosition = x + 'px ' + y + 'px';\n        }\n\n        // backgroundSize\n        if (isObject(backgroundSize)) {\n            backgroundSize = new Rect(backgroundSize).scale(currentScale.sx, currentScale.sy);\n            backgroundSize = backgroundSize.width + 'px ' + backgroundSize.height + 'px';\n        }\n\n        const { background } = this.childNodes;\n        background.style.backgroundSize = backgroundSize;\n        background.style.backgroundPosition = backgroundPosition;\n    },\n\n    drawBackgroundImage: function(img, opt) {\n\n        // Clear the background image if no image provided\n        if (!(img instanceof HTMLImageElement)) {\n            this.childNodes.background.style.backgroundImage = '';\n            return;\n        }\n\n        if (!this._background || this._background.id !== opt.id) {\n            // Draw only the last image requested (see drawBackground())\n            return;\n        }\n\n        opt = opt || {};\n\n        var backgroundImage;\n        var backgroundSize = opt.size;\n        var backgroundRepeat = opt.repeat || 'no-repeat';\n        var backgroundOpacity = opt.opacity || 1;\n        var backgroundQuality = Math.abs(opt.quality) || 1;\n        var backgroundPattern = this.constructor.backgroundPatterns[camelCase(backgroundRepeat)];\n\n        if (isFunction(backgroundPattern)) {\n            // 'flip-x', 'flip-y', 'flip-xy', 'watermark' and custom\n            img.width *= backgroundQuality;\n            img.height *= backgroundQuality;\n            var canvas = backgroundPattern(img, opt);\n            if (!(canvas instanceof HTMLCanvasElement)) {\n                throw new Error('dia.Paper: background pattern must return an HTML Canvas instance');\n            }\n\n            backgroundImage = canvas.toDataURL('image/png');\n            backgroundRepeat = 'repeat';\n            if (isObject(backgroundSize)) {\n                // recalculate the tile size if an object passed in\n                backgroundSize.width *= canvas.width / img.width;\n                backgroundSize.height *= canvas.height / img.height;\n            } else if (backgroundSize === undefined) {\n                // calculate the tile size if no provided\n                opt.size = {\n                    width: canvas.width / backgroundQuality,\n                    height: canvas.height / backgroundQuality\n                };\n            }\n        } else {\n            // backgroundRepeat:\n            // no-repeat', 'round', 'space', 'repeat', 'repeat-x', 'repeat-y'\n            backgroundImage = img.src;\n            if (backgroundSize === undefined) {\n                // pass the image size for  the backgroundSize if no size provided\n                opt.size = {\n                    width: img.width,\n                    height: img.height\n                };\n            }\n        }\n\n        this.childNodes.background.style.opacity = backgroundOpacity;\n        this.childNodes.background.style.backgroundRepeat = backgroundRepeat;\n        this.childNodes.background.style.backgroundImage = `url(${backgroundImage})`;\n\n        this.updateBackgroundImage(opt);\n    },\n\n    updateBackgroundColor: function(color) {\n\n        this.$el.css('backgroundColor', color || '');\n    },\n\n    drawBackground: function(opt) {\n\n        opt = opt || {};\n\n        this.updateBackgroundColor(opt.color);\n\n        if (opt.image) {\n            opt = this._background = cloneDeep(opt);\n            guid(opt);\n            var img = document.createElement('img');\n            img.onload = this.drawBackgroundImage.bind(this, img, opt);\n            img.src = opt.image;\n        } else {\n            this.drawBackgroundImage(null);\n            this._background = null;\n        }\n\n        return this;\n    },\n\n    setInteractivity: function(value) {\n\n        this.options.interactive = value;\n\n        invoke(this._views, 'setInteractivity', value);\n    },\n\n    // Paper definitions.\n    // ------------------\n\n    isDefined: function(defId) {\n\n        return !!this.svg.getElementById(defId);\n    },\n\n    defineFilter: function(filter) {\n\n        if (!isObject(filter)) {\n            throw new TypeError('dia.Paper: defineFilter() requires 1. argument to be an object.');\n        }\n\n        var filterId = filter.id;\n        var name = filter.name;\n        // Generate a hash code from the stringified filter definition. This gives us\n        // a unique filter ID for different definitions.\n        if (!filterId) {\n            filterId = name + this.svg.id + hashCode(JSON.stringify(filter));\n        }\n        // If the filter already exists in the document,\n        // we're done and we can just use it (reference it using `url()`).\n        // If not, create one.\n        if (!this.isDefined(filterId)) {\n\n            var namespace = _filter;\n            var filterSVGString = namespace[name] && namespace[name](filter.args || {});\n            if (!filterSVGString) {\n                throw new Error('Non-existing filter ' + name);\n            }\n\n            // SVG <filter/> attributes\n            var filterAttrs = assign({\n                filterUnits: 'userSpaceOnUse',\n            }, filter.attrs, {\n                id: filterId\n            });\n\n            V(filterSVGString, filterAttrs).appendTo(this.defs);\n        }\n\n        return filterId;\n    },\n\n    defineGradient: function(gradient) {\n        if (!isObject(gradient)) {\n            throw new TypeError('dia.Paper: defineGradient() requires 1. argument to be an object.');\n        }\n        const { svg, defs } = this;\n        const {\n            type,\n            // Generate a hash code from the stringified filter definition. This gives us\n            // a unique filter ID for different definitions.\n            id = type + svg.id + hashCode(JSON.stringify(gradient)),\n            stops,\n            attrs = {}\n        } = gradient;\n        // If the gradient already exists in the document,\n        // we're done and we can just use it (reference it using `url()`).\n        if (this.isDefined(id)) return id;\n        // If not, create one.\n        const stopVEls = toArray(stops).map(({ offset, color, opacity }) => {\n            return V('stop').attr({\n                'offset': offset,\n                'stop-color': color,\n                'stop-opacity': Number.isFinite(opacity) ? opacity : 1\n            });\n        });\n        const gradientVEl = V(type, attrs, stopVEls);\n        gradientVEl.id = id;\n        gradientVEl.appendTo(defs);\n        return id;\n    },\n\n    definePattern: function(pattern) {\n        if (!isObject(pattern)) {\n            throw new TypeError('dia.Paper: definePattern() requires 1. argument to be an object.');\n        }\n        const { svg, defs } = this;\n        const {\n            // Generate a hash code from the stringified filter definition. This gives us\n            // a unique filter ID for different definitions.\n            id = svg.id + hashCode(JSON.stringify(pattern)),\n            markup,\n            attrs = {}\n        } = pattern;\n        if (!markup) {\n            throw new TypeError('dia.Paper: definePattern() requires markup.');\n        }\n        // If the gradient already exists in the document,\n        // we're done and we can just use it (reference it using `url()`).\n        if (this.isDefined(id)) return id;\n        // If not, create one.\n        const patternVEl = V('pattern', {\n            patternUnits: 'userSpaceOnUse'\n        });\n        patternVEl.id = id;\n        patternVEl.attr(attrs);\n        if (typeof markup === 'string') {\n            patternVEl.append(V(markup));\n        } else {\n            const { fragment } = parseDOMJSON(markup);\n            patternVEl.append(fragment);\n        }\n        patternVEl.appendTo(defs);\n        return id;\n    },\n\n    defineMarker: function(marker) {\n        if (!isObject(marker)) {\n            throw new TypeError('dia.Paper: defineMarker() requires the first argument to be an object.');\n        }\n        const { svg, defs } = this;\n        const {\n            // Generate a hash code from the stringified filter definition. This gives us\n            // a unique filter ID for different definitions.\n            id = svg.id + hashCode(JSON.stringify(marker)),\n            // user-provided markup\n            // (e.g. defined when creating link via `attrs/line/sourceMarker/markup`)\n            markup,\n            // user-provided attributes\n            // (e.g. defined when creating link via `attrs/line/sourceMarker/attrs`)\n            // note: `transform` attrs are ignored by browsers\n            attrs = {},\n            // deprecated - use `attrs/markerUnits` instead (which has higher priority)\n            markerUnits = 'userSpaceOnUse'\n        } = marker;\n        // If the marker already exists in the document,\n        // we're done and we can just use it (reference it using `url()`).\n        if (this.isDefined(id)) return id;\n        // If not, create one.\n        const markerVEl = V('marker', {\n            orient: 'auto',\n            overflow: 'visible',\n            markerUnits: markerUnits\n        });\n        markerVEl.id = id;\n        markerVEl.attr(attrs);\n        let markerContentVEl;\n        if (markup) {\n            let markupVEl;\n            if (typeof markup === 'string') {\n                // Marker object has a `markup` property of type string.\n                // - Construct V from the provided string.\n                markupVEl = V(markup);\n                // `markupVEl` is now either a single VEl, or an array of VEls.\n                // - Coerce it to an array.\n                markupVEl = (Array.isArray(markupVEl) ? markupVEl : [markupVEl]);\n            } else {\n                // Marker object has a `markup` property of type object.\n                // - Construct V from the object by parsing it as DOM JSON.\n                const { fragment } = parseDOMJSON(markup);\n                markupVEl = V(fragment).children();\n            }\n            // `markupVEl` is an array with one or more VEls inside.\n            // - If there are multiple VEls, wrap them in a newly-constructed <g> element\n            if (markupVEl.length > 1) {\n                markerContentVEl = V('g').append(markupVEl);\n            } else {\n                markerContentVEl = markupVEl[0];\n            }\n        } else {\n            // Marker object is a flat structure.\n            // - Construct a new V of type `marker.type`.\n            const { type = 'path' } = marker;\n            markerContentVEl = V(type);\n        }\n        // `markerContentVEl` is a single VEl.\n        // Assign additional attributes to it (= context attributes + marker attributes):\n        // - Attribute values are taken from non-special properties of `marker`.\n        const markerAttrs = omit(marker, 'type', 'id', 'markup', 'attrs', 'markerUnits');\n        const markerAttrsKeys = Object.keys(markerAttrs);\n        markerAttrsKeys.forEach((key) => {\n            const value = markerAttrs[key];\n            const markupValue = markerContentVEl.attr(key); // value coming from markupVEl (if any) = higher priority\n            if (markupValue == null) {\n                // Default logic:\n                markerContentVEl.attr(key, value);\n            } else {\n                // Properties with special logic should be added as cases to this switch block:\n                switch(key) {\n                    case 'transform':\n                        // - Prepend `transform` to existing value.\n                        markerContentVEl.attr(key, (value + ' ' + markupValue));\n                        break;\n                }\n            }\n        });\n        markerContentVEl.appendTo(markerVEl);\n        markerVEl.appendTo(defs);\n        return id;\n    },\n\n    customEventTrigger: function(evt, view, rootNode = view.el) {\n\n        const eventNode = evt.target.closest('[event]');\n\n        if (eventNode && rootNode !== eventNode && view.el.contains(eventNode)) {\n            const eventEvt = normalizeEvent(new $.Event(evt.originalEvent, {\n                data: evt.data,\n                // Originally the event listener was attached to the event element.\n                currentTarget: eventNode\n            }));\n\n            this.onevent(eventEvt);\n\n            if (eventEvt.isDefaultPrevented()) {\n                evt.preventDefault();\n            }\n\n            return eventEvt;\n        }\n\n        return null;\n    }\n\n}, {\n\n    sorting: sortingTypes,\n\n    Layers: LayersNames,\n\n    backgroundPatterns: {\n\n        flipXy: function(img) {\n            // d b\n            // q p\n\n            var canvas = document.createElement('canvas');\n            var imgWidth = img.width;\n            var imgHeight = img.height;\n\n            canvas.width = 2 * imgWidth;\n            canvas.height = 2 * imgHeight;\n\n            var ctx = canvas.getContext('2d');\n            // top-left image\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n            // xy-flipped bottom-right image\n            ctx.setTransform(-1, 0, 0, -1, canvas.width, canvas.height);\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n            // x-flipped top-right image\n            ctx.setTransform(-1, 0, 0, 1, canvas.width, 0);\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n            // y-flipped bottom-left image\n            ctx.setTransform(1, 0, 0, -1, 0, canvas.height);\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n\n            return canvas;\n        },\n\n        flipX: function(img) {\n            // d b\n            // d b\n\n            var canvas = document.createElement('canvas');\n            var imgWidth = img.width;\n            var imgHeight = img.height;\n\n            canvas.width = imgWidth * 2;\n            canvas.height = imgHeight;\n\n            var ctx = canvas.getContext('2d');\n            // left image\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n            // flipped right image\n            ctx.translate(2 * imgWidth, 0);\n            ctx.scale(-1, 1);\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n\n            return canvas;\n        },\n\n        flipY: function(img) {\n            // d d\n            // q q\n\n            var canvas = document.createElement('canvas');\n            var imgWidth = img.width;\n            var imgHeight = img.height;\n\n            canvas.width = imgWidth;\n            canvas.height = imgHeight * 2;\n\n            var ctx = canvas.getContext('2d');\n            // top image\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n            // flipped bottom image\n            ctx.translate(0, 2 * imgHeight);\n            ctx.scale(1, -1);\n            ctx.drawImage(img, 0, 0, imgWidth, imgHeight);\n\n            return canvas;\n        },\n\n        watermark: function(img, opt) {\n            //   d\n            // d\n\n            opt = opt || {};\n\n            var imgWidth = img.width;\n            var imgHeight = img.height;\n\n            var canvas = document.createElement('canvas');\n            canvas.width = imgWidth * 3;\n            canvas.height = imgHeight * 3;\n\n            var ctx = canvas.getContext('2d');\n            var angle = isNumber(opt.watermarkAngle) ? -opt.watermarkAngle : -20;\n            var radians = toRad(angle);\n            var stepX = canvas.width / 4;\n            var stepY = canvas.height / 4;\n\n            for (var i = 0; i < 4; i++) {\n                for (var j = 0; j < 4; j++) {\n                    if ((i + j) % 2 > 0) {\n                        // reset the current transformations\n                        ctx.setTransform(1, 0, 0, 1, (2 * i - 1) * stepX, (2 * j - 1) * stepY);\n                        ctx.rotate(radians);\n                        ctx.drawImage(img, -imgWidth / 2, -imgHeight / 2, imgWidth, imgHeight);\n                    }\n                }\n            }\n\n            return canvas;\n        }\n    },\n\n    gridPatterns: {\n        dot: [{\n            color: '#AAAAAA',\n            thickness: 1,\n            markup: 'rect',\n            render: function(el, opt) {\n                V(el).attr({\n                    width: opt.thickness,\n                    height: opt.thickness,\n                    fill: opt.color\n                });\n            }\n        }],\n        fixedDot: [{\n            color: '#AAAAAA',\n            thickness: 1,\n            markup: 'rect',\n            render: function(el, opt) {\n                V(el).attr({ fill: opt.color });\n            },\n            update: function(el, opt, paper) {\n                const { sx, sy } = paper.scale();\n                const width = sx <= 1 ? opt.thickness : opt.thickness / sx;\n                const height = sy <= 1 ? opt.thickness : opt.thickness / sy;\n                V(el).attr({ width, height });\n            }\n        }],\n        mesh: [{\n            color: '#AAAAAA',\n            thickness: 1,\n            markup: 'path',\n            render: function(el, opt) {\n\n                var d;\n                var width = opt.width;\n                var height = opt.height;\n                var thickness = opt.thickness;\n\n                if (width - thickness >= 0 && height - thickness >= 0) {\n                    d = ['M', width, 0, 'H0 M0 0 V0', height].join(' ');\n                } else {\n                    d = 'M 0 0 0 0';\n                }\n\n                V(el).attr({ 'd': d, stroke: opt.color, 'stroke-width': opt.thickness });\n            }\n        }],\n        doubleMesh: [{\n            color: '#AAAAAA',\n            thickness: 1,\n            markup: 'path',\n            render: function(el, opt) {\n\n                var d;\n                var width = opt.width;\n                var height = opt.height;\n                var thickness = opt.thickness;\n\n                if (width - thickness >= 0 && height - thickness >= 0) {\n                    d = ['M', width, 0, 'H0 M0 0 V0', height].join(' ');\n                } else {\n                    d = 'M 0 0 0 0';\n                }\n\n                V(el).attr({ 'd': d, stroke: opt.color, 'stroke-width': opt.thickness });\n            }\n        }, {\n            color: '#000000',\n            thickness: 3,\n            scaleFactor: 4,\n            markup: 'path',\n            render: function(el, opt) {\n\n                var d;\n                var width = opt.width;\n                var height = opt.height;\n                var thickness = opt.thickness;\n\n                if (width - thickness >= 0 && height - thickness >= 0) {\n                    d = ['M', width, 0, 'H0 M0 0 V0', height].join(' ');\n                } else {\n                    d = 'M 0 0 0 0';\n                }\n\n                V(el).attr({ 'd': d, stroke: opt.color, 'stroke-width': opt.thickness });\n            }\n        }]\n    }\n});\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11631, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11637, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/ToolView.mjs"],"sourcesContent":["import * as mvc from '../mvc/index.mjs';\n\nexport const ToolView = mvc.View.extend({\n    name: null,\n    tagName: 'g',\n    className: 'tool',\n    svgElement: true,\n    _visible: true,\n    _visibleExplicit: true,\n\n    init: function() {\n        var name = this.name;\n        if (name) this.vel.attr('data-tool-name', name);\n    },\n\n    configure: function(view, toolsView) {\n        this.relatedView = view;\n        this.paper = view.paper;\n        this.parentView = toolsView;\n        this.simulateRelatedView(this.el);\n        // Delegate events in case the ToolView was removed from the DOM and reused.\n        this.delegateEvents();\n        return this;\n    },\n\n    simulateRelatedView: function(el) {\n        if (el) el.setAttribute('model-id', this.relatedView.model.id);\n    },\n\n    getName: function() {\n        return this.name;\n    },\n\n    // Evaluate the visibility of the tool and update the `display` CSS property\n    updateVisibility: function() {\n        const isVisible = this.computeVisibility();\n        this.el.style.display = isVisible ? '' : 'none';\n        this._visible = isVisible;\n    },\n\n    // Evaluate the visibility of the tool. The method returns `true` if the tool\n    // should be visible in the DOM.\n    computeVisibility() {\n        if (!this.isExplicitlyVisible()) return false;\n        const { visibility } = this.options;\n        if (typeof visibility !== 'function') return true;\n        return !!visibility.call(this, this.relatedView, this);\n    },\n\n    show: function() {\n        this._visibleExplicit = true;\n        this.updateVisibility();\n    },\n\n    hide: function() {\n        this._visibleExplicit = false;\n        this.updateVisibility();\n    },\n\n    // The method returns `false` if the `hide()` method was called on the tool.\n    isExplicitlyVisible: function() {\n        return !!this._visibleExplicit;\n    },\n\n    // The method returns `false` if the tool is not visible (it has `display: none`).\n    // This can happen if the `hide()` method was called or the tool is not visible\n    // because of the `visibility` option was evaluated to `false`.\n    isVisible: function() {\n        return !!this._visible;\n    },\n\n    focus: function() {\n        var opacity = this.options.focusOpacity;\n        if (isFinite(opacity)) this.el.style.opacity = opacity;\n        this.parentView.focusTool(this);\n    },\n\n    blur: function() {\n        this.el.style.opacity = '';\n        this.parentView.blurTool(this);\n    },\n\n    update: function() {\n        // to be overridden\n    },\n\n    guard: function(evt) {\n        // Let the context-menu event bubble up to the relatedView\n        const { paper, relatedView } = this;\n        if (!paper || !relatedView) return true;\n        return paper.guard(evt, relatedView);\n    }\n});\n\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,WAAW,wJAAI,IAAI,CAAC,MAAM,CAAC;IACpC,MAAM;IACN,SAAS;IACT,WAAW;IACX,YAAY;IACZ,UAAU;IACV,kBAAkB;IAElB,MAAM;QACF,IAAI,OAAO,IAAI,CAAC,IAAI;QACpB,IAAI,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB;IAC9C;IAEA,WAAW,SAAS,IAAI,EAAE,SAAS;QAC/B,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,KAAK;QACvB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAAE;QAChC,4EAA4E;QAC5E,IAAI,CAAC,cAAc;QACnB,OAAO,IAAI;IACf;IAEA,qBAAqB,SAAS,EAAE;QAC5B,IAAI,IAAI,GAAG,YAAY,CAAC,YAAY,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;IACjE;IAEA,SAAS;QACL,OAAO,IAAI,CAAC,IAAI;IACpB;IAEA,4EAA4E;IAC5E,kBAAkB;QACd,MAAM,YAAY,IAAI,CAAC,iBAAiB;QACxC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,YAAY,KAAK;QACzC,IAAI,CAAC,QAAQ,GAAG;IACpB;IAEA,6EAA6E;IAC7E,gCAAgC;IAChC;QACI,IAAI,CAAC,IAAI,CAAC,mBAAmB,IAAI,OAAO;QACxC,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,OAAO;QACnC,IAAI,OAAO,eAAe,YAAY,OAAO;QAC7C,OAAO,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI;IACzD;IAEA,MAAM;QACF,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,gBAAgB;IACzB;IAEA,MAAM;QACF,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,gBAAgB;IACzB;IAEA,4EAA4E;IAC5E,qBAAqB;QACjB,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB;IAClC;IAEA,kFAAkF;IAClF,+EAA+E;IAC/E,+DAA+D;IAC/D,WAAW;QACP,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ;IAC1B;IAEA,OAAO;QACH,IAAI,UAAU,IAAI,CAAC,OAAO,CAAC,YAAY;QACvC,IAAI,SAAS,UAAU,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG;QAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI;IAClC;IAEA,MAAM;QACF,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG;QACxB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI;IACjC;IAEA,QAAQ;IACJ,mBAAmB;IACvB;IAEA,OAAO,SAAS,GAAG;QACf,0DAA0D;QAC1D,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,IAAI;QACnC,IAAI,CAAC,SAAS,CAAC,aAAa,OAAO;QACnC,OAAO,MAAM,KAAK,CAAC,KAAK;IAC5B;AACJ","ignoreList":[0]}},
    {"offset": {"line": 11719, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11725, "column": 0}, "map": {"version":3,"sources":["file:///home/phamhoaixuan/DevLens/index_files/node_modules/%40joint/core/src/dia/ToolsView.mjs"],"sourcesContent":["import * as mvc from '../mvc/index.mjs';\nimport * as util from '../util/index.mjs';\nimport { CellView } from './CellView.mjs';\nimport { LayersNames } from './PaperLayer.mjs';\nimport { ToolView } from './ToolView.mjs';\n\nexport const ToolsView = mvc.View.extend({\n    tagName: 'g',\n    className: 'tools',\n    svgElement: true,\n    tools: null,\n    isRendered: false,\n    options: {\n        tools: null,\n        relatedView: null,\n        name: null,\n        // layer?: LayersNames.TOOLS\n        // z?: number\n    },\n\n    configure: function(options) {\n        options = util.assign(this.options, options);\n        var tools = options.tools;\n        if (!Array.isArray(tools)) return this;\n        var relatedView = options.relatedView;\n        if (!(relatedView instanceof CellView)) return this;\n        var views = this.tools = [];\n        for (var i = 0, n = tools.length; i < n; i++) {\n            var tool = tools[i];\n            if (!(tool instanceof ToolView)) continue;\n            tool.configure(relatedView, this);\n            this.vel.append(tool.el);\n            views.push(tool);\n        }\n        this.isRendered = false;\n        relatedView.requestUpdate(relatedView.getFlag('TOOLS'));\n        return this;\n    },\n\n    getName: function() {\n        return this.options.name;\n    },\n\n    update: function(opt) {\n\n        opt || (opt = {});\n        const tools = this.tools;\n        if (!tools) return this;\n        const n = tools.length;\n        const wasRendered = this.isRendered;\n        for (let i = 0; i < n; i++) {\n            const tool = tools[i];\n            tool.updateVisibility();\n            if (!tool.isVisible()) continue;\n            if (this.ensureToolRendered(tools, i) && opt.tool !== tool.cid) {\n                tool.update();\n            }\n        }\n        if (!this.isRendered && n > 0) {\n            // None of the tools is visible\n            // Note: ToolsView with no tools are always mounted\n            return this;\n        }\n        if (!this.isMounted()) {\n            this.mount();\n        }\n        if (!wasRendered) {\n            // Make sure tools are visible (if they were hidden and the tool removed)\n            this.blurTool();\n        }\n        return this;\n    },\n\n    ensureToolRendered(tools, i) {\n        if (!this.isRendered) {\n            // There is at least one visible tool\n            this.isRendered = Array(tools.length).fill(false);\n        }\n        if (!this.isRendered[i]) {\n            // First update executes render()\n            tools[i].render();\n            this.isRendered[i] = true;\n            return false;\n        }\n        return true;\n    },\n\n    focusTool: function(focusedTool) {\n\n        var tools = this.tools;\n        if (!tools) return this;\n        for (var i = 0, n = tools.length; i < n; i++) {\n            var tool = tools[i];\n            if (focusedTool === tool) {\n                tool.show();\n            } else {\n                tool.hide();\n            }\n        }\n        return this;\n    },\n\n    blurTool: function(blurredTool) {\n        var tools = this.tools;\n        if (!tools) return this;\n        for (var i = 0, n = tools.length; i < n; i++) {\n            var tool = tools[i];\n            if (tool !== blurredTool && !tool.isExplicitlyVisible()) {\n                tool.show();\n                // Check if the tool is conditionally visible too\n                if (tool.isVisible()) {\n                    this.ensureToolRendered(tools, i) && tool.update();\n                }\n            }\n        }\n        return this;\n    },\n\n    hide: function() {\n        return this.focusTool(null);\n    },\n\n    show: function() {\n        this.blurTool(null);\n        // If this the first time the tools are shown, make sure they are mounted\n        if (!this.isMounted()) {\n            this.mount();\n        }\n        return this;\n    },\n\n    onRemove: function() {\n        var tools = this.tools;\n        if (!tools) return this;\n        for (var i = 0, n = tools.length; i < n; i++) {\n            tools[i].remove();\n        }\n        this.tools = null;\n    },\n\n    mount: function() {\n        const { options, el } = this;\n        const { relatedView, layer = LayersNames.TOOLS, z } = options;\n        if (relatedView) {\n            if (layer) {\n                relatedView.paper.getLayerView(layer).insertSortedNode(el, z);\n            } else {\n                relatedView.el.appendChild(el);\n            }\n        }\n        return this;\n    }\n\n});\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11871, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}